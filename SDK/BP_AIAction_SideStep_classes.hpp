#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIAction_SideStep

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIAction_SideStep.BP_AIAction_SideStep_C
// 0x0020 (0x0150 - 0x0130)
class UBP_AIAction_SideStep_C final : public UPalAIActionBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0130(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        Right;                                             // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Power;                                             // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Front;                                             // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActionStart(class APawn* ControlledPawn);
	void ActionTick(class APawn* ControlledPawn, float DeltaSeconds);
	void ExecuteUbergraph_BP_AIAction_SideStep(int32 EntryPoint);
	void GetTargetPos(struct FVector* Pos);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIAction_SideStep_C">();
	}
	static class UBP_AIAction_SideStep_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIAction_SideStep_C>();
	}
};
static_assert(alignof(UBP_AIAction_SideStep_C) == 0x000008, "Wrong alignment on UBP_AIAction_SideStep_C");
static_assert(sizeof(UBP_AIAction_SideStep_C) == 0x000150, "Wrong size on UBP_AIAction_SideStep_C");
static_assert(offsetof(UBP_AIAction_SideStep_C, UberGraphFrame) == 0x000130, "Member 'UBP_AIAction_SideStep_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_SideStep_C, Right) == 0x000138, "Member 'UBP_AIAction_SideStep_C::Right' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_SideStep_C, Power) == 0x000140, "Member 'UBP_AIAction_SideStep_C::Power' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_SideStep_C, Front) == 0x000148, "Member 'UBP_AIAction_SideStep_C::Front' has a wrong offset!");

}

