#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_IngameMenu_Chest_LockPass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_IngameMenu_Chest_LockPass.WBP_IngameMenu_Chest_LockPass_C
// 0x0120 (0x0550 - 0x0430)
class UWBP_IngameMenu_Chest_LockPass_C final : public UPalUserWidgetOverlayUI
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_Wrong;                                         // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Correct;                                       // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Setting;                                       // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 SettingsBase;                                      // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Message;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonButton_C*                    WBP_CommonButton;                                  // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNum_C*        WBP_IngameMenu_Chest_LockNum_0;                    // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNum_C*        WBP_IngameMenu_Chest_LockNum_1;                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNum_C*        WBP_IngameMenu_Chest_LockNum_2;                    // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNum_C*        WBP_IngameMenu_Chest_LockNum_3;                    // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNum_C*        WBP_IngameMenu_Chest_LockNum_4;                    // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNum_C*        WBP_IngameMenu_Chest_LockNum_5;                    // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNum_C*        WBP_IngameMenu_Chest_LockNum_6;                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNum_C*        WBP_IngameMenu_Chest_LockNum_7;                    // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNum_C*        WBP_IngameMenu_Chest_LockNum_8;                    // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNum_C*        WBP_IngameMenu_Chest_LockNum_9;                    // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNumInput_C*   WBP_IngameMenu_Chest_LockNumInput;                 // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNumInput_C*   WBP_IngameMenu_Chest_LockNumInput_1;               // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNumInput_C*   WBP_IngameMenu_Chest_LockNumInput_2;               // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_LockNumInput_C*   WBP_IngameMenu_Chest_LockNumInput_3;               // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPalMapObjectPasswordLockModule*        PasswordLockModule;                                // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_IngameMenu_Chest_LockNum_C*> Numpads;                                           // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UWBP_IngameMenu_Chest_LockNumInput_C*> InputNums;                                         // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<int32>                                 InputNumbers;                                      // 0x0500(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDataTableRowHandle                    SettingMsgId;                                      // 0x0510(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    CorrectMsgId;                                      // 0x0520(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    WrongMsgId;                                        // 0x0530(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	class FName                                   TabActionName;                                     // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Authentication;                                 // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_IngameMenu_Chest_LockPass_WBP_CommonButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void CloseAction();
	void Destruct();
	void ExecuteUbergraph_WBP_IngameMenu_Chest_LockPass(int32 EntryPoint);
	class FString GetInputNumberStr();
	void NotifyAuthenticationResult(bool Passed);
	void OnInitialized();
	void OnNumpadClicked(int32 ClickedNum);
	void OnSetup();
	void ResetInput();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_IngameMenu_Chest_LockPass_C">();
	}
	static class UWBP_IngameMenu_Chest_LockPass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_IngameMenu_Chest_LockPass_C>();
	}
};
static_assert(alignof(UWBP_IngameMenu_Chest_LockPass_C) == 0x000008, "Wrong alignment on UWBP_IngameMenu_Chest_LockPass_C");
static_assert(sizeof(UWBP_IngameMenu_Chest_LockPass_C) == 0x000550, "Wrong size on UWBP_IngameMenu_Chest_LockPass_C");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, UberGraphFrame) == 0x000430, "Member 'UWBP_IngameMenu_Chest_LockPass_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, Anm_Wrong) == 0x000438, "Member 'UWBP_IngameMenu_Chest_LockPass_C::Anm_Wrong' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, Anm_Correct) == 0x000440, "Member 'UWBP_IngameMenu_Chest_LockPass_C::Anm_Correct' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, Anm_Setting) == 0x000448, "Member 'UWBP_IngameMenu_Chest_LockPass_C::Anm_Setting' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, SettingsBase) == 0x000450, "Member 'UWBP_IngameMenu_Chest_LockPass_C::SettingsBase' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, Text_Message) == 0x000458, "Member 'UWBP_IngameMenu_Chest_LockPass_C::Text_Message' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_CommonButton) == 0x000460, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_CommonButton' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNum_0) == 0x000468, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNum_0' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNum_1) == 0x000470, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNum_1' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNum_2) == 0x000478, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNum_2' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNum_3) == 0x000480, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNum_3' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNum_4) == 0x000488, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNum_4' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNum_5) == 0x000490, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNum_5' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNum_6) == 0x000498, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNum_6' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNum_7) == 0x0004A0, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNum_7' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNum_8) == 0x0004A8, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNum_8' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNum_9) == 0x0004B0, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNum_9' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNumInput) == 0x0004B8, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNumInput' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNumInput_1) == 0x0004C0, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNumInput_1' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNumInput_2) == 0x0004C8, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNumInput_2' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WBP_IngameMenu_Chest_LockNumInput_3) == 0x0004D0, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WBP_IngameMenu_Chest_LockNumInput_3' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, PasswordLockModule) == 0x0004D8, "Member 'UWBP_IngameMenu_Chest_LockPass_C::PasswordLockModule' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, Numpads) == 0x0004E0, "Member 'UWBP_IngameMenu_Chest_LockPass_C::Numpads' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, InputNums) == 0x0004F0, "Member 'UWBP_IngameMenu_Chest_LockPass_C::InputNums' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, InputNumbers) == 0x000500, "Member 'UWBP_IngameMenu_Chest_LockPass_C::InputNumbers' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, SettingMsgId) == 0x000510, "Member 'UWBP_IngameMenu_Chest_LockPass_C::SettingMsgId' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, CorrectMsgId) == 0x000520, "Member 'UWBP_IngameMenu_Chest_LockPass_C::CorrectMsgId' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, WrongMsgId) == 0x000530, "Member 'UWBP_IngameMenu_Chest_LockPass_C::WrongMsgId' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, TabActionName) == 0x000540, "Member 'UWBP_IngameMenu_Chest_LockPass_C::TabActionName' has a wrong offset!");
static_assert(offsetof(UWBP_IngameMenu_Chest_LockPass_C, Is_Authentication) == 0x000548, "Member 'UWBP_IngameMenu_Chest_LockPass_C::Is_Authentication' has a wrong offset!");

}

