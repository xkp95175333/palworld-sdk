#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PalCraftInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "Pal_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PalCraftInfo.WBP_PalCraftInfo_C
// 0x00C0 (0x0338 - 0x0278)
class UWBP_PalCraftInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_Set;                                           // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_None;                                          // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Detail;                                        // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Simple;                                        // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_CommonCircularGauge_C*             CircularGauge_Progress;                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_ItemName;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_MaxItemNum;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_NowItemNum;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCommonItemIcon_C*               WBP_PalCommonItemIcon;                             // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal;                              // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal_1;                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal_2;                            // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal_3;                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal_4;                            // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RequirePalInfo_C*                  WBP_RequirePalInfo;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWBP_PalCraftInfo_Pal_C*>        WorkerPalWidgetArray;                              // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FDataTableRowHandle                    InfinityNumMsgId;                                  // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    RequireGenusMSGID;                                 // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    RequireTypeMSGID;                                  // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void AnmEvent_ForceSimple();
	void AnmEvent_NoRecipe();
	void AnmEvent_ToDetail();
	void AnmEvent_ToSimpleDetail();
	void Construct();
	void ExecuteUbergraph_WBP_PalCraftInfo(int32 EntryPoint);
	bool IsCharacterAssignedFixedToTargetWork(class UPalCharacterParameterComponent* TargetCharacter, const struct FGuid& WorkId);
	void OnInitialized();
	void SetIcon(class FName ItemId);
	void SetInfinityProductMode();
	void SetInvalidRecipeDetail();
	void SetProductItemID(class FName ItemId);
	void SetProductNum(int32 NowProductNum, int32 MaxProductNum);
	void SetWorkerPalSlots(TArray<class UPalIndividualCharacterSlot*>& Slots, const struct FGuid& WorkId);
	void SetWorkProgressRate(double Rate);
	void SetWorkSuitability(EPalWorkSuitability WorkSuitability);
	void UpdateRequireInfo(class UPalWorkBase* Work, EPalWorkSuitability WorkSuitability);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PalCraftInfo_C">();
	}
	static class UWBP_PalCraftInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PalCraftInfo_C>();
	}
};
static_assert(alignof(UWBP_PalCraftInfo_C) == 0x000008, "Wrong alignment on UWBP_PalCraftInfo_C");
static_assert(sizeof(UWBP_PalCraftInfo_C) == 0x000338, "Wrong size on UWBP_PalCraftInfo_C");
static_assert(offsetof(UWBP_PalCraftInfo_C, UberGraphFrame) == 0x000278, "Member 'UWBP_PalCraftInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, Anm_Set) == 0x000280, "Member 'UWBP_PalCraftInfo_C::Anm_Set' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, Anm_None) == 0x000288, "Member 'UWBP_PalCraftInfo_C::Anm_None' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, Anm_Detail) == 0x000290, "Member 'UWBP_PalCraftInfo_C::Anm_Detail' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, Anm_Simple) == 0x000298, "Member 'UWBP_PalCraftInfo_C::Anm_Simple' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, CircularGauge_Progress) == 0x0002A0, "Member 'UWBP_PalCraftInfo_C::CircularGauge_Progress' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, Text_ItemName) == 0x0002A8, "Member 'UWBP_PalCraftInfo_C::Text_ItemName' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, Text_MaxItemNum) == 0x0002B0, "Member 'UWBP_PalCraftInfo_C::Text_MaxItemNum' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, Text_NowItemNum) == 0x0002B8, "Member 'UWBP_PalCraftInfo_C::Text_NowItemNum' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, WBP_PalCommonItemIcon) == 0x0002C0, "Member 'UWBP_PalCraftInfo_C::WBP_PalCommonItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, WBP_PalCraftInfo_Pal) == 0x0002C8, "Member 'UWBP_PalCraftInfo_C::WBP_PalCraftInfo_Pal' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, WBP_PalCraftInfo_Pal_1) == 0x0002D0, "Member 'UWBP_PalCraftInfo_C::WBP_PalCraftInfo_Pal_1' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, WBP_PalCraftInfo_Pal_2) == 0x0002D8, "Member 'UWBP_PalCraftInfo_C::WBP_PalCraftInfo_Pal_2' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, WBP_PalCraftInfo_Pal_3) == 0x0002E0, "Member 'UWBP_PalCraftInfo_C::WBP_PalCraftInfo_Pal_3' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, WBP_PalCraftInfo_Pal_4) == 0x0002E8, "Member 'UWBP_PalCraftInfo_C::WBP_PalCraftInfo_Pal_4' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, WBP_RequirePalInfo) == 0x0002F0, "Member 'UWBP_PalCraftInfo_C::WBP_RequirePalInfo' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, WorkerPalWidgetArray) == 0x0002F8, "Member 'UWBP_PalCraftInfo_C::WorkerPalWidgetArray' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, InfinityNumMsgId) == 0x000308, "Member 'UWBP_PalCraftInfo_C::InfinityNumMsgId' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, RequireGenusMSGID) == 0x000318, "Member 'UWBP_PalCraftInfo_C::RequireGenusMSGID' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_C, RequireTypeMSGID) == 0x000328, "Member 'UWBP_PalCraftInfo_C::RequireTypeMSGID' has a wrong offset!");

}

