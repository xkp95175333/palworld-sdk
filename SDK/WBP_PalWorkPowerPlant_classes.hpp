#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PalWorkPowerPlant

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PalWorkPowerPlant.WBP_PalWorkPowerPlant_C
// 0x00C0 (0x04C8 - 0x0408)
class UWBP_PalWorkPowerPlant_C final : public UPalUIMapObjectStatusIndicatorBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_DetailToSimple;                                // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Arrow;                                             // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_PlantNum;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal;                              // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal_1;                            // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal_2;                            // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalWorkPowerPlant_Gauge_C*         WBP_PalWorkPowerPlant_Gauge;                       // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalWorkPowerPlant_Gauge_C*         WBP_PalWorkPowerPlant_Gauge_1;                     // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalWorkPowerPlant_Gauge_C*         WBP_PalWorkPowerPlant_Gauge_2;                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalWorkPowerPlant_Gauge_C*         WBP_PalWorkPowerPlant_Gauge_3;                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalWorkPowerPlant_Gauge_C*         WBP_PalWorkPowerPlant_Gauge_4;                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RequirePalInfo_C*                  WBP_RequirePalInfo;                                // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           DisplayCheckTimer;                                 // 0x0470(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ChangeCheckTimer;                                  // 0x0478(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisplayedDetail;                                 // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2542[0x7];                                     // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_PalCraftInfo_Pal_C*>        Pal_Infos;                                         // 0x0488(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UPalMapObjectGenerateEnergyModel*       Model;                                             // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_PalWorkPowerPlant_Gauge_C*> Gauges;                                            // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        PreviousAmout;                                     // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentAmout;                                      // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentGauge;                                      // 0x04C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeCheck();
	void Construct();
	void Destruct();
	void DisplayCheck();
	void ExecuteUbergraph_WBP_PalWorkPowerPlant(int32 EntryPoint);
	void On_Updated_Worker_Pal(class UPalWorkBase* Work);
	void OnSetup();
	void OnUpdateEnergyStack(class UPalMapObjectGenerateEnergyModel* Param_Model);
	void SetArrow(bool IsIncrease);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PalWorkPowerPlant_C">();
	}
	static class UWBP_PalWorkPowerPlant_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PalWorkPowerPlant_C>();
	}
};
static_assert(alignof(UWBP_PalWorkPowerPlant_C) == 0x000008, "Wrong alignment on UWBP_PalWorkPowerPlant_C");
static_assert(sizeof(UWBP_PalWorkPowerPlant_C) == 0x0004C8, "Wrong size on UWBP_PalWorkPowerPlant_C");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, UberGraphFrame) == 0x000408, "Member 'UWBP_PalWorkPowerPlant_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, Anm_DetailToSimple) == 0x000410, "Member 'UWBP_PalWorkPowerPlant_C::Anm_DetailToSimple' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, Arrow) == 0x000418, "Member 'UWBP_PalWorkPowerPlant_C::Arrow' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, Text_PlantNum) == 0x000420, "Member 'UWBP_PalWorkPowerPlant_C::Text_PlantNum' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, WBP_PalCraftInfo_Pal) == 0x000428, "Member 'UWBP_PalWorkPowerPlant_C::WBP_PalCraftInfo_Pal' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, WBP_PalCraftInfo_Pal_1) == 0x000430, "Member 'UWBP_PalWorkPowerPlant_C::WBP_PalCraftInfo_Pal_1' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, WBP_PalCraftInfo_Pal_2) == 0x000438, "Member 'UWBP_PalWorkPowerPlant_C::WBP_PalCraftInfo_Pal_2' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, WBP_PalWorkPowerPlant_Gauge) == 0x000440, "Member 'UWBP_PalWorkPowerPlant_C::WBP_PalWorkPowerPlant_Gauge' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, WBP_PalWorkPowerPlant_Gauge_1) == 0x000448, "Member 'UWBP_PalWorkPowerPlant_C::WBP_PalWorkPowerPlant_Gauge_1' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, WBP_PalWorkPowerPlant_Gauge_2) == 0x000450, "Member 'UWBP_PalWorkPowerPlant_C::WBP_PalWorkPowerPlant_Gauge_2' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, WBP_PalWorkPowerPlant_Gauge_3) == 0x000458, "Member 'UWBP_PalWorkPowerPlant_C::WBP_PalWorkPowerPlant_Gauge_3' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, WBP_PalWorkPowerPlant_Gauge_4) == 0x000460, "Member 'UWBP_PalWorkPowerPlant_C::WBP_PalWorkPowerPlant_Gauge_4' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, WBP_RequirePalInfo) == 0x000468, "Member 'UWBP_PalWorkPowerPlant_C::WBP_RequirePalInfo' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, DisplayCheckTimer) == 0x000470, "Member 'UWBP_PalWorkPowerPlant_C::DisplayCheckTimer' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, ChangeCheckTimer) == 0x000478, "Member 'UWBP_PalWorkPowerPlant_C::ChangeCheckTimer' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, IsDisplayedDetail) == 0x000480, "Member 'UWBP_PalWorkPowerPlant_C::IsDisplayedDetail' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, Pal_Infos) == 0x000488, "Member 'UWBP_PalWorkPowerPlant_C::Pal_Infos' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, Model) == 0x000498, "Member 'UWBP_PalWorkPowerPlant_C::Model' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, Gauges) == 0x0004A0, "Member 'UWBP_PalWorkPowerPlant_C::Gauges' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, PreviousAmout) == 0x0004B0, "Member 'UWBP_PalWorkPowerPlant_C::PreviousAmout' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, CurrentAmout) == 0x0004B8, "Member 'UWBP_PalWorkPowerPlant_C::CurrentAmout' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkPowerPlant_C, CurrentGauge) == 0x0004C0, "Member 'UWBP_PalWorkPowerPlant_C::CurrentGauge' has a wrong offset!");

}

