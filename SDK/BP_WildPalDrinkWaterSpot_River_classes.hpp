#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WildPalDrinkWaterSpot_River

#include "Basic.hpp"

#include "BP_WildPalDrinkWaterSpotBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WildPalDrinkWaterSpot_River.BP_WildPalDrinkWaterSpot_River_C
// 0x0028 (0x02E0 - 0x02B8)
class ABP_WildPalDrinkWaterSpot_River_C final : public ABP_WildPalDrinkWaterSpotBase_C
{
public:
	class UBP_WildPalDrinkWaterPointComponent_C*  BP_WildPalDrinkWaterPointComponent3;               // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalNavigationInvokerComponent*         PalNavigationInvoker;                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_WildPalDrinkWaterPointComponent_C*  BP_WildPalDrinkWaterPointComponent2;               // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_WildPalDrinkWaterPointComponent_C*  BP_WildPalDrinkWaterPointComponent1;               // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_WildPalDrinkWaterPointComponent_C*  BP_WildPalDrinkWaterPointComponent;                // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WildPalDrinkWaterSpot_River_C">();
	}
	static class ABP_WildPalDrinkWaterSpot_River_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WildPalDrinkWaterSpot_River_C>();
	}
};
static_assert(alignof(ABP_WildPalDrinkWaterSpot_River_C) == 0x000008, "Wrong alignment on ABP_WildPalDrinkWaterSpot_River_C");
static_assert(sizeof(ABP_WildPalDrinkWaterSpot_River_C) == 0x0002E0, "Wrong size on ABP_WildPalDrinkWaterSpot_River_C");
static_assert(offsetof(ABP_WildPalDrinkWaterSpot_River_C, BP_WildPalDrinkWaterPointComponent3) == 0x0002B8, "Member 'ABP_WildPalDrinkWaterSpot_River_C::BP_WildPalDrinkWaterPointComponent3' has a wrong offset!");
static_assert(offsetof(ABP_WildPalDrinkWaterSpot_River_C, PalNavigationInvoker) == 0x0002C0, "Member 'ABP_WildPalDrinkWaterSpot_River_C::PalNavigationInvoker' has a wrong offset!");
static_assert(offsetof(ABP_WildPalDrinkWaterSpot_River_C, BP_WildPalDrinkWaterPointComponent2) == 0x0002C8, "Member 'ABP_WildPalDrinkWaterSpot_River_C::BP_WildPalDrinkWaterPointComponent2' has a wrong offset!");
static_assert(offsetof(ABP_WildPalDrinkWaterSpot_River_C, BP_WildPalDrinkWaterPointComponent1) == 0x0002D0, "Member 'ABP_WildPalDrinkWaterSpot_River_C::BP_WildPalDrinkWaterPointComponent1' has a wrong offset!");
static_assert(offsetof(ABP_WildPalDrinkWaterSpot_River_C, BP_WildPalDrinkWaterPointComponent) == 0x0002D8, "Member 'ABP_WildPalDrinkWaterSpot_River_C::BP_WildPalDrinkWaterPointComponent' has a wrong offset!");

}

