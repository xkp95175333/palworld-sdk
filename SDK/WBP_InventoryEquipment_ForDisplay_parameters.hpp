#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryEquipment_ForDisplay

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryEquipment_ForDisplay.WBP_InventoryEquipment_ForDisplay_C.BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_2_OnConfirmStatusPointEdit__DelegateSignature
// 0x0050 (0x0050 - 0x0000)
struct WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_2_OnConfirmStatusPointEdit__DelegateSignature final
{
public:
	TMap<class FName, int32>                      PointMap;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_2_OnConfirmStatusPointEdit__DelegateSignature) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_2_OnConfirmStatusPointEdit__DelegateSignature");
static_assert(sizeof(WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_2_OnConfirmStatusPointEdit__DelegateSignature) == 0x000050, "Wrong size on WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_2_OnConfirmStatusPointEdit__DelegateSignature");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_2_OnConfirmStatusPointEdit__DelegateSignature, PointMap) == 0x000000, "Member 'WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_2_OnConfirmStatusPointEdit__DelegateSignature::PointMap' has a wrong offset!");

// Function WBP_InventoryEquipment_ForDisplay.WBP_InventoryEquipment_ForDisplay_C.BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_3_OnRequestSwapEquipment__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_3_OnRequestSwapEquipment__DelegateSignature final
{
public:
	EPalPlayerEquipItemSlotType                   EquipType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_3_OnRequestSwapEquipment__DelegateSignature) == 0x000001, "Wrong alignment on WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_3_OnRequestSwapEquipment__DelegateSignature");
static_assert(sizeof(WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_3_OnRequestSwapEquipment__DelegateSignature) == 0x000001, "Wrong size on WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_3_OnRequestSwapEquipment__DelegateSignature");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_3_OnRequestSwapEquipment__DelegateSignature, EquipType) == 0x000000, "Member 'WBP_InventoryEquipment_ForDisplay_C_BndEvt__WBP_InventoryEquipment_ForDisplay_WBP_InventoryEquipment_K2Node_ComponentBoundEvent_3_OnRequestSwapEquipment__DelegateSignature::EquipType' has a wrong offset!");

// Function WBP_InventoryEquipment_ForDisplay.WBP_InventoryEquipment_ForDisplay_C.ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DDC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, int32>                      K2Node_ComponentBoundEvent_PointMap;               // 0x0008(0x0050)()
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalPlayerEquipItemSlotType                   K2Node_ComponentBoundEvent_EquipType;              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DDD[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APalPlayerCharacter*                    CallFunc_GetPalmi_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DDE[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalGliderComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGliding_ReturnValue;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay");
static_assert(sizeof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay) == 0x0000C0, "Wrong size on WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, EntryPoint) == 0x000000, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, K2Node_ComponentBoundEvent_PointMap) == 0x000008, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::K2Node_ComponentBoundEvent_PointMap' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, CallFunc_Map_Length_ReturnValue) == 0x000058, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, K2Node_ComponentBoundEvent_EquipType) == 0x00005D, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::K2Node_ComponentBoundEvent_EquipType' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, CallFunc_GetPalmi_ReturnValue) == 0x000060, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::CallFunc_GetPalmi_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, CallFunc_IsGliding_ReturnValue) == 0x000098, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::CallFunc_IsGliding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, CallFunc_IsValid_ReturnValue_2) == 0x00009A, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, CallFunc_IsValid_ReturnValue_3) == 0x00009B, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, K2Node_CreateDelegate_OutputDelegate_2) == 0x00009C, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000AC, "Member 'WBP_InventoryEquipment_ForDisplay_C_ExecuteUbergraph_WBP_InventoryEquipment_ForDisplay::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function WBP_InventoryEquipment_ForDisplay.WBP_InventoryEquipment_ForDisplay_C.OnCloseChangePlayerNameWindow
// 0x0030 (0x0030 - 0x0000)
struct WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow final
{
public:
	class UPalHUDDispatchParameterBase*           Param_Param;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DDF[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharaCreNameEditWindowDispatchParameter_C* K2Node_DynamicCast_AsBP_Chara_Cre_Name_Edit_Window_Dispatch_Parameter; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE0[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow");
static_assert(sizeof(WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow) == 0x000030, "Wrong size on WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow, Param_Param) == 0x000000, "Member 'WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow::Param_Param' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow, K2Node_DynamicCast_AsBP_Chara_Cre_Name_Edit_Window_Dispatch_Parameter) == 0x000010, "Member 'WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow::K2Node_DynamicCast_AsBP_Chara_Cre_Name_Edit_Window_Dispatch_Parameter' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'WBP_InventoryEquipment_ForDisplay_C_OnCloseChangePlayerNameWindow::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ForDisplay.WBP_InventoryEquipment_ForDisplay_C.OnUpdateInventoryWeight
// 0x0020 (0x0020 - 0x0000)
struct WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight final
{
public:
	float                                         NowWeight;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalPlayerInventoryData*                CallFunc_GetLocalInventoryData_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetInventoryWeight_NowWeight_ImplicitCast; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetInventoryWeight_MaxWeight_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight");
static_assert(sizeof(WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight) == 0x000020, "Wrong size on WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight, NowWeight) == 0x000000, "Member 'WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight::NowWeight' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight, CallFunc_GetLocalInventoryData_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight::CallFunc_GetLocalInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight, CallFunc_SetInventoryWeight_NowWeight_ImplicitCast) == 0x000010, "Member 'WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight::CallFunc_SetInventoryWeight_NowWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight, CallFunc_SetInventoryWeight_MaxWeight_ImplicitCast) == 0x000018, "Member 'WBP_InventoryEquipment_ForDisplay_C_OnUpdateInventoryWeight::CallFunc_SetInventoryWeight_MaxWeight_ImplicitCast' has a wrong offset!");

// Function WBP_InventoryEquipment_ForDisplay.WBP_InventoryEquipment_ForDisplay_C.OpenNameEditWindow
// 0x0078 (0x0078 - 0x0000)
struct WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow final
{
public:
	class APalPlayerCharacter*                    CallFunc_GetPalmi_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalHUDDispatchParameterBase* Param)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterParameter*       CallFunc_GetIndividualCharacterParameterByActor_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE3[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNickName_outName;                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharaCreNameEditWindowDispatchParameter_C* CallFunc_SpawnObject_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_Push_ReturnValue;                         // 0x0068(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow");
static_assert(sizeof(WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow) == 0x000078, "Wrong size on WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow, CallFunc_GetPalmi_ReturnValue) == 0x000000, "Member 'WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow::CallFunc_GetPalmi_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow, CallFunc_GetIndividualCharacterParameterByActor_ReturnValue) == 0x000020, "Member 'WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow::CallFunc_GetIndividualCharacterParameterByActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow, CallFunc_GetNickName_outName) == 0x000030, "Member 'WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow::CallFunc_GetNickName_outName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow, CallFunc_GetHUDService_ReturnValue) == 0x000058, "Member 'WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow::CallFunc_GetHUDService_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow, CallFunc_SpawnObject_ReturnValue) == 0x000060, "Member 'WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow, CallFunc_Push_ReturnValue) == 0x000068, "Member 'WBP_InventoryEquipment_ForDisplay_C_OpenNameEditWindow::CallFunc_Push_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ForDisplay.WBP_InventoryEquipment_ForDisplay_C.Setup
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryEquipment_ForDisplay_C_Setup final
{
public:
	class UBP_InGameMenuInventoryModel_C*         Param_Model;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ForDisplay_C_Setup) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ForDisplay_C_Setup");
static_assert(sizeof(WBP_InventoryEquipment_ForDisplay_C_Setup) == 0x000008, "Wrong size on WBP_InventoryEquipment_ForDisplay_C_Setup");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_Setup, Param_Model) == 0x000000, "Member 'WBP_InventoryEquipment_ForDisplay_C_Setup::Param_Model' has a wrong offset!");

// Function WBP_InventoryEquipment_ForDisplay.WBP_InventoryEquipment_ForDisplay_C.Setup Static Input Action
// 0x0028 (0x0028 - 0x0000)
struct WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue;        // 0x0020(0x0004)(NoDestructor)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_1;      // 0x0024(0x0004)(NoDestructor)
};
static_assert(alignof(WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action) == 0x000004, "Wrong alignment on WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action");
static_assert(sizeof(WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action) == 0x000028, "Wrong size on WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action, CallFunc_RegisterActionBinding_ReturnValue) == 0x000020, "Member 'WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action::CallFunc_RegisterActionBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action, CallFunc_RegisterActionBinding_ReturnValue_1) == 0x000024, "Member 'WBP_InventoryEquipment_ForDisplay_C_Setup_Static_Input_Action::CallFunc_RegisterActionBinding_ReturnValue_1' has a wrong offset!");

// Function WBP_InventoryEquipment_ForDisplay.WBP_InventoryEquipment_ForDisplay_C.Try Start Simulate Status Point
// 0x0028 (0x0028 - 0x0000)
struct WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point final
{
public:
	class APalPlayerCharacter*                    CallFunc_GetPalmi_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterParameterComponent*        CallFunc_GetCharacterParameterComponent_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingStatusPoint_IsSimulating;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE4[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterParameter*       CallFunc_TryGetIndividualParameter_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUnusedStatusPoint_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point");
static_assert(sizeof(WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point) == 0x000028, "Wrong size on WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point, CallFunc_GetPalmi_ReturnValue) == 0x000000, "Member 'WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point::CallFunc_GetPalmi_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point, CallFunc_GetCharacterParameterComponent_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point::CallFunc_GetCharacterParameterComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point, CallFunc_IsSimulatingStatusPoint_IsSimulating) == 0x000010, "Member 'WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point::CallFunc_IsSimulatingStatusPoint_IsSimulating' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point, CallFunc_TryGetIndividualParameter_ReturnValue) == 0x000018, "Member 'WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point::CallFunc_TryGetIndividualParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point, CallFunc_GetUnusedStatusPoint_ReturnValue) == 0x000020, "Member 'WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point::CallFunc_GetUnusedStatusPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'WBP_InventoryEquipment_ForDisplay_C_Try_Start_Simulate_Status_Point::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ForDisplay.WBP_InventoryEquipment_ForDisplay_C.BP_GetDesiredFocusTarget
// 0x0020 (0x0020 - 0x0000)
struct WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingStatusPoint_IsSimulating;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DE5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetStatusPointTopFocusTarget_TargetWidget; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Get_Inventory_Last_Focus_Target_TargetWidget; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget) == 0x000020, "Wrong size on WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget, CallFunc_IsSimulatingStatusPoint_IsSimulating) == 0x000008, "Member 'WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget::CallFunc_IsSimulatingStatusPoint_IsSimulating' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget, CallFunc_GetStatusPointTopFocusTarget_TargetWidget) == 0x000010, "Member 'WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget::CallFunc_GetStatusPointTopFocusTarget_TargetWidget' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget, CallFunc_Get_Inventory_Last_Focus_Target_TargetWidget) == 0x000018, "Member 'WBP_InventoryEquipment_ForDisplay_C_BP_GetDesiredFocusTarget::CallFunc_Get_Inventory_Last_Focus_Target_TargetWidget' has a wrong offset!");

// Function WBP_InventoryEquipment_ForDisplay.WBP_InventoryEquipment_ForDisplay_C.IsSimulatingStatusPoint
// 0x0001 (0x0001 - 0x0000)
struct WBP_InventoryEquipment_ForDisplay_C_IsSimulatingStatusPoint final
{
public:
	bool                                          IsSimulating;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ForDisplay_C_IsSimulatingStatusPoint) == 0x000001, "Wrong alignment on WBP_InventoryEquipment_ForDisplay_C_IsSimulatingStatusPoint");
static_assert(sizeof(WBP_InventoryEquipment_ForDisplay_C_IsSimulatingStatusPoint) == 0x000001, "Wrong size on WBP_InventoryEquipment_ForDisplay_C_IsSimulatingStatusPoint");
static_assert(offsetof(WBP_InventoryEquipment_ForDisplay_C_IsSimulatingStatusPoint, IsSimulating) == 0x000000, "Member 'WBP_InventoryEquipment_ForDisplay_C_IsSimulatingStatusPoint::IsSimulating' has a wrong offset!");

}

