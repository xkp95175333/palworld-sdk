#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RequirePalInfo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Pal_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.ExecuteUbergraph_WBP_RequirePalInfo
// 0x0030 (0x0030 - 0x0000)
struct WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_PalCraftInfo_Pal_C*>        K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_PalCraftInfo_Pal_C*                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo");
static_assert(sizeof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo) == 0x000030, "Wrong size on WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, EntryPoint) == 0x000000, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.SetupPowerSuffcient
// 0x0020 (0x0020 - 0x0000)
struct WBP_RequirePalInfo_C_SetupPowerSuffcient final
{
public:
	class UPalMapObjectEnergyModule*              Module;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredEnergy_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B7[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPalMapObjectEnergyModule* Module)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_SetupPowerSuffcient) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_SetupPowerSuffcient");
static_assert(sizeof(WBP_RequirePalInfo_C_SetupPowerSuffcient) == 0x000020, "Wrong size on WBP_RequirePalInfo_C_SetupPowerSuffcient");
static_assert(offsetof(WBP_RequirePalInfo_C_SetupPowerSuffcient, Module) == 0x000000, "Member 'WBP_RequirePalInfo_C_SetupPowerSuffcient::Module' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetupPowerSuffcient, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_RequirePalInfo_C_SetupPowerSuffcient::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetupPowerSuffcient, CallFunc_IsRequiredEnergy_ReturnValue) == 0x000009, "Member 'WBP_RequirePalInfo_C_SetupPowerSuffcient::CallFunc_IsRequiredEnergy_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetupPowerSuffcient, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_RequirePalInfo_C_SetupPowerSuffcient::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.SetWarning_Genus_Type
// 0x0160 (0x0160 - 0x0000)
struct WBP_RequirePalInfo_C_SetWarning_Genus_Type final
{
public:
	class FText                                   GenusNames;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   TypeNames;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B8[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0098(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B9[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text_1;        // 0x0120(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0148(0x0018)()
};
static_assert(alignof(WBP_RequirePalInfo_C_SetWarning_Genus_Type) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_SetWarning_Genus_Type");
static_assert(sizeof(WBP_RequirePalInfo_C_SetWarning_Genus_Type) == 0x000160, "Wrong size on WBP_RequirePalInfo_C_SetWarning_Genus_Type");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, GenusNames) == 0x000000, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::GenusNames' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, TypeNames) == 0x000018, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::TypeNames' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, K2Node_MakeArray_Array) == 0x000080, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, CallFunc_TextIsEmpty_ReturnValue) == 0x000090, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000098, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, CallFunc_TextIsEmpty_ReturnValue_1) == 0x0000C8, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, CallFunc_GetLocalizedTextFromHandle_Text_1) == 0x000120, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::CallFunc_GetLocalizedTextFromHandle_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, K2Node_MakeArray_Array_1) == 0x000138, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, CallFunc_Format_ReturnValue_1) == 0x000148, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.SetWorkSuitability
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_RequirePalInfo_C_SetWorkSuitability final
{
public:
	EPalWorkSuitability                           WorkSuitability;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24BA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   WorkSuitabilityName;                               // 0x0008(0x0018)(Edit, BlueprintVisible)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0080(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	class FText                                   CallFunc_GetWorkSuitabilityName_outName;           // 0x00B0(0x0018)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_SetWorkSuitability) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_SetWorkSuitability");
static_assert(sizeof(WBP_RequirePalInfo_C_SetWorkSuitability) == 0x0000D0, "Wrong size on WBP_RequirePalInfo_C_SetWorkSuitability");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWorkSuitability, WorkSuitability) == 0x000000, "Member 'WBP_RequirePalInfo_C_SetWorkSuitability::WorkSuitability' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWorkSuitability, WorkSuitabilityName) == 0x000008, "Member 'WBP_RequirePalInfo_C_SetWorkSuitability::WorkSuitabilityName' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWorkSuitability, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_RequirePalInfo_C_SetWorkSuitability::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWorkSuitability, K2Node_MakeArray_Array) == 0x000070, "Member 'WBP_RequirePalInfo_C_SetWorkSuitability::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWorkSuitability, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000080, "Member 'WBP_RequirePalInfo_C_SetWorkSuitability::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWorkSuitability, CallFunc_Format_ReturnValue) == 0x000098, "Member 'WBP_RequirePalInfo_C_SetWorkSuitability::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWorkSuitability, CallFunc_GetWorkSuitabilityName_outName) == 0x0000B0, "Member 'WBP_RequirePalInfo_C_SetWorkSuitability::CallFunc_GetWorkSuitabilityName_outName' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWorkSuitability, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C8, "Member 'WBP_RequirePalInfo_C_SetWorkSuitability::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWorkSuitability, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000C9, "Member 'WBP_RequirePalInfo_C_SetWorkSuitability::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.Update Display
// 0x0168 (0x0168 - 0x0000)
struct WBP_RequirePalInfo_C_Update_Display final
{
public:
	class UPalWorkBase*                           Work;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalWorkSuitability                           WorkSuitability;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAssigned;                                        // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24BB[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TypeNames;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 GenusNames;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24BC[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24BD[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPalWorkAssignInfo>             CallFunc_GetWorkAssignInfo_OutWorkAssignInfo;      // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalWorkAssignInfo                     CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAssigned_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24BE[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24BF[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C0[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetWorkableElementTypeNames_outElementNames; // 0x0098(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_GetGenusCategorieNames_outGenusCategorieNames; // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0018)()
	class FText                                   CallFunc_Array_Get_Item_2;                         // 0x00D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C1[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0118(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0130(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_Update_Display) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_Update_Display");
static_assert(sizeof(WBP_RequirePalInfo_C_Update_Display) == 0x000168, "Wrong size on WBP_RequirePalInfo_C_Update_Display");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Work) == 0x000000, "Member 'WBP_RequirePalInfo_C_Update_Display::Work' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, WorkSuitability) == 0x000008, "Member 'WBP_RequirePalInfo_C_Update_Display::WorkSuitability' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, IsAssigned) == 0x000009, "Member 'WBP_RequirePalInfo_C_Update_Display::IsAssigned' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, TypeNames) == 0x000010, "Member 'WBP_RequirePalInfo_C_Update_Display::TypeNames' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, GenusNames) == 0x000020, "Member 'WBP_RequirePalInfo_C_Update_Display::GenusNames' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_int_Array_Index_Variable) == 0x000034, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_bool_True_if_break_was_hit_Variable) == 0x00003C, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Not_PreBool_ReturnValue) == 0x00003D, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_GetWorkAssignInfo_OutWorkAssignInfo) == 0x000050, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_GetWorkAssignInfo_OutWorkAssignInfo' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_int_Array_Index_Variable_2) == 0x000064, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Array_Get_Item) == 0x000068, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Not_PreBool_ReturnValue_1) == 0x000078, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_IsAssigned_ReturnValue) == 0x000079, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_IsAssigned_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00007A, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_IsEmpty_ReturnValue) == 0x00007B, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Not_PreBool_ReturnValue_2) == 0x00007C, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_IsEmpty_ReturnValue_1) == 0x00007D, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Not_PreBool_ReturnValue_3) == 0x00007E, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_BooleanOR_ReturnValue) == 0x00007F, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_BooleanOR_ReturnValue_1) == 0x000080, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_int_Loop_Counter_Variable_2) == 0x000084, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Add_IntInt_ReturnValue_2) == 0x00008C, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_GetWorkableElementTypeNames_outElementNames) == 0x000098, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_GetWorkableElementTypeNames_outElementNames' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_GetGenusCategorieNames_outGenusCategorieNames) == 0x0000A8, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_GetGenusCategorieNames_outGenusCategorieNames' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Array_Get_Item_2) == 0x0000D0, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Conv_TextToString_ReturnValue) == 0x0000E8, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000F8, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Array_Length_ReturnValue_2) == 0x00010C, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Less_IntInt_ReturnValue_1) == 0x000110, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Less_IntInt_ReturnValue_2) == 0x000111, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Conv_StringToText_ReturnValue) == 0x000118, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000130, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Concat_StrStr_ReturnValue) == 0x000148, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000158, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.UpdatePowerSuffcient
// 0x0068 (0x0068 - 0x0000)
struct WBP_RequirePalInfo_C_UpdatePowerSuffcient final
{
public:
	class UPalMapObjectEnergyModule*              Module;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanConsumeEnergy_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C2[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x002C(0x0014)()
	struct FDataTableRowHandle                    K2Node_Select_Default;                             // 0x0040(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0050(0x0018)()
};
static_assert(alignof(WBP_RequirePalInfo_C_UpdatePowerSuffcient) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_UpdatePowerSuffcient");
static_assert(sizeof(WBP_RequirePalInfo_C_UpdatePowerSuffcient) == 0x000068, "Wrong size on WBP_RequirePalInfo_C_UpdatePowerSuffcient");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerSuffcient, Module) == 0x000000, "Member 'WBP_RequirePalInfo_C_UpdatePowerSuffcient::Module' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerSuffcient, Temp_bool_Variable) == 0x000008, "Member 'WBP_RequirePalInfo_C_UpdatePowerSuffcient::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerSuffcient, CallFunc_CanConsumeEnergy_ReturnValue) == 0x000009, "Member 'WBP_RequirePalInfo_C_UpdatePowerSuffcient::CallFunc_CanConsumeEnergy_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerSuffcient, CallFunc_SelectColor_ReturnValue) == 0x00000C, "Member 'WBP_RequirePalInfo_C_UpdatePowerSuffcient::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerSuffcient, CallFunc_SelectColor_ReturnValue_1) == 0x00001C, "Member 'WBP_RequirePalInfo_C_UpdatePowerSuffcient::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerSuffcient, K2Node_MakeStruct_SlateColor) == 0x00002C, "Member 'WBP_RequirePalInfo_C_UpdatePowerSuffcient::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerSuffcient, K2Node_Select_Default) == 0x000040, "Member 'WBP_RequirePalInfo_C_UpdatePowerSuffcient::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerSuffcient, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000050, "Member 'WBP_RequirePalInfo_C_UpdatePowerSuffcient::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");

}

