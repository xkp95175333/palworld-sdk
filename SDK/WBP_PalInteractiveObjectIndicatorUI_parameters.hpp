#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PalInteractiveObjectIndicatorUI

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.Activate
// 0x0010 (0x0010 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_Activate final
{
public:
	bool                                          IsInputConsume;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalUserWidget*                         Parent;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_Activate) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_Activate");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_Activate) == 0x000010, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_Activate");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Activate, IsInputConsume) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Activate::IsInputConsume' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Activate, Parent) == 0x000008, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Activate::Parent' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.Deactivate
// 0x0010 (0x0010 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_Deactivate final
{
public:
	class UPalUserWidget*                         Parent;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActionName;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_Deactivate) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_Deactivate");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_Deactivate) == 0x000010, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_Deactivate");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Deactivate, Parent) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Deactivate::Parent' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Deactivate, ActionName) == 0x000008, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Deactivate::ActionName' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.EndTriggerInteract
// 0x0020 (0x0020 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalInteractComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteracting_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract) == 0x000020, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract, CallFunc_IsInteracting_ReturnValue) == 0x000019, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_EndTriggerInteract::CallFunc_IsInteracting_ReturnValue' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.IsInteracting
// 0x0030 (0x0030 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B7[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalInteractComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteracting_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting) == 0x000030, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting, ReturnValue) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting, CallFunc_IsInteracting_ReturnValue) == 0x000028, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting::CallFunc_IsInteracting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting, CallFunc_IsValid_ReturnValue_2) == 0x000029, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.IsSameTriggeringActionType
// 0x0028 (0x0028 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType final
{
public:
	EPalInteractiveObjectActionType               ActionType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSame;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B8[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalInteractComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalInteractiveObjectActionType               CallFunc_GetTriggeringActionType_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType) == 0x000028, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType, ActionType) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType::ActionType' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType, IsSame) == 0x000001, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType::IsSame' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType, CallFunc_GetTriggeringActionType_ReturnValue) == 0x000020, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType::CallFunc_GetTriggeringActionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000022, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.PressInteractButton
// 0x0040 (0x0040 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue; // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameTriggeringActionType_IsSame;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B9[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalInteractComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInteracting_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameTriggeringActionType_IsSame_1;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsToggleInteract_ReturnValue;             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton) == 0x000040, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton, CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue) == 0x000010, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton::CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton, CallFunc_IsSameTriggeringActionType_IsSame) == 0x000020, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton::CallFunc_IsSameTriggeringActionType_IsSame' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton, CallFunc_K2_GetPawn_ReturnValue) == 0x000028, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton, CallFunc_IsInteracting_ReturnValue) == 0x000038, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton::CallFunc_IsInteracting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton, CallFunc_IsSameTriggeringActionType_IsSame_1) == 0x000039, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton::CallFunc_IsSameTriggeringActionType_IsSame_1' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton, CallFunc_IsToggleInteract_ReturnValue) == 0x00003B, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton::CallFunc_IsToggleInteract_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_PressInteractButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.RegisterAction
// 0x0058 (0x0058 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction final
{
public:
	bool                                          IsInputConsume;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalUserWidget*                         Parent;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   ActionName;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BB[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalDataTableRowName_UIInputAction     CallFunc_Map_Find_Value;                           // 0x003C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BC[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue;        // 0x0048(0x0004)(NoDestructor)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_1;      // 0x004C(0x0004)(NoDestructor)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_NotConcume_ReturnValue; // 0x0050(0x0004)(NoDestructor)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_NotConcume_ReturnValue_1; // 0x0054(0x0004)(NoDestructor)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction) == 0x000058, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction, IsInputConsume) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction::IsInputConsume' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction, Parent) == 0x000008, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction::Parent' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction, ActionName) == 0x000010, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction::ActionName' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction, CallFunc_Map_Find_Value) == 0x00003C, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction, CallFunc_Map_Find_ReturnValue) == 0x000044, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction, CallFunc_RegisterActionBinding_ReturnValue) == 0x000048, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction::CallFunc_RegisterActionBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction, CallFunc_RegisterActionBinding_ReturnValue_1) == 0x00004C, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction::CallFunc_RegisterActionBinding_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction, CallFunc_RegisterActionBinding_NotConcume_ReturnValue) == 0x000050, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction::CallFunc_RegisterActionBinding_NotConcume_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction, CallFunc_RegisterActionBinding_NotConcume_ReturnValue_1) == 0x000054, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction::CallFunc_RegisterActionBinding_NotConcume_ReturnValue_1' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.ReleaseInteractButton
// 0x0004 (0x0004 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton final
{
public:
	bool                                          CallFunc_IsSameTriggeringActionType_IsSame;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsToggleInteract_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton) == 0x000001, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton) == 0x000004, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton, CallFunc_IsSameTriggeringActionType_IsSame) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton::CallFunc_IsSameTriggeringActionType_IsSame' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton, CallFunc_IsToggleInteract_ReturnValue) == 0x000001, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton::CallFunc_IsToggleInteract_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_ReleaseInteractButton::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.SetEnable
// 0x0001 (0x0001 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_SetEnable final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_SetEnable) == 0x000001, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_SetEnable");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_SetEnable) == 0x000001, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_SetEnable");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_SetEnable, IsEnable) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_SetEnable::IsEnable' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.Setup
// 0x0018 (0x0018 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_Setup final
{
public:
	EPalInteractiveObjectActionType               ActionType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPalInteractiveObjectComponentInterface> Interface;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_Setup) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_Setup");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_Setup) == 0x000018, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_Setup");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Setup, ActionType) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Setup::ActionType' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Setup, Interface) == 0x000008, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Setup::Interface' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.StartTriggerInteract
// 0x0020 (0x0020 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract final
{
public:
	bool                                          CallFunc_IsToggleInteract_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BE[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalInteractComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract) == 0x000020, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract, CallFunc_IsToggleInteract_ReturnValue) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract::CallFunc_IsToggleInteract_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_StartTriggerInteract::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.Unregister Action
// 0x0008 (0x0008 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_Unregister_Action final
{
public:
	class UPalUserWidget*                         Parent;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_Unregister_Action) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_Unregister_Action");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_Unregister_Action) == 0x000008, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_Unregister_Action");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Unregister_Action, Parent) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Unregister_Action::Parent' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.Update Button Type
// 0x0018 (0x0018 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type final
{
public:
	EPalInteractiveObjectButtonType               NewButtonType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NewLongPushTime;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValidInteract;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_CanToggle;                                   // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type) == 0x000018, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type, NewButtonType) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type::NewButtonType' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type, NewLongPushTime) == 0x000008, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type::NewLongPushTime' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type, IsValidInteract) == 0x000010, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type::IsValidInteract' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type, Param_CanToggle) == 0x000011, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type::Param_CanToggle' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type, K2Node_SwitchEnum_CmpSuccess) == 0x000012, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.Update Interactable
// 0x0018 (0x0018 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_Update_Interactable final
{
public:
	bool                                          bInteractable;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalUserWidget*                         Parent;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_Update_Interactable) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_Update_Interactable");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_Update_Interactable) == 0x000018, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_Update_Interactable");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Update_Interactable, bInteractable) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Update_Interactable::bInteractable' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Update_Interactable, Parent) == 0x000008, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Update_Interactable::Parent' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_Update_Interactable, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_Update_Interactable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.UpdateText
// 0x0118 (0x0118 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_UpdateText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsLockedByRide;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C1[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0070(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0100(0x0018)()
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateText) == 0x000008, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_UpdateText");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateText) == 0x000118, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_UpdateText");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateText, InText) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_UpdateText::InText' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateText, IsLockedByRide) == 0x000018, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_UpdateText::IsLockedByRide' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateText, Temp_bool_Variable) == 0x000019, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_UpdateText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateText, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_UpdateText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateText, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000070, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_UpdateText::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_UpdateText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateText, K2Node_MakeArray_Array) == 0x0000D8, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_UpdateText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateText, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_UpdateText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateText, K2Node_Select_Default) == 0x000100, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_UpdateText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.UpdateVisible
// 0x0001 (0x0001 - 0x0000)
struct WBP_PalInteractiveObjectIndicatorUI_C_UpdateVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateVisible) == 0x000001, "Wrong alignment on WBP_PalInteractiveObjectIndicatorUI_C_UpdateVisible");
static_assert(sizeof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateVisible) == 0x000001, "Wrong size on WBP_PalInteractiveObjectIndicatorUI_C_UpdateVisible");
static_assert(offsetof(WBP_PalInteractiveObjectIndicatorUI_C_UpdateVisible, Visible) == 0x000000, "Member 'WBP_PalInteractiveObjectIndicatorUI_C_UpdateVisible::Visible' has a wrong offset!");

}

