#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerRadialMenu

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EPlayerRadialMenuOpenType_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PlayerRadialMenu.WBP_PlayerRadialMenu_C
// 0x0160 (0x0568 - 0x0408)
class UWBP_PlayerRadialMenu_C final : public UPalUIPlayerRadialMenuBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Default_In;                                        // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonRadialMenuBase_C*            WBP_CommonRadialMenuBase;                          // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsAnyRadialMenuOpened;                             // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2313[0x3];                                     // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CameraModifierName;                                // 0x042C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerRadialMenuOpenType                     OpenedRadialType;                                  // 0x0434(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2314[0x3];                                     // 0x0435(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OtomoIndex;                                        // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalDataTableRowName_UIInputAction     DecideMenuAction;                                  // 0x043C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   Action_Handle;                                     // 0x0444(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    FeedMsgID;                                         // 0x0448(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    FeedWithNameMsgID;                                 // 0x0458(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    CareMsgID;                                         // 0x0468(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    CareWithNameMsgID;                                 // 0x0478(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    EmoteTitleMsgID;                                   // 0x0488(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UWBP_IngameMenuConstruction_Radial_C*   ConstructionMenu;                                  // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   InteractDIsableFlagName;                           // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    InstructionAttackMsgID;                            // 0x04A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    InstructionAssistMsgID;                            // 0x04B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    InstructionEscapetMsgID;                           // 0x04C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    EmoteMsgID_0;                                      // 0x04D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    EmoteMsgID_1;                                      // 0x04E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    EmoteMsgID_2;                                      // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    EmoteMsgID_3;                                      // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    EmoteMsgID_4;                                      // 0x0518(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    EmoteMsgID_5;                                      // 0x0528(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    EmoteMsgID_6;                                      // 0x0538(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    EmoteMsgID_7;                                      // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    SlaughterMsgID;                                    // 0x0558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void BindOpenPlayerActionMenu();
	void BindPlayerActionMenuEvent();
	void Can_Open_Player_Action_Menu(bool* Result);
	void CloseConstructionMenu();
	void CloseMenu();
	void CloseSetup();
	void CreateConstructionMenu(class UWBP_IngameMenuConstruction_Radial_C** CreatedWidget);
	void CreateEmoteMenu();
	void CreateInstructionsAdditionalWidget(const class FText& InText, class UWBP_PlayerRadialMenu_MenuContent_C** CreatedWidget);
	void CreatePlayerActionMenu();
	void EmptyFunction();
	void ExecuteUbergraph_WBP_PlayerRadialMenu(int32 EntryPoint);
	void IsAnyMenuOpened(bool* IsOpened);
	void OnDamagedPlayer(const struct FPalDamageResult& DamageResult);
	void OnDecidedEmoteMenu(int32 Param_Index);
	void OnDecidedInstruction_Care();
	void OnDecidedInstruction_Feed();
	void OnDecidedPlayerActionMenu(int32 Param_Index);
	void OnOtomoChanged_Activated();
	void OnOtomoChanged_Inactivated();
	void OnPlayerRideOn(class AActor* RideActor);
	void OnPressConstructionMenuButton();
	void OnPushedAnyWidget(const struct FGuid& PushedWidgetID);
	void Open_Emote_Menu();
	void OpenConstructionMenu(class FName SelectMapObjectId, int32 SelectedIndex);
	void OpenMenu();
	void OpenPlayerActionMenu();
	void OpenSetup();
	void SetInteractEnable(bool IsInteractEnable);
	void SetupEvent();
	void UnbindOpenPlayerActionMenu();
	void UnbindPlayerActionMenuEvent();

	void HasConstructionMenu(bool* HasMenu) const;
	void IsPlayerDying(bool* IsDying) const;
	void IsPlayerRiding(bool* IsRiding) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PlayerRadialMenu_C">();
	}
	static class UWBP_PlayerRadialMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PlayerRadialMenu_C>();
	}
};
static_assert(alignof(UWBP_PlayerRadialMenu_C) == 0x000008, "Wrong alignment on UWBP_PlayerRadialMenu_C");
static_assert(sizeof(UWBP_PlayerRadialMenu_C) == 0x000568, "Wrong size on UWBP_PlayerRadialMenu_C");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, UberGraphFrame) == 0x000408, "Member 'UWBP_PlayerRadialMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, Default_In) == 0x000410, "Member 'UWBP_PlayerRadialMenu_C::Default_In' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, CanvasPanel_0) == 0x000418, "Member 'UWBP_PlayerRadialMenu_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, WBP_CommonRadialMenuBase) == 0x000420, "Member 'UWBP_PlayerRadialMenu_C::WBP_CommonRadialMenuBase' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, IsAnyRadialMenuOpened) == 0x000428, "Member 'UWBP_PlayerRadialMenu_C::IsAnyRadialMenuOpened' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, CameraModifierName) == 0x00042C, "Member 'UWBP_PlayerRadialMenu_C::CameraModifierName' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, OpenedRadialType) == 0x000434, "Member 'UWBP_PlayerRadialMenu_C::OpenedRadialType' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, OtomoIndex) == 0x000438, "Member 'UWBP_PlayerRadialMenu_C::OtomoIndex' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, DecideMenuAction) == 0x00043C, "Member 'UWBP_PlayerRadialMenu_C::DecideMenuAction' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, Action_Handle) == 0x000444, "Member 'UWBP_PlayerRadialMenu_C::Action_Handle' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, FeedMsgID) == 0x000448, "Member 'UWBP_PlayerRadialMenu_C::FeedMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, FeedWithNameMsgID) == 0x000458, "Member 'UWBP_PlayerRadialMenu_C::FeedWithNameMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, CareMsgID) == 0x000468, "Member 'UWBP_PlayerRadialMenu_C::CareMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, CareWithNameMsgID) == 0x000478, "Member 'UWBP_PlayerRadialMenu_C::CareWithNameMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, EmoteTitleMsgID) == 0x000488, "Member 'UWBP_PlayerRadialMenu_C::EmoteTitleMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, ConstructionMenu) == 0x000498, "Member 'UWBP_PlayerRadialMenu_C::ConstructionMenu' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, InteractDIsableFlagName) == 0x0004A0, "Member 'UWBP_PlayerRadialMenu_C::InteractDIsableFlagName' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, InstructionAttackMsgID) == 0x0004A8, "Member 'UWBP_PlayerRadialMenu_C::InstructionAttackMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, InstructionAssistMsgID) == 0x0004B8, "Member 'UWBP_PlayerRadialMenu_C::InstructionAssistMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, InstructionEscapetMsgID) == 0x0004C8, "Member 'UWBP_PlayerRadialMenu_C::InstructionEscapetMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, EmoteMsgID_0) == 0x0004D8, "Member 'UWBP_PlayerRadialMenu_C::EmoteMsgID_0' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, EmoteMsgID_1) == 0x0004E8, "Member 'UWBP_PlayerRadialMenu_C::EmoteMsgID_1' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, EmoteMsgID_2) == 0x0004F8, "Member 'UWBP_PlayerRadialMenu_C::EmoteMsgID_2' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, EmoteMsgID_3) == 0x000508, "Member 'UWBP_PlayerRadialMenu_C::EmoteMsgID_3' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, EmoteMsgID_4) == 0x000518, "Member 'UWBP_PlayerRadialMenu_C::EmoteMsgID_4' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, EmoteMsgID_5) == 0x000528, "Member 'UWBP_PlayerRadialMenu_C::EmoteMsgID_5' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, EmoteMsgID_6) == 0x000538, "Member 'UWBP_PlayerRadialMenu_C::EmoteMsgID_6' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, EmoteMsgID_7) == 0x000548, "Member 'UWBP_PlayerRadialMenu_C::EmoteMsgID_7' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerRadialMenu_C, SlaughterMsgID) == 0x000558, "Member 'UWBP_PlayerRadialMenu_C::SlaughterMsgID' has a wrong offset!");

}

