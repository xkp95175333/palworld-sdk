#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryEquipment_GrowsPointButton

#include "Basic.hpp"

#include "WBP_InventoryEquipment_GrowsPointButton_classes.hpp"
#include "WBP_InventoryEquipment_GrowsPointButton_parameters.hpp"


namespace SDK
{

// Function WBP_InventoryEquipment_GrowsPointButton.WBP_InventoryEquipment_GrowsPointButton_C.AnmEvent_Active
// (BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_GrowsPointButton_C::AnmEvent_Active()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_GrowsPointButton_C", "AnmEvent_Active");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_GrowsPointButton.WBP_InventoryEquipment_GrowsPointButton_C.AnmEvent_Deactive
// (BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_GrowsPointButton_C::AnmEvent_Deactive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_GrowsPointButton_C", "AnmEvent_Deactive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_GrowsPointButton.WBP_InventoryEquipment_GrowsPointButton_C.ExecuteUbergraph_WBP_InventoryEquipment_GrowsPointButton
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_GrowsPointButton_C::ExecuteUbergraph_WBP_InventoryEquipment_GrowsPointButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_GrowsPointButton_C", "ExecuteUbergraph_WBP_InventoryEquipment_GrowsPointButton");

	Params::WBP_InventoryEquipment_GrowsPointButton_C_ExecuteUbergraph_WBP_InventoryEquipment_GrowsPointButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_GrowsPointButton.WBP_InventoryEquipment_GrowsPointButton_C.Finished_A20F78AE45F2878481C71DBF29E2326A
// (BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_GrowsPointButton_C::Finished_A20F78AE45F2878481C71DBF29E2326A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_GrowsPointButton_C", "Finished_A20F78AE45F2878481C71DBF29E2326A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_GrowsPointButton.WBP_InventoryEquipment_GrowsPointButton_C.SetPoint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_GrowsPointButton_C::SetPoint(int32 Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_GrowsPointButton_C", "SetPoint");

	Params::WBP_InventoryEquipment_GrowsPointButton_C_SetPoint Parms{};

	Parms.Point = Point;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_GrowsPointButton.WBP_InventoryEquipment_GrowsPointButton_C.SetSimulatePoint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Point                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_GrowsPointButton_C::SetSimulatePoint(int32 Point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_GrowsPointButton_C", "SetSimulatePoint");

	Params::WBP_InventoryEquipment_GrowsPointButton_C_SetSimulatePoint Parms{};

	Parms.Point = Point;

	UObject::ProcessEvent(Func, &Parms);
}

}

