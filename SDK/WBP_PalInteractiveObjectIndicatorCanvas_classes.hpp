#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PalInteractiveObjectIndicatorCanvas

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PalInteractiveObjectIndicatorCanvas.WBP_PalInteractiveObjectIndicatorCanvas_C
// 0x00D0 (0x04D8 - 0x0408)
class UWBP_PalInteractiveObjectIndicatorCanvas_C final : public UPalUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Default_In;                                        // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           AdditionalWidgetBOx;                               // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_1;                                     // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_86;                                  // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           IndicatorVerticalBox;                              // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<EPalInteractiveObjectActionType, class UWBP_PalInteractiveObjectIndicatorUI_C*> IndicatorUIs;                                      // 0x0440(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         ZOrder;                                            // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInteracting;                                      // 0x0494(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B0A[0x3];                                     // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPalInteractiveObjectComponentInterface> Interactive_Object;                                // 0x0498(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                IndicatorBoxOffset;                                // 0x04A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalInteractiveObjectActionInfoData    OtomoIndicatorActionInfo;                          // 0x04C0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          bOtomoIndicatorDisplaying;                         // 0x04CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B0B[0x3];                                     // 0x04CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OtomoInteractDistance;                             // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CanDisplayCoop(bool* CanDisplay);
	void Construct();
	void CREATEDELEGATE_PROXYFUNCTION_0(const struct FPalKeyConfigSettings& PrevSettings, const struct FPalKeyConfigSettings& NewSettings);
	void CreateIndicatorUI();
	void ExecuteUbergraph_WBP_PalInteractiveObjectIndicatorCanvas(int32 EntryPoint);
	void GetIndicatorText(TScriptInterface<class IPalInteractiveObjectComponentInterface> InteractiveObject, EPalInteractiveObjectIndicatorType IndicatorType, EPalInteractiveObjectButtonType buttonType, bool CanToggle, class FText* NewParam);
	void HideIndicators();
	void HideInteractHUDInterfaceWidget();
	void OnApplicationActivationStateChanged(bool bIsFocused);
	void OnChangeOtomo();
	void OnInitialized();
	void OnKeyConfigChanged(const struct FPalKeyConfigSettings& PreSetting, const struct FPalKeyConfigSettings& NewSetting);
	void OnRide(class AActor* RideActor);
	void OnUpdateTargetInteractiveObject(TScriptInterface<class IPalInteractiveObjectComponentInterface> InteractiveObject);
	void SetupAfterCreatePlayer();
	void SetupEvent();
	void SetZOrder(int32 Param_ZOrder);
	void ShowIndicator(EPalInteractiveObjectActionType ActionType, const struct FPalInteractiveObjectActionInfoData& ActionInfoData);
	void ShowIndicators();
	void ShowInteractHUDInterfaceWidget();
	void ShowOtomoIndicator(EPalInteractiveObjectActionType ActionType, const struct FPalInteractiveObjectActionInfoData& ActionInfo);
	void ShowOtomoIndicators();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Update_Indicator_UIs();
	void UpdateIndicatorBoxPosition();
	void UpdateOtomoIndicatorPosition();
	void UpdateOtomoIndicators();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PalInteractiveObjectIndicatorCanvas_C">();
	}
	static class UWBP_PalInteractiveObjectIndicatorCanvas_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PalInteractiveObjectIndicatorCanvas_C>();
	}
};
static_assert(alignof(UWBP_PalInteractiveObjectIndicatorCanvas_C) == 0x000008, "Wrong alignment on UWBP_PalInteractiveObjectIndicatorCanvas_C");
static_assert(sizeof(UWBP_PalInteractiveObjectIndicatorCanvas_C) == 0x0004D8, "Wrong size on UWBP_PalInteractiveObjectIndicatorCanvas_C");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, UberGraphFrame) == 0x000408, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, Default_In) == 0x000410, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::Default_In' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, AdditionalWidgetBOx) == 0x000418, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::AdditionalWidgetBOx' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, CanvasPanel_0) == 0x000420, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, CanvasPanel_1) == 0x000428, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::CanvasPanel_1' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, HorizontalBox_86) == 0x000430, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::HorizontalBox_86' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, IndicatorVerticalBox) == 0x000438, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::IndicatorVerticalBox' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, IndicatorUIs) == 0x000440, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::IndicatorUIs' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, ZOrder) == 0x000490, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::ZOrder' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, bInteracting) == 0x000494, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::bInteracting' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, Interactive_Object) == 0x000498, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::Interactive_Object' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, IndicatorBoxOffset) == 0x0004A8, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::IndicatorBoxOffset' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, OtomoIndicatorActionInfo) == 0x0004C0, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::OtomoIndicatorActionInfo' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, bOtomoIndicatorDisplaying) == 0x0004CC, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::bOtomoIndicatorDisplaying' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorCanvas_C, OtomoInteractDistance) == 0x0004D0, "Member 'UWBP_PalInteractiveObjectIndicatorCanvas_C::OtomoInteractDistance' has a wrong offset!");

}

