#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Ingame_Incubator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Ingame_Incubator.WBP_Ingame_Incubator_C
// 0x0100 (0x0508 - 0x0408)
class UWBP_Ingame_Incubator_C final : public UPalUIMapObjectStatusIndicatorBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_DetailToSimple;                                // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Buff_OnToOff;                                  // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_PalRichTextBlock_C*                 BP_PalRichTextBlock_HatchState;                    // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalRichTextBlock_C*                 BP_PalRichTextBlock_RemainTime_Hour;               // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalRichTextBlock_C*                 BP_PalRichTextBlock_RemainTime_Hour_1;             // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalRichTextBlock_C*                 BP_PalRichTextBlock_RemainTime_Minute;             // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalRichTextBlock_C*                 BP_PalRichTextBlock_RemainTime_Minute_1;           // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalRichTextBlock_C*                 BP_PalRichTextBlock_RemainTime_Second;             // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalRichTextBlock_C*                 BP_PalRichTextBlock_RemainTime_Second_1;           // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CircleGauge_Progress;                              // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_RemainTime;                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayBuff;                                       // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayStatus;                                     // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StatusBase;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Buff_Value;                                   // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_EggName;                                      // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Status;                                       // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCommonItemIcon_C*               WBP_PalCommonItemIcon;                             // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RequirePalInfo_C*                  WBP_RequirePalInfo;                                // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPalMapObjectHatchingEggModel*          Model;                                             // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         LastNum;                                           // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A11[0x4];                                     // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    UnusedMsgId;                                       // 0x04B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    CompleteMsgID;                                     // 0x04C8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	struct FTimerHandle                           DisplayCheckTimer;                                 // 0x04D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisplayedDetail;                                 // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A12[0x3];                                     // 0x04E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CachedItemId;                                      // 0x04E4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A13[0x4];                                     // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDataTableRowHandle>            TemperatureMsgIds;                                 // 0x04F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                          HasEgg;                                            // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasChara;                                          // 0x0501(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LackPower;                                         // 0x0502(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void Destruct();
	void DisplayCheck();
	void ExecuteUbergraph_WBP_Ingame_Incubator(int32 EntryPoint);
	void On_Update_Work_Amount(class UPalWorkProgress* WorkProgress);
	void OnSetup();
	void OnUpdateHatchedCharacter(class UPalMapObjectHatchingEggModel* Param_Model);
	void OnUpdateHatchTemperature(int32 TempDiff);
	void OnUpdateItemContainer(class UPalItemContainer* Container);
	void RatioToPersentOffsetText(double Ratio, class FText* Persent);
	void Set_Second(int32 RemainingSecond);
	void UpdateEggDisplay();
	void UpdatePowerSuffcient(class UPalMapObjectEnergyModule* Module);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Ingame_Incubator_C">();
	}
	static class UWBP_Ingame_Incubator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Ingame_Incubator_C>();
	}
};
static_assert(alignof(UWBP_Ingame_Incubator_C) == 0x000008, "Wrong alignment on UWBP_Ingame_Incubator_C");
static_assert(sizeof(UWBP_Ingame_Incubator_C) == 0x000508, "Wrong size on UWBP_Ingame_Incubator_C");
static_assert(offsetof(UWBP_Ingame_Incubator_C, UberGraphFrame) == 0x000408, "Member 'UWBP_Ingame_Incubator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, Anm_DetailToSimple) == 0x000410, "Member 'UWBP_Ingame_Incubator_C::Anm_DetailToSimple' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, Anm_Buff_OnToOff) == 0x000418, "Member 'UWBP_Ingame_Incubator_C::Anm_Buff_OnToOff' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, BP_PalRichTextBlock_HatchState) == 0x000420, "Member 'UWBP_Ingame_Incubator_C::BP_PalRichTextBlock_HatchState' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, BP_PalRichTextBlock_RemainTime_Hour) == 0x000428, "Member 'UWBP_Ingame_Incubator_C::BP_PalRichTextBlock_RemainTime_Hour' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, BP_PalRichTextBlock_RemainTime_Hour_1) == 0x000430, "Member 'UWBP_Ingame_Incubator_C::BP_PalRichTextBlock_RemainTime_Hour_1' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, BP_PalRichTextBlock_RemainTime_Minute) == 0x000438, "Member 'UWBP_Ingame_Incubator_C::BP_PalRichTextBlock_RemainTime_Minute' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, BP_PalRichTextBlock_RemainTime_Minute_1) == 0x000440, "Member 'UWBP_Ingame_Incubator_C::BP_PalRichTextBlock_RemainTime_Minute_1' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, BP_PalRichTextBlock_RemainTime_Second) == 0x000448, "Member 'UWBP_Ingame_Incubator_C::BP_PalRichTextBlock_RemainTime_Second' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, BP_PalRichTextBlock_RemainTime_Second_1) == 0x000450, "Member 'UWBP_Ingame_Incubator_C::BP_PalRichTextBlock_RemainTime_Second_1' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, CircleGauge_Progress) == 0x000458, "Member 'UWBP_Ingame_Incubator_C::CircleGauge_Progress' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, HorizontalBox_RemainTime) == 0x000460, "Member 'UWBP_Ingame_Incubator_C::HorizontalBox_RemainTime' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, OverlayBuff) == 0x000468, "Member 'UWBP_Ingame_Incubator_C::OverlayBuff' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, OverlayStatus) == 0x000470, "Member 'UWBP_Ingame_Incubator_C::OverlayStatus' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, StatusBase) == 0x000478, "Member 'UWBP_Ingame_Incubator_C::StatusBase' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, Text_Buff_Value) == 0x000480, "Member 'UWBP_Ingame_Incubator_C::Text_Buff_Value' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, Text_EggName) == 0x000488, "Member 'UWBP_Ingame_Incubator_C::Text_EggName' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, Text_Status) == 0x000490, "Member 'UWBP_Ingame_Incubator_C::Text_Status' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, WBP_PalCommonItemIcon) == 0x000498, "Member 'UWBP_Ingame_Incubator_C::WBP_PalCommonItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, WBP_RequirePalInfo) == 0x0004A0, "Member 'UWBP_Ingame_Incubator_C::WBP_RequirePalInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, Model) == 0x0004A8, "Member 'UWBP_Ingame_Incubator_C::Model' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, LastNum) == 0x0004B0, "Member 'UWBP_Ingame_Incubator_C::LastNum' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, UnusedMsgId) == 0x0004B8, "Member 'UWBP_Ingame_Incubator_C::UnusedMsgId' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, CompleteMsgID) == 0x0004C8, "Member 'UWBP_Ingame_Incubator_C::CompleteMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, DisplayCheckTimer) == 0x0004D8, "Member 'UWBP_Ingame_Incubator_C::DisplayCheckTimer' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, IsDisplayedDetail) == 0x0004E0, "Member 'UWBP_Ingame_Incubator_C::IsDisplayedDetail' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, CachedItemId) == 0x0004E4, "Member 'UWBP_Ingame_Incubator_C::CachedItemId' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, TemperatureMsgIds) == 0x0004F0, "Member 'UWBP_Ingame_Incubator_C::TemperatureMsgIds' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, HasEgg) == 0x000500, "Member 'UWBP_Ingame_Incubator_C::HasEgg' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, HasChara) == 0x000501, "Member 'UWBP_Ingame_Incubator_C::HasChara' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_C, LackPower) == 0x000502, "Member 'UWBP_Ingame_Incubator_C::LackPower' has a wrong offset!");

}

