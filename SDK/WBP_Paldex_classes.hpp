#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Paldex

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "E_PaldexDistributionTimeType_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Paldex.WBP_Paldex_C
// 0x0120 (0x0398 - 0x0278)
class UWBP_Paldex_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_NoData_Encounted;                              // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_NoData_NotEncounted;                           // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_MapToPalinfo;                                  // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_PalinfoToMap;                                  // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Map;                                           // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_PalInfo;                                       // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_LongDesc;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      CircularThrobber_49;                               // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalRichTextBlock_C*                 RichText_LongDesc;                                 // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_EncountPalNumValue;                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_RegisterPalNumValue;                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_NoData_C*                          WBP_NoData;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Paldex_Map_C*                      WBP_Paldex_Map;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Paldex_PalInfo_00_C*               WBP_Paldex_PalInfo_00;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Paldex_tabset_C*                   WBP_Paldex_tabset;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PaldexScrollList_C*                WBP_PaldexScrollList;                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalMonsterInframeRender_C*         WBP_PalInframeRender;                              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   NowRenderCharacterID;                              // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnHoveredAnyPalPanel;                              // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FDataTableRowHandle                    NoDataNoticeMsgID;                                 // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    NoDistributionNoticeMsgID;                         // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	FMulticastInlineDelegateProperty_             OnClickedModelTab;                                 // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnClickedDistributionTab;                          // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FDataTableRowHandle                    NoDistributionThisTimeNoticeMsgID;                 // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UWBP_Paldex_List_C*                     LastHoveredPanel;                                  // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirstSetup;                                      // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDIsplayDisrtibution;                             // 0x0379(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449C[0x6];                                     // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnClickedAnyPalPanel;                              // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWBP_Paldex_List_C*                     LastClickedPalPanel;                               // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void AddCapturedActorRotation(const struct FRotator& Rotator);
	void AddDistributionMapOffset(const struct FVector2D& Offset);
	void AddZoomDistributionMap(double AddZoomRate);
	void AnmEvent_ChnageTimeType(E_PaldexDistributionTimeType TimeType);
	void AnmEvent_FirstOpen();
	void AnmEvent_ToDistribution();
	void AnmEvent_ToModel();
	void BndEvt__WBP_Paldex_WBP_Paldex_tabset_K2Node_ComponentBoundEvent_1_OnSelectedModelTab__DelegateSignature();
	void BndEvt__WBP_Paldex_WBP_Paldex_tabset_K2Node_ComponentBoundEvent_2_OnSelectedDistributionTab__DelegateSignature();
	void BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_0_OnHoveredAnyPanel__DelegateSignature(class FName CharacterID, class UWBP_Paldex_List_C* SelfWidget);
	void BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_3_OnClickedAnyPanel__DelegateSignature(class FName CharacterID, class UWBP_Paldex_List_C* Widget);
	void CapturePalActor(class FName CharacterID);
	void ChangeToDistributionDIsplayMode();
	void ChangeToModelDisplayModel();
	void ClickByCharacterID(class FName CharacterID);
	void ClickByIndex(int32 Param_Index);
	void Construct();
	void Destruct();
	void Display_Distribution(const struct FPalUIPaldex_DisplayInfo& DisplayInfo, E_PaldexDistributionTimeType TimeType);
	void DisplayNoDataWidget(const struct FDataTableRowHandle& MsgIdHandle);
	void DisplayPalInfo(const struct FPalUIPaldex_DisplayInfo& DisplayInfo);
	void ExecuteUbergraph_WBP_Paldex(int32 EntryPoint);
	void FocusByCharacterID(class FName CharacterID);
	void FocusByIndex(int32 Param_Index);
	void GetFocusTargetByCharacterID(class FName CharacterID, class UWidget** Target);
	void GetFocusTargetByIndex(int32 Param_Index, class UWidget** Target);
	void HideNoDataWidget();
	void IsZoomMax(bool* IsMax);
	void OnClickedAnyPalPanel__DelegateSignature(class FName CharacterID);
	void OnClickedDistributionTab__DelegateSignature();
	void OnClickedModelTab__DelegateSignature();
	void OnCompleteCapturePalActor();
	void OnHoveredAnyPalPanel__DelegateSignature(class FName CharacterID);
	void OnInitialized();
	void PageSkip_Down(EUINavigation Param_Navigation);
	void PageSkip_Up(EUINavigation Param_Navigation);
	void ResetMapOffset();
	void ScrollByCharacterID(class FName CharacterID);
	void ScrollByPanelIndex(int32 Param_ScrollByPanelIndex);
	void SetEncountedPalNum(int32 Num);
	void SetRegisteredPalNum(int32 Num);
	void SetupCaptureCameraActor();
	void SetupPalPanelList(TArray<struct FPalUIPaldex_DisplayInfo>& DisplayInfoArray);
	void SetZoomDisrtibutionMap(double Rate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Paldex_C">();
	}
	static class UWBP_Paldex_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Paldex_C>();
	}
};
static_assert(alignof(UWBP_Paldex_C) == 0x000008, "Wrong alignment on UWBP_Paldex_C");
static_assert(sizeof(UWBP_Paldex_C) == 0x000398, "Wrong size on UWBP_Paldex_C");
static_assert(offsetof(UWBP_Paldex_C, UberGraphFrame) == 0x000278, "Member 'UWBP_Paldex_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, Anm_NoData_Encounted) == 0x000280, "Member 'UWBP_Paldex_C::Anm_NoData_Encounted' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, Anm_NoData_NotEncounted) == 0x000288, "Member 'UWBP_Paldex_C::Anm_NoData_NotEncounted' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, Anm_MapToPalinfo) == 0x000290, "Member 'UWBP_Paldex_C::Anm_MapToPalinfo' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, Anm_PalinfoToMap) == 0x000298, "Member 'UWBP_Paldex_C::Anm_PalinfoToMap' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, Anm_Map) == 0x0002A0, "Member 'UWBP_Paldex_C::Anm_Map' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, Anm_PalInfo) == 0x0002A8, "Member 'UWBP_Paldex_C::Anm_PalInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, Canvas_LongDesc) == 0x0002B0, "Member 'UWBP_Paldex_C::Canvas_LongDesc' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, CircularThrobber_49) == 0x0002B8, "Member 'UWBP_Paldex_C::CircularThrobber_49' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, RichText_LongDesc) == 0x0002C0, "Member 'UWBP_Paldex_C::RichText_LongDesc' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, Text_EncountPalNumValue) == 0x0002C8, "Member 'UWBP_Paldex_C::Text_EncountPalNumValue' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, Text_RegisterPalNumValue) == 0x0002D0, "Member 'UWBP_Paldex_C::Text_RegisterPalNumValue' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, WBP_NoData) == 0x0002D8, "Member 'UWBP_Paldex_C::WBP_NoData' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, WBP_Paldex_Map) == 0x0002E0, "Member 'UWBP_Paldex_C::WBP_Paldex_Map' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, WBP_Paldex_PalInfo_00) == 0x0002E8, "Member 'UWBP_Paldex_C::WBP_Paldex_PalInfo_00' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, WBP_Paldex_tabset) == 0x0002F0, "Member 'UWBP_Paldex_C::WBP_Paldex_tabset' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, WBP_PaldexScrollList) == 0x0002F8, "Member 'UWBP_Paldex_C::WBP_PaldexScrollList' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, WBP_PalInframeRender) == 0x000300, "Member 'UWBP_Paldex_C::WBP_PalInframeRender' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, NowRenderCharacterID) == 0x000308, "Member 'UWBP_Paldex_C::NowRenderCharacterID' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, OnHoveredAnyPalPanel) == 0x000310, "Member 'UWBP_Paldex_C::OnHoveredAnyPalPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, NoDataNoticeMsgID) == 0x000320, "Member 'UWBP_Paldex_C::NoDataNoticeMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, NoDistributionNoticeMsgID) == 0x000330, "Member 'UWBP_Paldex_C::NoDistributionNoticeMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, OnClickedModelTab) == 0x000340, "Member 'UWBP_Paldex_C::OnClickedModelTab' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, OnClickedDistributionTab) == 0x000350, "Member 'UWBP_Paldex_C::OnClickedDistributionTab' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, NoDistributionThisTimeNoticeMsgID) == 0x000360, "Member 'UWBP_Paldex_C::NoDistributionThisTimeNoticeMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, LastHoveredPanel) == 0x000370, "Member 'UWBP_Paldex_C::LastHoveredPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, IsFirstSetup) == 0x000378, "Member 'UWBP_Paldex_C::IsFirstSetup' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, IsDIsplayDisrtibution) == 0x000379, "Member 'UWBP_Paldex_C::IsDIsplayDisrtibution' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, OnClickedAnyPalPanel) == 0x000380, "Member 'UWBP_Paldex_C::OnClickedAnyPalPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_C, LastClickedPalPanel) == 0x000390, "Member 'UWBP_Paldex_C::LastClickedPalPanel' has a wrong offset!");

}

