#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_Unique_PinkCat_CatPunch

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.EndAction
// 0x0010 (0x0010 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_EndAction final
{
public:
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_EndAction) == 0x000008, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_EndAction");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_EndAction) == 0x000010, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_EndAction");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_EndAction, CallFunc_GetActionCharacter_ReturnValue) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_EndAction::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_EndAction, CallFunc_GetActionCharacter_ReturnValue_1) == 0x000008, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_EndAction::CallFunc_GetActionCharacter_ReturnValue_1' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch
// 0x0238 (0x0238 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4094[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0148(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0170(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4095[0x6];                                     // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalSkeletalMeshComponent*              CallFunc_GetMainMesh_ReturnValue;                  // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4096[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4097[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4098[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x01B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4099[0x2];                                     // 0x01C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x01C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x01D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_1;         // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalSkeletalMeshComponent*              CallFunc_GetMainMesh_ReturnValue_1;                // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409A[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_2;         // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409B[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x0214(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409C[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MoveToTarget_DeltaTime_ImplicitCast;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch) == 0x000008, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch) == 0x000238, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, EntryPoint) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_13) == 0x000004, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_12) == 0x00000C, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_11) == 0x000024, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_10) == 0x00003C, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, Temp_name_Variable) == 0x000054, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_9) == 0x00006C, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_8) == 0x000074, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_4) == 0x00007C, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_7) == 0x00008C, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_5) == 0x000094, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_6) == 0x0000A4, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000AC, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_5) == 0x0000BC, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000C4, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, Temp_name_Variable_1) == 0x0000D4, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000DC, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000EC, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_4) == 0x0000F0, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_3) == 0x0000F8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_9) == 0x000100, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_2) == 0x000110, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_10) == 0x000118, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_1) == 0x000128, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_11) == 0x000130, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName) == 0x000140, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_12) == 0x000148, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, Temp_name_Variable_2) == 0x000158, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_13) == 0x000160, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000170, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, Temp_bool_Has_Been_Initd_Variable) == 0x000178, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, Temp_bool_IsClosed_Variable) == 0x000179, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_GetActionCharacter_ReturnValue) == 0x000180, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_GetMainMesh_ReturnValue) == 0x000188, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_GetMainMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_Event_DeltaTime) == 0x000190, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000198, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x0001A8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_IsValid_ReturnValue_1) == 0x0001B0, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_14) == 0x0001B4, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001C4, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0001C5, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_15) == 0x0001C8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0001D8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_GetActionCharacter_ReturnValue_1) == 0x0001E0, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_GetActionCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_GetMainMesh_ReturnValue_1) == 0x0001E8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_GetMainMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CustomEvent_NotifyName_14) == 0x0001F0, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x0001F8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_IsValid_ReturnValue_2) == 0x000200, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_GetActionCharacter_ReturnValue_2) == 0x000208, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_GetActionCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000210, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, K2Node_CreateDelegate_OutputDelegate_16) == 0x000214, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_MoveToTarget_DeltaTime_ImplicitCast) == 0x000228, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_MoveToTarget_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000230, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.Get Target Rotation
// 0x01A0 (0x01A0 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation final
{
public:
	struct FRotator                               TargetRotation;                                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue;            // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_1;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_2;         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409E[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_3;         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetActionTarget_ReturnValue;              // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_ReturnValue_1;          // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsApplicableDamage_ReturnValue;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409F[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_4;         // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A0[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A1[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A2[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_REase_ReturnValue;                        // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_REase_Alpha_ImplicitCast;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation) == 0x000008, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation) == 0x0001A0, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, TargetRotation) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::TargetRotation' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, Temp_real_Variable) == 0x000030, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_GetTargetLocation_ReturnValue) == 0x000038, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_GetTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_GetActionCharacter_ReturnValue) == 0x000050, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_GetActionCharacter_ReturnValue_1) == 0x000058, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_GetActionCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000078, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_Vector_Distance_ReturnValue) == 0x000090, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_GetActionCharacter_ReturnValue_2) == 0x000098, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_GetActionCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0000A8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_GetActionCharacter_ReturnValue_3) == 0x0000C0, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_GetActionCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_GetActionTarget_ReturnValue) == 0x0000C8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_GetActionTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_GetTargetLocation_ReturnValue_1) == 0x0000D0, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_GetTargetLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_IsApplicableDamage_ReturnValue) == 0x0000E8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_IsApplicableDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_IsValid_ReturnValue) == 0x0000E9, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_IsDead_ReturnValue) == 0x0000EA, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_BooleanAND_ReturnValue) == 0x0000EB, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_Not_PreBool_ReturnValue) == 0x0000EC, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_GetActionCharacter_ReturnValue_4) == 0x0000F0, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_GetActionCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x000100, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_BreakRotator_Roll) == 0x000118, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_BreakRotator_Pitch) == 0x00011C, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_BreakRotator_Yaw) == 0x000120, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000128, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_FindLookAtRotation_ReturnValue) == 0x000140, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_BreakRotator_Roll_1) == 0x000158, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_BreakRotator_Pitch_1) == 0x00015C, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_BreakRotator_Yaw_1) == 0x000160, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_MakeRotator_ReturnValue) == 0x000168, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_REase_ReturnValue) == 0x000180, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_REase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation, CallFunc_REase_Alpha_ImplicitCast) == 0x000198, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_Get_Target_Rotation::CallFunc_REase_Alpha_ImplicitCast' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.MoveToTarget
// 0x01D0 (0x01D0 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_AdjustActorToFloor_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A3[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_1;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_2;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_3;         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Get_Target_Rotation_TargetRotation;       // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00D0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A4[0x6];                                     // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetActionTarget_ReturnValue;              // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget) == 0x000008, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget) == 0x0001D0, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, DeltaTime) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_GetActionCharacter_ReturnValue) == 0x000008, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_AdjustActorToFloor_ReturnValue) == 0x000010, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_AdjustActorToFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000028, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_GetActionCharacter_ReturnValue_1) == 0x000040, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_GetActionCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_GetActionCharacter_ReturnValue_2) == 0x000048, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_GetActionCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_GetActorForwardVector_ReturnValue) == 0x000050, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000080, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_GetActionCharacter_ReturnValue_3) == 0x000098, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_GetActionCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_Get_Target_Rotation_TargetRotation) == 0x0000B8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_Get_Target_Rotation_TargetRotation' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000D0, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001B8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0001B9, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_GetActionTarget_ReturnValue) == 0x0001C0, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_GetActionTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget, CallFunc_IsValid_ReturnValue) == 0x0001C8, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_MoveToTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnBlendOut_6FCC02CF40A11D28BC681A887E620E6F
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_6FCC02CF40A11D28BC681A887E620E6F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_6FCC02CF40A11D28BC681A887E620E6F) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_6FCC02CF40A11D28BC681A887E620E6F");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_6FCC02CF40A11D28BC681A887E620E6F) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_6FCC02CF40A11D28BC681A887E620E6F");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_6FCC02CF40A11D28BC681A887E620E6F, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_6FCC02CF40A11D28BC681A887E620E6F::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnBlendOut_7B37005E4C184523A70797A405F21101
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_7B37005E4C184523A70797A405F21101 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_7B37005E4C184523A70797A405F21101) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_7B37005E4C184523A70797A405F21101");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_7B37005E4C184523A70797A405F21101) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_7B37005E4C184523A70797A405F21101");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_7B37005E4C184523A70797A405F21101, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_7B37005E4C184523A70797A405F21101::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnBlendOut_BF5F18464CE41760481C058932345CA4
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_BF5F18464CE41760481C058932345CA4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_BF5F18464CE41760481C058932345CA4) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_BF5F18464CE41760481C058932345CA4");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_BF5F18464CE41760481C058932345CA4) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_BF5F18464CE41760481C058932345CA4");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_BF5F18464CE41760481C058932345CA4, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnBlendOut_BF5F18464CE41760481C058932345CA4::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnCompleted_6FCC02CF40A11D28BC681A887E620E6F
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_6FCC02CF40A11D28BC681A887E620E6F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_6FCC02CF40A11D28BC681A887E620E6F) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_6FCC02CF40A11D28BC681A887E620E6F");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_6FCC02CF40A11D28BC681A887E620E6F) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_6FCC02CF40A11D28BC681A887E620E6F");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_6FCC02CF40A11D28BC681A887E620E6F, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_6FCC02CF40A11D28BC681A887E620E6F::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnCompleted_7B37005E4C184523A70797A405F21101
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_7B37005E4C184523A70797A405F21101 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_7B37005E4C184523A70797A405F21101) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_7B37005E4C184523A70797A405F21101");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_7B37005E4C184523A70797A405F21101) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_7B37005E4C184523A70797A405F21101");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_7B37005E4C184523A70797A405F21101, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_7B37005E4C184523A70797A405F21101::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnCompleted_BF5F18464CE41760481C058932345CA4
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_BF5F18464CE41760481C058932345CA4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_BF5F18464CE41760481C058932345CA4) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_BF5F18464CE41760481C058932345CA4");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_BF5F18464CE41760481C058932345CA4) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_BF5F18464CE41760481C058932345CA4");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_BF5F18464CE41760481C058932345CA4, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnCompleted_BF5F18464CE41760481C058932345CA4::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnInterrupted_6FCC02CF40A11D28BC681A887E620E6F
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_6FCC02CF40A11D28BC681A887E620E6F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_6FCC02CF40A11D28BC681A887E620E6F) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_6FCC02CF40A11D28BC681A887E620E6F");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_6FCC02CF40A11D28BC681A887E620E6F) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_6FCC02CF40A11D28BC681A887E620E6F");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_6FCC02CF40A11D28BC681A887E620E6F, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_6FCC02CF40A11D28BC681A887E620E6F::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnInterrupted_7B37005E4C184523A70797A405F21101
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_7B37005E4C184523A70797A405F21101 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_7B37005E4C184523A70797A405F21101) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_7B37005E4C184523A70797A405F21101");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_7B37005E4C184523A70797A405F21101) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_7B37005E4C184523A70797A405F21101");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_7B37005E4C184523A70797A405F21101, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_7B37005E4C184523A70797A405F21101::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnInterrupted_BF5F18464CE41760481C058932345CA4
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_BF5F18464CE41760481C058932345CA4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_BF5F18464CE41760481C058932345CA4) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_BF5F18464CE41760481C058932345CA4");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_BF5F18464CE41760481C058932345CA4) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_BF5F18464CE41760481C058932345CA4");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_BF5F18464CE41760481C058932345CA4, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnInterrupted_BF5F18464CE41760481C058932345CA4::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnNotifyBegin_6FCC02CF40A11D28BC681A887E620E6F
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_6FCC02CF40A11D28BC681A887E620E6F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_6FCC02CF40A11D28BC681A887E620E6F) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_6FCC02CF40A11D28BC681A887E620E6F");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_6FCC02CF40A11D28BC681A887E620E6F) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_6FCC02CF40A11D28BC681A887E620E6F");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_6FCC02CF40A11D28BC681A887E620E6F, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_6FCC02CF40A11D28BC681A887E620E6F::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnNotifyBegin_7B37005E4C184523A70797A405F21101
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_7B37005E4C184523A70797A405F21101 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_7B37005E4C184523A70797A405F21101) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_7B37005E4C184523A70797A405F21101");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_7B37005E4C184523A70797A405F21101) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_7B37005E4C184523A70797A405F21101");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_7B37005E4C184523A70797A405F21101, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_7B37005E4C184523A70797A405F21101::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnNotifyBegin_BF5F18464CE41760481C058932345CA4
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_BF5F18464CE41760481C058932345CA4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_BF5F18464CE41760481C058932345CA4) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_BF5F18464CE41760481C058932345CA4");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_BF5F18464CE41760481C058932345CA4) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_BF5F18464CE41760481C058932345CA4");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_BF5F18464CE41760481C058932345CA4, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyBegin_BF5F18464CE41760481C058932345CA4::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnNotifyEnd_6FCC02CF40A11D28BC681A887E620E6F
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_6FCC02CF40A11D28BC681A887E620E6F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_6FCC02CF40A11D28BC681A887E620E6F) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_6FCC02CF40A11D28BC681A887E620E6F");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_6FCC02CF40A11D28BC681A887E620E6F) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_6FCC02CF40A11D28BC681A887E620E6F");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_6FCC02CF40A11D28BC681A887E620E6F, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_6FCC02CF40A11D28BC681A887E620E6F::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnNotifyEnd_7B37005E4C184523A70797A405F21101
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_7B37005E4C184523A70797A405F21101 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_7B37005E4C184523A70797A405F21101) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_7B37005E4C184523A70797A405F21101");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_7B37005E4C184523A70797A405F21101) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_7B37005E4C184523A70797A405F21101");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_7B37005E4C184523A70797A405F21101, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_7B37005E4C184523A70797A405F21101::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.OnNotifyEnd_BF5F18464CE41760481C058932345CA4
// 0x0008 (0x0008 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_BF5F18464CE41760481C058932345CA4 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_BF5F18464CE41760481C058932345CA4) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_BF5F18464CE41760481C058932345CA4");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_BF5F18464CE41760481C058932345CA4) == 0x000008, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_BF5F18464CE41760481C058932345CA4");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_BF5F18464CE41760481C058932345CA4, NotifyName) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_OnNotifyEnd_BF5F18464CE41760481C058932345CA4::NotifyName' has a wrong offset!");

// Function BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C.TickAction
// 0x0004 (0x0004 - 0x0000)
struct BP_Action_Unique_PinkCat_CatPunch_C_TickAction final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Action_Unique_PinkCat_CatPunch_C_TickAction) == 0x000004, "Wrong alignment on BP_Action_Unique_PinkCat_CatPunch_C_TickAction");
static_assert(sizeof(BP_Action_Unique_PinkCat_CatPunch_C_TickAction) == 0x000004, "Wrong size on BP_Action_Unique_PinkCat_CatPunch_C_TickAction");
static_assert(offsetof(BP_Action_Unique_PinkCat_CatPunch_C_TickAction, DeltaTime) == 0x000000, "Member 'BP_Action_Unique_PinkCat_CatPunch_C_TickAction::DeltaTime' has a wrong offset!");

}

