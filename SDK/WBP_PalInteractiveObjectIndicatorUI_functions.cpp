#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PalInteractiveObjectIndicatorUI

#include "Basic.hpp"

#include "WBP_PalInteractiveObjectIndicatorUI_classes.hpp"
#include "WBP_PalInteractiveObjectIndicatorUI_parameters.hpp"


namespace SDK
{

// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.Activate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInputConsume                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPalUserWidget*                   Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PalInteractiveObjectIndicatorUI_C::Activate(bool IsInputConsume, class UPalUserWidget* Parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "Activate");

	Params::WBP_PalInteractiveObjectIndicatorUI_C_Activate Parms{};

	Parms.IsInputConsume = IsInputConsume;
	Parms.Parent = Parent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.Deactivate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalUserWidget*                   Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PalInteractiveObjectIndicatorUI_C::Deactivate(class UPalUserWidget* Parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "Deactivate");

	Params::WBP_PalInteractiveObjectIndicatorUI_C_Deactivate Parms{};

	Parms.Parent = Parent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.EndTriggerInteract
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_PalInteractiveObjectIndicatorUI_C::EndTriggerInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "EndTriggerInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.IsInteracting
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWBP_PalInteractiveObjectIndicatorUI_C::IsInteracting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "IsInteracting");

	Params::WBP_PalInteractiveObjectIndicatorUI_C_IsInteracting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.IsSameTriggeringActionType
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPalInteractiveObjectActionType         ActionType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSame                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PalInteractiveObjectIndicatorUI_C::IsSameTriggeringActionType(EPalInteractiveObjectActionType ActionType, bool* IsSame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "IsSameTriggeringActionType");

	Params::WBP_PalInteractiveObjectIndicatorUI_C_IsSameTriggeringActionType Parms{};

	Parms.ActionType = ActionType;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSame != nullptr)
		*IsSame = Parms.IsSame;
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.PressInteractButton
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_PalInteractiveObjectIndicatorUI_C::PressInteractButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "PressInteractButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.RegisterAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInputConsume                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPalUserWidget*                   Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PalInteractiveObjectIndicatorUI_C::RegisterAction(bool IsInputConsume, class UPalUserWidget* Parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "RegisterAction");

	Params::WBP_PalInteractiveObjectIndicatorUI_C_RegisterAction Parms{};

	Parms.IsInputConsume = IsInputConsume;
	Parms.Parent = Parent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.ReleaseInteractButton
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_PalInteractiveObjectIndicatorUI_C::ReleaseInteractButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "ReleaseInteractButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.ResetInteractInterval
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_PalInteractiveObjectIndicatorUI_C::ResetInteractInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "ResetInteractInterval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.SetEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PalInteractiveObjectIndicatorUI_C::SetEnable(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "SetEnable");

	Params::WBP_PalInteractiveObjectIndicatorUI_C_SetEnable Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.Setup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPalInteractiveObjectActionType         ActionType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IPalInteractiveObjectComponentInterface>Interface                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PalInteractiveObjectIndicatorUI_C::Setup(EPalInteractiveObjectActionType ActionType, TScriptInterface<class IPalInteractiveObjectComponentInterface> Interface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "Setup");

	Params::WBP_PalInteractiveObjectIndicatorUI_C_Setup Parms{};

	Parms.ActionType = ActionType;
	Parms.Interface = Interface;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.StartTriggerInteract
// (Private, BlueprintCallable, BlueprintEvent)

void UWBP_PalInteractiveObjectIndicatorUI_C::StartTriggerInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "StartTriggerInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.Unregister Action
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalUserWidget*                   Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PalInteractiveObjectIndicatorUI_C::Unregister_Action(class UPalUserWidget* Parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "Unregister Action");

	Params::WBP_PalInteractiveObjectIndicatorUI_C_Unregister_Action Parms{};

	Parms.Parent = Parent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.Update Button Type
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPalInteractiveObjectButtonType         NewButtonType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewLongPushTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsValidInteract                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_CanToggle                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PalInteractiveObjectIndicatorUI_C::Update_Button_Type(EPalInteractiveObjectButtonType NewButtonType, double NewLongPushTime, bool IsValidInteract, bool Param_CanToggle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "Update Button Type");

	Params::WBP_PalInteractiveObjectIndicatorUI_C_Update_Button_Type Parms{};

	Parms.NewButtonType = NewButtonType;
	Parms.NewLongPushTime = NewLongPushTime;
	Parms.IsValidInteract = IsValidInteract;
	Parms.Param_CanToggle = Param_CanToggle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.Update Interactable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInteractable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPalUserWidget*                   Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PalInteractiveObjectIndicatorUI_C::Update_Interactable(bool bInteractable, class UPalUserWidget* Parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "Update Interactable");

	Params::WBP_PalInteractiveObjectIndicatorUI_C_Update_Interactable Parms{};

	Parms.bInteractable = bInteractable;
	Parms.Parent = Parent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.UpdateText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsLockedByRide                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PalInteractiveObjectIndicatorUI_C::UpdateText(const class FText& InText, bool IsLockedByRide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "UpdateText");

	Params::WBP_PalInteractiveObjectIndicatorUI_C_UpdateText Parms{};

	Parms.InText = std::move(InText);
	Parms.IsLockedByRide = IsLockedByRide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C.UpdateVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PalInteractiveObjectIndicatorUI_C::UpdateVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalInteractiveObjectIndicatorUI_C", "UpdateVisible");

	Params::WBP_PalInteractiveObjectIndicatorUI_C_UpdateVisible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}

}

