#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PalCraftInfo_Pal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PalCraftInfo_Pal.WBP_PalCraftInfo_Pal_C
// 0x0070 (0x02E8 - 0x0278)
class UWBP_PalCraftInfo_Pal_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_PalTextBlock_C*                     BP_PalTextBlock_Num_HP_5;                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           FixedAssignCanvas;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           Gauge_Hunger;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_NowSanity;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCommonCharacterSlot_C*          WBP_PalCommonCharacterSlot;                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterial*                              DefaultFontMaterial;                               // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UPalIndividualCharacterHandle> bindedHandle;                                      // 0x02B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         SavedMaxSanity;                                    // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SavedMaxHunger;                                    // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BindEvent(class UPalIndividualCharacterParameter* Paremter);
	void Clear();
	void ExecuteUbergraph_WBP_PalCraftInfo_Pal(int32 EntryPoint);
	void OnInitialized();
	void SetTargetPal(class UPalIndividualCharacterSlot* TargetSlot, bool IsFixedAssign);
	void UnbindEvent();
	void UpdateHunger(float Current, float Last);
	void UpdateSanity(float NowSanity, float OldSanity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PalCraftInfo_Pal_C">();
	}
	static class UWBP_PalCraftInfo_Pal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PalCraftInfo_Pal_C>();
	}
};
static_assert(alignof(UWBP_PalCraftInfo_Pal_C) == 0x000008, "Wrong alignment on UWBP_PalCraftInfo_Pal_C");
static_assert(sizeof(UWBP_PalCraftInfo_Pal_C) == 0x0002E8, "Wrong size on UWBP_PalCraftInfo_Pal_C");
static_assert(offsetof(UWBP_PalCraftInfo_Pal_C, UberGraphFrame) == 0x000278, "Member 'UWBP_PalCraftInfo_Pal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_Pal_C, BP_PalTextBlock_Num_HP_5) == 0x000280, "Member 'UWBP_PalCraftInfo_Pal_C::BP_PalTextBlock_Num_HP_5' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_Pal_C, FixedAssignCanvas) == 0x000288, "Member 'UWBP_PalCraftInfo_Pal_C::FixedAssignCanvas' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_Pal_C, Gauge_Hunger) == 0x000290, "Member 'UWBP_PalCraftInfo_Pal_C::Gauge_Hunger' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_Pal_C, Text_NowSanity) == 0x000298, "Member 'UWBP_PalCraftInfo_Pal_C::Text_NowSanity' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_Pal_C, WBP_PalCommonCharacterSlot) == 0x0002A0, "Member 'UWBP_PalCraftInfo_Pal_C::WBP_PalCommonCharacterSlot' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_Pal_C, DefaultFontMaterial) == 0x0002A8, "Member 'UWBP_PalCraftInfo_Pal_C::DefaultFontMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_Pal_C, bindedHandle) == 0x0002B0, "Member 'UWBP_PalCraftInfo_Pal_C::bindedHandle' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_Pal_C, SavedMaxSanity) == 0x0002E0, "Member 'UWBP_PalCraftInfo_Pal_C::SavedMaxSanity' has a wrong offset!");
static_assert(offsetof(UWBP_PalCraftInfo_Pal_C, SavedMaxHunger) == 0x0002E4, "Member 'UWBP_PalCraftInfo_Pal_C::SavedMaxHunger' has a wrong offset!");

}

