#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PalInteractiveObjectIndicatorUI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PalInteractiveObjectIndicatorUI.WBP_PalInteractiveObjectIndicatorUI_C
// 0x0118 (0x0520 - 0x0408)
class UWBP_PalInteractiveObjectIndicatorUI_C final : public UPalUserWidget
{
public:
	class UWidgetAnimation*                       Default_In;                                        // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_Ingame_Interact_C*                 WBP_Ingame_Interact;                               // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0418(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EPalInteractiveObjectActionType, struct FDataTableRowHandle> InteractKeyTextIdMap;                              // 0x0430(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	EPalInteractiveObjectActionType               Action_Type;                                       // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B2[0x7];                                     // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPalInteractiveObjectActionType, struct FPalDataTableRowName_UIInputAction> ActionTypeNameMap;                                 // 0x0488(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TScriptInterface<class IPalInteractiveObjectComponentInterface> InteractiveObject;                                 // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalInteractiveObjectButtonType               buttonType;                                        // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B3[0x7];                                     // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LongPushTime;                                      // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   TriggerActionHandle;                               // 0x04F8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FPalUIActionBindData                   EndTriggerActionhandle;                            // 0x04FC(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          CachedIsValidInteract;                             // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRegisteredActionInput;                          // 0x0501(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnableSelf;                                      // 0x0502(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B4[0x5];                                     // 0x0503(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    LockedByRideMSGID;                                 // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          CanToggle;                                         // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInteractInterval;                                // 0x0519(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Activate(bool IsInputConsume, class UPalUserWidget* Parent);
	void Deactivate(class UPalUserWidget* Parent);
	void EndTriggerInteract();
	bool IsInteracting();
	void IsSameTriggeringActionType(EPalInteractiveObjectActionType ActionType, bool* IsSame);
	void PressInteractButton();
	void RegisterAction(bool IsInputConsume, class UPalUserWidget* Parent);
	void ReleaseInteractButton();
	void ResetInteractInterval();
	void SetEnable(bool IsEnable);
	void Setup(EPalInteractiveObjectActionType ActionType, TScriptInterface<class IPalInteractiveObjectComponentInterface> Interface);
	void StartTriggerInteract();
	void Unregister_Action(class UPalUserWidget* Parent);
	void Update_Button_Type(EPalInteractiveObjectButtonType NewButtonType, double NewLongPushTime, bool IsValidInteract, bool Param_CanToggle);
	void Update_Interactable(bool bInteractable, class UPalUserWidget* Parent);
	void UpdateText(const class FText& InText, bool IsLockedByRide);
	void UpdateVisible(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PalInteractiveObjectIndicatorUI_C">();
	}
	static class UWBP_PalInteractiveObjectIndicatorUI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PalInteractiveObjectIndicatorUI_C>();
	}
};
static_assert(alignof(UWBP_PalInteractiveObjectIndicatorUI_C) == 0x000008, "Wrong alignment on UWBP_PalInteractiveObjectIndicatorUI_C");
static_assert(sizeof(UWBP_PalInteractiveObjectIndicatorUI_C) == 0x000520, "Wrong size on UWBP_PalInteractiveObjectIndicatorUI_C");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, Default_In) == 0x000408, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::Default_In' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, WBP_Ingame_Interact) == 0x000410, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::WBP_Ingame_Interact' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, Offset) == 0x000418, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::Offset' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, InteractKeyTextIdMap) == 0x000430, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::InteractKeyTextIdMap' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, Action_Type) == 0x000480, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::Action_Type' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, ActionTypeNameMap) == 0x000488, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::ActionTypeNameMap' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, InteractiveObject) == 0x0004D8, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::InteractiveObject' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, buttonType) == 0x0004E8, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::buttonType' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, LongPushTime) == 0x0004F0, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::LongPushTime' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, TriggerActionHandle) == 0x0004F8, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::TriggerActionHandle' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, EndTriggerActionhandle) == 0x0004FC, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::EndTriggerActionhandle' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, CachedIsValidInteract) == 0x000500, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::CachedIsValidInteract' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, bIsRegisteredActionInput) == 0x000501, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::bIsRegisteredActionInput' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, IsEnableSelf) == 0x000502, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::IsEnableSelf' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, LockedByRideMSGID) == 0x000508, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::LockedByRideMSGID' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, CanToggle) == 0x000518, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::CanToggle' has a wrong offset!");
static_assert(offsetof(UWBP_PalInteractiveObjectIndicatorUI_C, IsInteractInterval) == 0x000519, "Member 'UWBP_PalInteractiveObjectIndicatorUI_C::IsInteractInterval' has a wrong offset!");

}

