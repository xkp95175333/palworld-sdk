#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryEquipment_UseItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_InventoryEquipment_UseItem.WBP_InventoryEquipment_UseItem_C
// 0x0168 (0x0598 - 0x0430)
class UWBP_InventoryEquipment_UseItem_C final : public UPalUserWidgetOverlayUI
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_Open;                                          // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_IngameMenu_PalBox_PalDetail_C*     WBP_IngameMenu_PalBox_PalDetail;                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_btn_C*                        WBP_Menu_btn;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_PalList_C*                    WBP_Menu_PalList;                                  // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_PalList_C*                    WBP_Menu_PalList_1;                                // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_PalList_C*                    WBP_Menu_PalList_2;                                // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_PalList_C*                    WBP_Menu_PalList_3;                                // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_PalList_C*                    WBP_Menu_PalList_4;                                // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_PalList_C*                    WBP_Menu_PalList_5;                                // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInGameMenuItemSlot_C*           WBP_PalInGameMenuItemSlot;                         // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWBP_Menu_PalList_C*>            OtomoList;                                         // 0x0488(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UPalItemSlot*                           CurrentSlot;                                       // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             EndUseItem;                                        // 0x04A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UPalStaticItemDataBase*                 CurrentItem;                                       // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CachedConsumeAmount;                               // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5852[0x4];                                     // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    SkillLearnedMsgIDHandle;                           // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class FName                                   TabActionName;                                     // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    SickCuredMsgIDHandle;                              // 0x04D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UPalIndividualCharacterParameter*       TempIndividualParameter;                           // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UPalIndividualCharacterParameter*> ExpChangeBindList;                                 // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsSkipHidePalDetail;                               // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5853[0x7];                                     // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPalIndividualCharacterParameter*> CanLevelupList;                                    // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UPalIndividualCharacterParameter*> CanLevelupListCache;                               // 0x0518(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDataTableRowHandle                    RankUpMsgIDHandle;                                 // 0x0528(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          DialogLiving;                                      // 0x0538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5854[0x7];                                     // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPalItemTypeB, class UAkAudioEvent*>     ConsumeAKEventMap;                                 // 0x0540(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	EPalItemTypeB                                 UsedItemType;                                      // 0x0590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_InventoryEquipment_UseItem_WBP_Menu_btn_K2Node_ComponentBoundEvent_0_OnButtonClicked__DelegateSignature();
	bool CanUsePlayer(class UPalIndividualCharacterHandle* PlayerHandle);
	void Destruct();
	void EndUseItem__DelegateSignature();
	void ExecuteUbergraph_WBP_InventoryEquipment_UseItem(int32 EntryPoint);
	void HidePalDetail();
	void OnClose();
	void OnInitialized();
	void OnMedineUsed();
	void OnPalExpChange(int32 AddExp, int32 NowExp);
	void OnPalRankChanged(int32 NowRank, int32 OldRank);
	void OnPalTalentChanged();
	void OnSetup();
	void OnUseupItem();
	void OnWazaMachineUsed(class UPalIndividualCharacterParameter* IndividualParameter, EPalWazaID WazaID);
	void Refresh(bool IsConfirm);
	void ResetCacheUseAmount(class UPalItemSlot* TargetSlot);
	void Setup(class UPalItemSlot* SelectedItemSlot);
	void SetupCllickSE(class UPalIndividualCharacterHandle* IndividualHandle, class UWBP_Menu_PalList_C* MenuPalList);
	void SetupPalInteractable(class UPalIndividualCharacterHandle* IndividualHandle, class UWBP_Menu_PalList_C* MenuPalList);
	void ShowPalDetail(class UPalIndividualCharacterHandle* Individual);
	void Try_Use_Item_Sound(class FName StaticItemId, class UPalIndividualCharacterParameter* TargetCharacterParameter);
	void UseItemTo(class UPalIndividualCharacterHandle* Individual);
	void WBP_InventoryEquipment_UseItem_AutoGenFunc(int32 AddLevel, int32 NowLevel);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_InventoryEquipment_UseItem_C">();
	}
	static class UWBP_InventoryEquipment_UseItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_InventoryEquipment_UseItem_C>();
	}
};
static_assert(alignof(UWBP_InventoryEquipment_UseItem_C) == 0x000008, "Wrong alignment on UWBP_InventoryEquipment_UseItem_C");
static_assert(sizeof(UWBP_InventoryEquipment_UseItem_C) == 0x000598, "Wrong size on UWBP_InventoryEquipment_UseItem_C");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, UberGraphFrame) == 0x000430, "Member 'UWBP_InventoryEquipment_UseItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, Anm_Open) == 0x000438, "Member 'UWBP_InventoryEquipment_UseItem_C::Anm_Open' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, WBP_IngameMenu_PalBox_PalDetail) == 0x000440, "Member 'UWBP_InventoryEquipment_UseItem_C::WBP_IngameMenu_PalBox_PalDetail' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, WBP_Menu_btn) == 0x000448, "Member 'UWBP_InventoryEquipment_UseItem_C::WBP_Menu_btn' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, WBP_Menu_PalList) == 0x000450, "Member 'UWBP_InventoryEquipment_UseItem_C::WBP_Menu_PalList' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, WBP_Menu_PalList_1) == 0x000458, "Member 'UWBP_InventoryEquipment_UseItem_C::WBP_Menu_PalList_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, WBP_Menu_PalList_2) == 0x000460, "Member 'UWBP_InventoryEquipment_UseItem_C::WBP_Menu_PalList_2' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, WBP_Menu_PalList_3) == 0x000468, "Member 'UWBP_InventoryEquipment_UseItem_C::WBP_Menu_PalList_3' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, WBP_Menu_PalList_4) == 0x000470, "Member 'UWBP_InventoryEquipment_UseItem_C::WBP_Menu_PalList_4' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, WBP_Menu_PalList_5) == 0x000478, "Member 'UWBP_InventoryEquipment_UseItem_C::WBP_Menu_PalList_5' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, WBP_PalInGameMenuItemSlot) == 0x000480, "Member 'UWBP_InventoryEquipment_UseItem_C::WBP_PalInGameMenuItemSlot' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, OtomoList) == 0x000488, "Member 'UWBP_InventoryEquipment_UseItem_C::OtomoList' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, CurrentSlot) == 0x000498, "Member 'UWBP_InventoryEquipment_UseItem_C::CurrentSlot' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, EndUseItem) == 0x0004A0, "Member 'UWBP_InventoryEquipment_UseItem_C::EndUseItem' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, CurrentItem) == 0x0004B0, "Member 'UWBP_InventoryEquipment_UseItem_C::CurrentItem' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, CachedConsumeAmount) == 0x0004B8, "Member 'UWBP_InventoryEquipment_UseItem_C::CachedConsumeAmount' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, SkillLearnedMsgIDHandle) == 0x0004C0, "Member 'UWBP_InventoryEquipment_UseItem_C::SkillLearnedMsgIDHandle' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, TabActionName) == 0x0004D0, "Member 'UWBP_InventoryEquipment_UseItem_C::TabActionName' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, SickCuredMsgIDHandle) == 0x0004D8, "Member 'UWBP_InventoryEquipment_UseItem_C::SickCuredMsgIDHandle' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, TempIndividualParameter) == 0x0004E8, "Member 'UWBP_InventoryEquipment_UseItem_C::TempIndividualParameter' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, ExpChangeBindList) == 0x0004F0, "Member 'UWBP_InventoryEquipment_UseItem_C::ExpChangeBindList' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, IsSkipHidePalDetail) == 0x000500, "Member 'UWBP_InventoryEquipment_UseItem_C::IsSkipHidePalDetail' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, CanLevelupList) == 0x000508, "Member 'UWBP_InventoryEquipment_UseItem_C::CanLevelupList' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, CanLevelupListCache) == 0x000518, "Member 'UWBP_InventoryEquipment_UseItem_C::CanLevelupListCache' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, RankUpMsgIDHandle) == 0x000528, "Member 'UWBP_InventoryEquipment_UseItem_C::RankUpMsgIDHandle' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, DialogLiving) == 0x000538, "Member 'UWBP_InventoryEquipment_UseItem_C::DialogLiving' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, ConsumeAKEventMap) == 0x000540, "Member 'UWBP_InventoryEquipment_UseItem_C::ConsumeAKEventMap' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_UseItem_C, UsedItemType) == 0x000590, "Member 'UWBP_InventoryEquipment_UseItem_C::UsedItemType' has a wrong offset!");

}

