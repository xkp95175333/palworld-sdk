#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PalWorkProduct

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PalWorkProduct.WBP_PalWorkProduct_C
// 0x00E0 (0x04E8 - 0x0408)
class UWBP_PalWorkProduct_C final : public UPalUIMapObjectStatusIndicatorBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_DetailToSimple;                                // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CircleGauge_Progress;                              // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_ItemName;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_MaxItemNum;                                   // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_NowItemNum;                                   // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCommonItemIcon_C*               WBP_PalCommonItemIcon;                             // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal;                              // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal_1;                            // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal_2;                            // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal_3;                            // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCraftInfo_Pal_C*                WBP_PalCraftInfo_Pal_4;                            // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RequirePalInfo_C*                  WBP_RequirePalInfo;                                // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<EPalFarmCropState, struct FDataTableRowHandle> StateMsgIdMap;                                     // 0x0470(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<class UWBP_PalCraftInfo_Pal_C*>        PalInfos;                                          // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FTimerHandle                           DisplayCheckTimer;                                 // 0x04D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisplayedDetail;                                 // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideNextState;                                     // 0x04D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5393[0x6];                                     // 0x04DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalMapObjectProductItemModel*          Product_Item_Model;                                // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void Destruct();
	void DisplayCheck();
	void ExecuteUbergraph_WBP_PalWorkProduct(int32 EntryPoint);
	void On_Updated_Worker_Pal(class UPalWorkBase* Work);
	void OnSetup();
	void OnUpdateContainer(class UPalItemContainer* Container);
	void OnUpdateProgress(class UPalWorkProgress* Progress);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PalWorkProduct_C">();
	}
	static class UWBP_PalWorkProduct_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PalWorkProduct_C>();
	}
};
static_assert(alignof(UWBP_PalWorkProduct_C) == 0x000008, "Wrong alignment on UWBP_PalWorkProduct_C");
static_assert(sizeof(UWBP_PalWorkProduct_C) == 0x0004E8, "Wrong size on UWBP_PalWorkProduct_C");
static_assert(offsetof(UWBP_PalWorkProduct_C, UberGraphFrame) == 0x000408, "Member 'UWBP_PalWorkProduct_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, Anm_DetailToSimple) == 0x000410, "Member 'UWBP_PalWorkProduct_C::Anm_DetailToSimple' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, CircleGauge_Progress) == 0x000418, "Member 'UWBP_PalWorkProduct_C::CircleGauge_Progress' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, Text_ItemName) == 0x000420, "Member 'UWBP_PalWorkProduct_C::Text_ItemName' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, Text_MaxItemNum) == 0x000428, "Member 'UWBP_PalWorkProduct_C::Text_MaxItemNum' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, Text_NowItemNum) == 0x000430, "Member 'UWBP_PalWorkProduct_C::Text_NowItemNum' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, WBP_PalCommonItemIcon) == 0x000438, "Member 'UWBP_PalWorkProduct_C::WBP_PalCommonItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, WBP_PalCraftInfo_Pal) == 0x000440, "Member 'UWBP_PalWorkProduct_C::WBP_PalCraftInfo_Pal' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, WBP_PalCraftInfo_Pal_1) == 0x000448, "Member 'UWBP_PalWorkProduct_C::WBP_PalCraftInfo_Pal_1' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, WBP_PalCraftInfo_Pal_2) == 0x000450, "Member 'UWBP_PalWorkProduct_C::WBP_PalCraftInfo_Pal_2' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, WBP_PalCraftInfo_Pal_3) == 0x000458, "Member 'UWBP_PalWorkProduct_C::WBP_PalCraftInfo_Pal_3' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, WBP_PalCraftInfo_Pal_4) == 0x000460, "Member 'UWBP_PalWorkProduct_C::WBP_PalCraftInfo_Pal_4' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, WBP_RequirePalInfo) == 0x000468, "Member 'UWBP_PalWorkProduct_C::WBP_RequirePalInfo' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, StateMsgIdMap) == 0x000470, "Member 'UWBP_PalWorkProduct_C::StateMsgIdMap' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, PalInfos) == 0x0004C0, "Member 'UWBP_PalWorkProduct_C::PalInfos' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, DisplayCheckTimer) == 0x0004D0, "Member 'UWBP_PalWorkProduct_C::DisplayCheckTimer' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, IsDisplayedDetail) == 0x0004D8, "Member 'UWBP_PalWorkProduct_C::IsDisplayedDetail' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, HideNextState) == 0x0004D9, "Member 'UWBP_PalWorkProduct_C::HideNextState' has a wrong offset!");
static_assert(offsetof(UWBP_PalWorkProduct_C, Product_Item_Model) == 0x0004E0, "Member 'UWBP_PalWorkProduct_C::Product_Item_Model' has a wrong offset!");

}

