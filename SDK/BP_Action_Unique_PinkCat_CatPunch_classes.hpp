#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_Unique_PinkCat_CatPunch

#include "Basic.hpp"

#include "EAction_PinkCat_CatPunch_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_ActionUniqueAttackBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_Unique_PinkCat_CatPunch.BP_Action_Unique_PinkCat_CatPunch_C
// 0x0030 (0x0240 - 0x0210)
class UBP_Action_Unique_PinkCat_CatPunch_C final : public UBP_ActionUniqueAttackBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Action_Unique_PinkCat_CatPunch_C; // 0x0210(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        AttackTime;                                        // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAction_PinkCat_CatPunch                      State;                                             // 0x0220(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4093[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MoveSpeed;                                         // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HomingOffTrigger;                                  // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EndAction();
	void EndAttack();
	void ExecuteUbergraph_BP_Action_Unique_PinkCat_CatPunch(int32 EntryPoint);
	void Get_Target_Rotation(struct FRotator* TargetRotation);
	void MoveToTarget(double DeltaTime);
	void OnBlendOut_6FCC02CF40A11D28BC681A887E620E6F(class FName NotifyName);
	void OnBlendOut_7B37005E4C184523A70797A405F21101(class FName NotifyName);
	void OnBlendOut_BF5F18464CE41760481C058932345CA4(class FName NotifyName);
	void OnBreakAction();
	void OnCompleted_6FCC02CF40A11D28BC681A887E620E6F(class FName NotifyName);
	void OnCompleted_7B37005E4C184523A70797A405F21101(class FName NotifyName);
	void OnCompleted_BF5F18464CE41760481C058932345CA4(class FName NotifyName);
	void OnInterrupted_6FCC02CF40A11D28BC681A887E620E6F(class FName NotifyName);
	void OnInterrupted_7B37005E4C184523A70797A405F21101(class FName NotifyName);
	void OnInterrupted_BF5F18464CE41760481C058932345CA4(class FName NotifyName);
	void OnNotifyBegin_6FCC02CF40A11D28BC681A887E620E6F(class FName NotifyName);
	void OnNotifyBegin_7B37005E4C184523A70797A405F21101(class FName NotifyName);
	void OnNotifyBegin_BF5F18464CE41760481C058932345CA4(class FName NotifyName);
	void OnNotifyEnd_6FCC02CF40A11D28BC681A887E620E6F(class FName NotifyName);
	void OnNotifyEnd_7B37005E4C184523A70797A405F21101(class FName NotifyName);
	void OnNotifyEnd_BF5F18464CE41760481C058932345CA4(class FName NotifyName);
	void _________0();
	void OnBeginAction();
	void OnEndAction();
	void TickAction(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_Unique_PinkCat_CatPunch_C">();
	}
	static class UBP_Action_Unique_PinkCat_CatPunch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_Unique_PinkCat_CatPunch_C>();
	}
};
static_assert(alignof(UBP_Action_Unique_PinkCat_CatPunch_C) == 0x000010, "Wrong alignment on UBP_Action_Unique_PinkCat_CatPunch_C");
static_assert(sizeof(UBP_Action_Unique_PinkCat_CatPunch_C) == 0x000240, "Wrong size on UBP_Action_Unique_PinkCat_CatPunch_C");
static_assert(offsetof(UBP_Action_Unique_PinkCat_CatPunch_C, UberGraphFrame_BP_Action_Unique_PinkCat_CatPunch_C) == 0x000210, "Member 'UBP_Action_Unique_PinkCat_CatPunch_C::UberGraphFrame_BP_Action_Unique_PinkCat_CatPunch_C' has a wrong offset!");
static_assert(offsetof(UBP_Action_Unique_PinkCat_CatPunch_C, AttackTime) == 0x000218, "Member 'UBP_Action_Unique_PinkCat_CatPunch_C::AttackTime' has a wrong offset!");
static_assert(offsetof(UBP_Action_Unique_PinkCat_CatPunch_C, State) == 0x000220, "Member 'UBP_Action_Unique_PinkCat_CatPunch_C::State' has a wrong offset!");
static_assert(offsetof(UBP_Action_Unique_PinkCat_CatPunch_C, MoveSpeed) == 0x000228, "Member 'UBP_Action_Unique_PinkCat_CatPunch_C::MoveSpeed' has a wrong offset!");
static_assert(offsetof(UBP_Action_Unique_PinkCat_CatPunch_C, HomingOffTrigger) == 0x000230, "Member 'UBP_Action_Unique_PinkCat_CatPunch_C::HomingOffTrigger' has a wrong offset!");

}

