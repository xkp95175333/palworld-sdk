#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Shotgun_NPC

#include "Basic.hpp"

#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function BP_Shotgun_NPC.BP_Shotgun_NPC_C.ExecuteUbergraph_BP_Shotgun_NPC
// 0x0014 (0x0014 - 0x0000)
struct BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponNotifyType                             K2Node_Event_type;                                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332E[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC) == 0x000004, "Wrong alignment on BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC");
static_assert(sizeof(BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC) == 0x000014, "Wrong size on BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC");
static_assert(offsetof(BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC, EntryPoint) == 0x000000, "Member 'BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC, Temp_int_Variable) == 0x000004, "Member 'BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC, K2Node_Event_type) == 0x000008, "Member 'BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC::K2Node_Event_type' has a wrong offset!");
static_assert(offsetof(BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_Shotgun_NPC_C_ExecuteUbergraph_BP_Shotgun_NPC::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Shotgun_NPC.BP_Shotgun_NPC_C.OnWeaponNotify
// 0x0001 (0x0001 - 0x0000)
struct BP_Shotgun_NPC_C_OnWeaponNotify final
{
public:
	EWeaponNotifyType                             Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Shotgun_NPC_C_OnWeaponNotify) == 0x000001, "Wrong alignment on BP_Shotgun_NPC_C_OnWeaponNotify");
static_assert(sizeof(BP_Shotgun_NPC_C_OnWeaponNotify) == 0x000001, "Wrong size on BP_Shotgun_NPC_C_OnWeaponNotify");
static_assert(offsetof(BP_Shotgun_NPC_C_OnWeaponNotify, Type) == 0x000000, "Member 'BP_Shotgun_NPC_C_OnWeaponNotify::Type' has a wrong offset!");

// Function BP_Shotgun_NPC.BP_Shotgun_NPC_C.GetNPCWeaponDamage
// 0x0004 (0x0004 - 0x0000)
struct BP_Shotgun_NPC_C_GetNPCWeaponDamage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Shotgun_NPC_C_GetNPCWeaponDamage) == 0x000004, "Wrong alignment on BP_Shotgun_NPC_C_GetNPCWeaponDamage");
static_assert(sizeof(BP_Shotgun_NPC_C_GetNPCWeaponDamage) == 0x000004, "Wrong size on BP_Shotgun_NPC_C_GetNPCWeaponDamage");
static_assert(offsetof(BP_Shotgun_NPC_C_GetNPCWeaponDamage, ReturnValue) == 0x000000, "Member 'BP_Shotgun_NPC_C_GetNPCWeaponDamage::ReturnValue' has a wrong offset!");

// Function BP_Shotgun_NPC.BP_Shotgun_NPC_C.GetWeaponDamage
// 0x0008 (0x0008 - 0x0000)
struct BP_Shotgun_NPC_C_GetWeaponDamage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcNPCWeaponDamage_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Shotgun_NPC_C_GetWeaponDamage) == 0x000004, "Wrong alignment on BP_Shotgun_NPC_C_GetWeaponDamage");
static_assert(sizeof(BP_Shotgun_NPC_C_GetWeaponDamage) == 0x000008, "Wrong size on BP_Shotgun_NPC_C_GetWeaponDamage");
static_assert(offsetof(BP_Shotgun_NPC_C_GetWeaponDamage, ReturnValue) == 0x000000, "Member 'BP_Shotgun_NPC_C_GetWeaponDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Shotgun_NPC_C_GetWeaponDamage, CallFunc_CalcNPCWeaponDamage_ReturnValue) == 0x000004, "Member 'BP_Shotgun_NPC_C_GetWeaponDamage::CallFunc_CalcNPCWeaponDamage_ReturnValue' has a wrong offset!");

}

