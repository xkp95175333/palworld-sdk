#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PumpActionShotgun

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function BP_PumpActionShotgun.BP_PumpActionShotgun_C.EjectARound
// 0x0070 (0x0070 - 0x0000)
struct BP_PumpActionShotgun_C_EjectARound final
{
public:
	struct FTransform                             CallFunc_GetEjectionPort_EjectionTransform;        // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ShotgunAmmo_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PumpActionShotgun_C_EjectARound) == 0x000010, "Wrong alignment on BP_PumpActionShotgun_C_EjectARound");
static_assert(sizeof(BP_PumpActionShotgun_C_EjectARound) == 0x000070, "Wrong size on BP_PumpActionShotgun_C_EjectARound");
static_assert(offsetof(BP_PumpActionShotgun_C_EjectARound, CallFunc_GetEjectionPort_EjectionTransform) == 0x000000, "Member 'BP_PumpActionShotgun_C_EjectARound::CallFunc_GetEjectionPort_EjectionTransform' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_EjectARound, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'BP_PumpActionShotgun_C_EjectARound::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_EjectARound, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'BP_PumpActionShotgun_C_EjectARound::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_PumpActionShotgun.BP_PumpActionShotgun_C.ExecuteUbergraph_BP_PumpActionShotgun
// 0x0330 (0x0330 - 0x0000)
struct BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistBulletInPlayerInventory_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B53[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShoot_can;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnshotInternal_IsShoted;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponNotifyType                             K2Node_Event_type;                                 // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B54[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B55[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B56[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalShooterComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFullMagazine_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B57[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponAnimationInfo                   CallFunc_GetCurrentWeaponAnimationInfo_ReturnValue; // 0x00C0(0x0258)(ConstParm)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B58[0x4];                                     // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun) == 0x000008, "Wrong alignment on BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun");
static_assert(sizeof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun) == 0x000330, "Wrong size on BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, EntryPoint) == 0x000000, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, CallFunc_IsExistBulletInPlayerInventory_ReturnValue) == 0x000004, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::CallFunc_IsExistBulletInPlayerInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_CustomEvent_NotifyName_4) == 0x000018, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_CustomEvent_NotifyName_3) == 0x000020, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_CustomEvent_NotifyName_2) == 0x000038, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_CustomEvent_NotifyName_1) == 0x000050, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_CustomEvent_NotifyName) == 0x000068, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_CreateDelegate_OutputDelegate_4) == 0x000070, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, Temp_name_Variable) == 0x000080, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, CallFunc_CanShoot_can) == 0x000088, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::CallFunc_CanShoot_can' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, CallFunc_OnshotInternal_IsShoted) == 0x000089, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::CallFunc_OnshotInternal_IsShoted' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_Event_type) == 0x00008A, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_Event_type' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, CallFunc_GetOwner_ReturnValue) == 0x000090, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_DynamicCast_AsPal_Character) == 0x0000A0, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, CallFunc_GetComponentByClass_ReturnValue) == 0x0000B0, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, CallFunc_IsFullMagazine_ReturnValue) == 0x0000B8, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::CallFunc_IsFullMagazine_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, CallFunc_GetCurrentWeaponAnimationInfo_ReturnValue) == 0x0000C0, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::CallFunc_GetCurrentWeaponAnimationInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, CallFunc_PlayAnimMontage_ReturnValue) == 0x000318, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000320, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun, CallFunc_IsValid_ReturnValue) == 0x000328, "Member 'BP_PumpActionShotgun_C_ExecuteUbergraph_BP_PumpActionShotgun::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PumpActionShotgun.BP_PumpActionShotgun_C.OnBlendOut_FCB44FF643DA97B49C538D845683A965
// 0x0008 (0x0008 - 0x0000)
struct BP_PumpActionShotgun_C_OnBlendOut_FCB44FF643DA97B49C538D845683A965 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PumpActionShotgun_C_OnBlendOut_FCB44FF643DA97B49C538D845683A965) == 0x000004, "Wrong alignment on BP_PumpActionShotgun_C_OnBlendOut_FCB44FF643DA97B49C538D845683A965");
static_assert(sizeof(BP_PumpActionShotgun_C_OnBlendOut_FCB44FF643DA97B49C538D845683A965) == 0x000008, "Wrong size on BP_PumpActionShotgun_C_OnBlendOut_FCB44FF643DA97B49C538D845683A965");
static_assert(offsetof(BP_PumpActionShotgun_C_OnBlendOut_FCB44FF643DA97B49C538D845683A965, NotifyName) == 0x000000, "Member 'BP_PumpActionShotgun_C_OnBlendOut_FCB44FF643DA97B49C538D845683A965::NotifyName' has a wrong offset!");

// Function BP_PumpActionShotgun.BP_PumpActionShotgun_C.OnCompleted_FCB44FF643DA97B49C538D845683A965
// 0x0008 (0x0008 - 0x0000)
struct BP_PumpActionShotgun_C_OnCompleted_FCB44FF643DA97B49C538D845683A965 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PumpActionShotgun_C_OnCompleted_FCB44FF643DA97B49C538D845683A965) == 0x000004, "Wrong alignment on BP_PumpActionShotgun_C_OnCompleted_FCB44FF643DA97B49C538D845683A965");
static_assert(sizeof(BP_PumpActionShotgun_C_OnCompleted_FCB44FF643DA97B49C538D845683A965) == 0x000008, "Wrong size on BP_PumpActionShotgun_C_OnCompleted_FCB44FF643DA97B49C538D845683A965");
static_assert(offsetof(BP_PumpActionShotgun_C_OnCompleted_FCB44FF643DA97B49C538D845683A965, NotifyName) == 0x000000, "Member 'BP_PumpActionShotgun_C_OnCompleted_FCB44FF643DA97B49C538D845683A965::NotifyName' has a wrong offset!");

// Function BP_PumpActionShotgun.BP_PumpActionShotgun_C.OnInterrupted_FCB44FF643DA97B49C538D845683A965
// 0x0008 (0x0008 - 0x0000)
struct BP_PumpActionShotgun_C_OnInterrupted_FCB44FF643DA97B49C538D845683A965 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PumpActionShotgun_C_OnInterrupted_FCB44FF643DA97B49C538D845683A965) == 0x000004, "Wrong alignment on BP_PumpActionShotgun_C_OnInterrupted_FCB44FF643DA97B49C538D845683A965");
static_assert(sizeof(BP_PumpActionShotgun_C_OnInterrupted_FCB44FF643DA97B49C538D845683A965) == 0x000008, "Wrong size on BP_PumpActionShotgun_C_OnInterrupted_FCB44FF643DA97B49C538D845683A965");
static_assert(offsetof(BP_PumpActionShotgun_C_OnInterrupted_FCB44FF643DA97B49C538D845683A965, NotifyName) == 0x000000, "Member 'BP_PumpActionShotgun_C_OnInterrupted_FCB44FF643DA97B49C538D845683A965::NotifyName' has a wrong offset!");

// Function BP_PumpActionShotgun.BP_PumpActionShotgun_C.OnNotifyBegin_FCB44FF643DA97B49C538D845683A965
// 0x0008 (0x0008 - 0x0000)
struct BP_PumpActionShotgun_C_OnNotifyBegin_FCB44FF643DA97B49C538D845683A965 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PumpActionShotgun_C_OnNotifyBegin_FCB44FF643DA97B49C538D845683A965) == 0x000004, "Wrong alignment on BP_PumpActionShotgun_C_OnNotifyBegin_FCB44FF643DA97B49C538D845683A965");
static_assert(sizeof(BP_PumpActionShotgun_C_OnNotifyBegin_FCB44FF643DA97B49C538D845683A965) == 0x000008, "Wrong size on BP_PumpActionShotgun_C_OnNotifyBegin_FCB44FF643DA97B49C538D845683A965");
static_assert(offsetof(BP_PumpActionShotgun_C_OnNotifyBegin_FCB44FF643DA97B49C538D845683A965, NotifyName) == 0x000000, "Member 'BP_PumpActionShotgun_C_OnNotifyBegin_FCB44FF643DA97B49C538D845683A965::NotifyName' has a wrong offset!");

// Function BP_PumpActionShotgun.BP_PumpActionShotgun_C.OnNotifyEnd_FCB44FF643DA97B49C538D845683A965
// 0x0008 (0x0008 - 0x0000)
struct BP_PumpActionShotgun_C_OnNotifyEnd_FCB44FF643DA97B49C538D845683A965 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PumpActionShotgun_C_OnNotifyEnd_FCB44FF643DA97B49C538D845683A965) == 0x000004, "Wrong alignment on BP_PumpActionShotgun_C_OnNotifyEnd_FCB44FF643DA97B49C538D845683A965");
static_assert(sizeof(BP_PumpActionShotgun_C_OnNotifyEnd_FCB44FF643DA97B49C538D845683A965) == 0x000008, "Wrong size on BP_PumpActionShotgun_C_OnNotifyEnd_FCB44FF643DA97B49C538D845683A965");
static_assert(offsetof(BP_PumpActionShotgun_C_OnNotifyEnd_FCB44FF643DA97B49C538D845683A965, NotifyName) == 0x000000, "Member 'BP_PumpActionShotgun_C_OnNotifyEnd_FCB44FF643DA97B49C538D845683A965::NotifyName' has a wrong offset!");

// Function BP_PumpActionShotgun.BP_PumpActionShotgun_C.OnWeaponNotify
// 0x0001 (0x0001 - 0x0000)
struct BP_PumpActionShotgun_C_OnWeaponNotify final
{
public:
	EWeaponNotifyType                             Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PumpActionShotgun_C_OnWeaponNotify) == 0x000001, "Wrong alignment on BP_PumpActionShotgun_C_OnWeaponNotify");
static_assert(sizeof(BP_PumpActionShotgun_C_OnWeaponNotify) == 0x000001, "Wrong size on BP_PumpActionShotgun_C_OnWeaponNotify");
static_assert(offsetof(BP_PumpActionShotgun_C_OnWeaponNotify, Type) == 0x000000, "Member 'BP_PumpActionShotgun_C_OnWeaponNotify::Type' has a wrong offset!");

// Function BP_PumpActionShotgun.BP_PumpActionShotgun_C.OnshotInternal
// 0x0002 (0x0002 - 0x0000)
struct BP_PumpActionShotgun_C_OnshotInternal final
{
public:
	bool                                          IsShoted;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnshotInternal_IsShoted;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PumpActionShotgun_C_OnshotInternal) == 0x000001, "Wrong alignment on BP_PumpActionShotgun_C_OnshotInternal");
static_assert(sizeof(BP_PumpActionShotgun_C_OnshotInternal) == 0x000002, "Wrong size on BP_PumpActionShotgun_C_OnshotInternal");
static_assert(offsetof(BP_PumpActionShotgun_C_OnshotInternal, IsShoted) == 0x000000, "Member 'BP_PumpActionShotgun_C_OnshotInternal::IsShoted' has a wrong offset!");
static_assert(offsetof(BP_PumpActionShotgun_C_OnshotInternal, CallFunc_OnshotInternal_IsShoted) == 0x000001, "Member 'BP_PumpActionShotgun_C_OnshotInternal::CallFunc_OnshotInternal_IsShoted' has a wrong offset!");

// Function BP_PumpActionShotgun.BP_PumpActionShotgun_C.IsUseLeftHandAttach
// 0x0001 (0x0001 - 0x0000)
struct BP_PumpActionShotgun_C_IsUseLeftHandAttach final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PumpActionShotgun_C_IsUseLeftHandAttach) == 0x000001, "Wrong alignment on BP_PumpActionShotgun_C_IsUseLeftHandAttach");
static_assert(sizeof(BP_PumpActionShotgun_C_IsUseLeftHandAttach) == 0x000001, "Wrong size on BP_PumpActionShotgun_C_IsUseLeftHandAttach");
static_assert(offsetof(BP_PumpActionShotgun_C_IsUseLeftHandAttach, ReturnValue) == 0x000000, "Member 'BP_PumpActionShotgun_C_IsUseLeftHandAttach::ReturnValue' has a wrong offset!");

}

