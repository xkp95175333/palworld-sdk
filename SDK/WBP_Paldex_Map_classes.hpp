#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Paldex_Map

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_PaldexDistributionTimeType_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Paldex_Map.WBP_Paldex_Map_C
// 0x00B8 (0x0330 - 0x0278)
class UWBP_Paldex_Map_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_TimeZone_Night;                                // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_TimeZone_Daytime;                              // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_TimeZone_All;                                  // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Distribution;                               // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_MapRoot;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Map;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Mask;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_DistributionCircle;                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_Map;                                   // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Day;                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Night;                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              MinLandscapePosXY;                                 // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MaxLandscapePosXY;                                 // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LandScapeSize;                                     // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxZoomRate;                                       // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnSwitchDayNight;                                  // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        OffsetRistrict;                                    // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Map_IconPlayer_C*                  PlayerIcon;                                        // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void AddOffset(const struct FVector2D& Offset);
	void AddZoomRate(double Param_AddZoomRate);
	void AnmEvent_AllTime();
	void AnmEvent_DayTime();
	void AnmEvent_NightTime();
	void BndEvt__WBP_Paldex_Map_WBP_PalInvisibleButton_Day_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Paldex_Map_WBP_PalInvisibleButton_Night_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void ClearDistributionCircle();
	void ExecuteUbergraph_WBP_Paldex_Map(int32 EntryPoint);
	void IsZoomMax(bool* IsMax);
	void LoadAndApplyDefaultMaskTexture(class UMaterialInstanceDynamic* TargetMaterial);
	void OnInitialized();
	void OnLoaded_EA50B4624B0D0BBAA2C2429C4AAD87A5(class UObject* Loaded);
	void OnSwitchDayNight__DelegateSignature(E_PaldexDistributionTimeType Time);
	void ResetOffset();
	void ResetZoom();
	void SetDistributionLocations(const struct FPalUIPaldexDistributionLocationStruct& DayTimeLocationStruct, const struct FPalUIPaldexDistributionLocationStruct& NightTimeLocationStruct, E_PaldexDistributionTimeType TimeType, bool* IsNoDistribution);
	void SetupCircleWidget(class UClass* Param_Class, const struct FVector& WorldLocation, double RealSpawnSize);
	void SetVisibilityMap(bool Param_IsVisible);
	void SetZoomRate(double Rate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Paldex_Map_C">();
	}
	static class UWBP_Paldex_Map_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Paldex_Map_C>();
	}
};
static_assert(alignof(UWBP_Paldex_Map_C) == 0x000008, "Wrong alignment on UWBP_Paldex_Map_C");
static_assert(sizeof(UWBP_Paldex_Map_C) == 0x000330, "Wrong size on UWBP_Paldex_Map_C");
static_assert(offsetof(UWBP_Paldex_Map_C, UberGraphFrame) == 0x000278, "Member 'UWBP_Paldex_Map_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, Anm_TimeZone_Night) == 0x000280, "Member 'UWBP_Paldex_Map_C::Anm_TimeZone_Night' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, Anm_TimeZone_Daytime) == 0x000288, "Member 'UWBP_Paldex_Map_C::Anm_TimeZone_Daytime' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, Anm_TimeZone_All) == 0x000290, "Member 'UWBP_Paldex_Map_C::Anm_TimeZone_All' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, Canvas_Distribution) == 0x000298, "Member 'UWBP_Paldex_Map_C::Canvas_Distribution' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, Canvas_MapRoot) == 0x0002A0, "Member 'UWBP_Paldex_Map_C::Canvas_MapRoot' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, Image_Map) == 0x0002A8, "Member 'UWBP_Paldex_Map_C::Image_Map' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, Image_Mask) == 0x0002B0, "Member 'UWBP_Paldex_Map_C::Image_Mask' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, RetainerBox_DistributionCircle) == 0x0002B8, "Member 'UWBP_Paldex_Map_C::RetainerBox_DistributionCircle' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, RetainerBox_Map) == 0x0002C0, "Member 'UWBP_Paldex_Map_C::RetainerBox_Map' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, WBP_PalInvisibleButton_Day) == 0x0002C8, "Member 'UWBP_Paldex_Map_C::WBP_PalInvisibleButton_Day' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, WBP_PalInvisibleButton_Night) == 0x0002D0, "Member 'UWBP_Paldex_Map_C::WBP_PalInvisibleButton_Night' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, MinLandscapePosXY) == 0x0002D8, "Member 'UWBP_Paldex_Map_C::MinLandscapePosXY' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, MaxLandscapePosXY) == 0x0002E8, "Member 'UWBP_Paldex_Map_C::MaxLandscapePosXY' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, LandScapeSize) == 0x0002F8, "Member 'UWBP_Paldex_Map_C::LandScapeSize' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, MaxZoomRate) == 0x000308, "Member 'UWBP_Paldex_Map_C::MaxZoomRate' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, OnSwitchDayNight) == 0x000310, "Member 'UWBP_Paldex_Map_C::OnSwitchDayNight' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, OffsetRistrict) == 0x000320, "Member 'UWBP_Paldex_Map_C::OffsetRistrict' has a wrong offset!");
static_assert(offsetof(UWBP_Paldex_Map_C, PlayerIcon) == 0x000328, "Member 'UWBP_Paldex_Map_C::PlayerIcon' has a wrong offset!");

}

