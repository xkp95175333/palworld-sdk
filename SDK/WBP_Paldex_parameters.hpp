#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Paldex

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Pal_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "E_PaldexDistributionTimeType_structs.hpp"


namespace SDK::Params
{

// Function WBP_Paldex.WBP_Paldex_C.AddCapturedActorRotation
// 0x0018 (0x0018 - 0x0000)
struct WBP_Paldex_C_AddCapturedActorRotation final
{
public:
	struct FRotator                               Rotator;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_Paldex_C_AddCapturedActorRotation) == 0x000008, "Wrong alignment on WBP_Paldex_C_AddCapturedActorRotation");
static_assert(sizeof(WBP_Paldex_C_AddCapturedActorRotation) == 0x000018, "Wrong size on WBP_Paldex_C_AddCapturedActorRotation");
static_assert(offsetof(WBP_Paldex_C_AddCapturedActorRotation, Rotator) == 0x000000, "Member 'WBP_Paldex_C_AddCapturedActorRotation::Rotator' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.AddDistributionMapOffset
// 0x0010 (0x0010 - 0x0000)
struct WBP_Paldex_C_AddDistributionMapOffset final
{
public:
	struct FVector2D                              Offset;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_AddDistributionMapOffset) == 0x000008, "Wrong alignment on WBP_Paldex_C_AddDistributionMapOffset");
static_assert(sizeof(WBP_Paldex_C_AddDistributionMapOffset) == 0x000010, "Wrong size on WBP_Paldex_C_AddDistributionMapOffset");
static_assert(offsetof(WBP_Paldex_C_AddDistributionMapOffset, Offset) == 0x000000, "Member 'WBP_Paldex_C_AddDistributionMapOffset::Offset' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.AddZoomDistributionMap
// 0x0008 (0x0008 - 0x0000)
struct WBP_Paldex_C_AddZoomDistributionMap final
{
public:
	double                                        AddZoomRate;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_AddZoomDistributionMap) == 0x000008, "Wrong alignment on WBP_Paldex_C_AddZoomDistributionMap");
static_assert(sizeof(WBP_Paldex_C_AddZoomDistributionMap) == 0x000008, "Wrong size on WBP_Paldex_C_AddZoomDistributionMap");
static_assert(offsetof(WBP_Paldex_C_AddZoomDistributionMap, AddZoomRate) == 0x000000, "Member 'WBP_Paldex_C_AddZoomDistributionMap::AddZoomRate' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.AnmEvent_ChnageTimeType
// 0x0001 (0x0001 - 0x0000)
struct WBP_Paldex_C_AnmEvent_ChnageTimeType final
{
public:
	E_PaldexDistributionTimeType                  TimeType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_AnmEvent_ChnageTimeType) == 0x000001, "Wrong alignment on WBP_Paldex_C_AnmEvent_ChnageTimeType");
static_assert(sizeof(WBP_Paldex_C_AnmEvent_ChnageTimeType) == 0x000001, "Wrong size on WBP_Paldex_C_AnmEvent_ChnageTimeType");
static_assert(offsetof(WBP_Paldex_C_AnmEvent_ChnageTimeType, TimeType) == 0x000000, "Member 'WBP_Paldex_C_AnmEvent_ChnageTimeType::TimeType' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_0_OnHoveredAnyPanel__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_0_OnHoveredAnyPanel__DelegateSignature final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Paldex_List_C*                     SelfWidget;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_0_OnHoveredAnyPanel__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_0_OnHoveredAnyPanel__DelegateSignature");
static_assert(sizeof(WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_0_OnHoveredAnyPanel__DelegateSignature) == 0x000010, "Wrong size on WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_0_OnHoveredAnyPanel__DelegateSignature");
static_assert(offsetof(WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_0_OnHoveredAnyPanel__DelegateSignature, CharacterID) == 0x000000, "Member 'WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_0_OnHoveredAnyPanel__DelegateSignature::CharacterID' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_0_OnHoveredAnyPanel__DelegateSignature, SelfWidget) == 0x000008, "Member 'WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_0_OnHoveredAnyPanel__DelegateSignature::SelfWidget' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_3_OnClickedAnyPanel__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_3_OnClickedAnyPanel__DelegateSignature final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Paldex_List_C*                     Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_3_OnClickedAnyPanel__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_3_OnClickedAnyPanel__DelegateSignature");
static_assert(sizeof(WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_3_OnClickedAnyPanel__DelegateSignature) == 0x000010, "Wrong size on WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_3_OnClickedAnyPanel__DelegateSignature");
static_assert(offsetof(WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_3_OnClickedAnyPanel__DelegateSignature, CharacterID) == 0x000000, "Member 'WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_3_OnClickedAnyPanel__DelegateSignature::CharacterID' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_3_OnClickedAnyPanel__DelegateSignature, Widget) == 0x000008, "Member 'WBP_Paldex_C_BndEvt__WBP_Paldex_WBP_PaldexScrollList_K2Node_ComponentBoundEvent_3_OnClickedAnyPanel__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.CapturePalActor
// 0x0018 (0x0018 - 0x0000)
struct WBP_Paldex_C_CapturePalActor final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PalMonsterCaptureSet_C*             CallFunc_GetCaptureCameraActor_cameraActor;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_CapturePalActor) == 0x000008, "Wrong alignment on WBP_Paldex_C_CapturePalActor");
static_assert(sizeof(WBP_Paldex_C_CapturePalActor) == 0x000018, "Wrong size on WBP_Paldex_C_CapturePalActor");
static_assert(offsetof(WBP_Paldex_C_CapturePalActor, CharacterID) == 0x000000, "Member 'WBP_Paldex_C_CapturePalActor::CharacterID' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_CapturePalActor, CallFunc_NotEqual_NameName_ReturnValue) == 0x000008, "Member 'WBP_Paldex_C_CapturePalActor::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_CapturePalActor, CallFunc_GetCaptureCameraActor_cameraActor) == 0x000010, "Member 'WBP_Paldex_C_CapturePalActor::CallFunc_GetCaptureCameraActor_cameraActor' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.ChangeToDistributionDIsplayMode
// 0x0008 (0x0008 - 0x0000)
struct WBP_Paldex_C_ChangeToDistributionDIsplayMode final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_ChangeToDistributionDIsplayMode) == 0x000008, "Wrong alignment on WBP_Paldex_C_ChangeToDistributionDIsplayMode");
static_assert(sizeof(WBP_Paldex_C_ChangeToDistributionDIsplayMode) == 0x000008, "Wrong size on WBP_Paldex_C_ChangeToDistributionDIsplayMode");
static_assert(offsetof(WBP_Paldex_C_ChangeToDistributionDIsplayMode, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_Paldex_C_ChangeToDistributionDIsplayMode::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.ClickByCharacterID
// 0x0008 (0x0008 - 0x0000)
struct WBP_Paldex_C_ClickByCharacterID final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_ClickByCharacterID) == 0x000004, "Wrong alignment on WBP_Paldex_C_ClickByCharacterID");
static_assert(sizeof(WBP_Paldex_C_ClickByCharacterID) == 0x000008, "Wrong size on WBP_Paldex_C_ClickByCharacterID");
static_assert(offsetof(WBP_Paldex_C_ClickByCharacterID, CharacterID) == 0x000000, "Member 'WBP_Paldex_C_ClickByCharacterID::CharacterID' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.ClickByIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_Paldex_C_ClickByIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_ClickByIndex) == 0x000004, "Wrong alignment on WBP_Paldex_C_ClickByIndex");
static_assert(sizeof(WBP_Paldex_C_ClickByIndex) == 0x000004, "Wrong size on WBP_Paldex_C_ClickByIndex");
static_assert(offsetof(WBP_Paldex_C_ClickByIndex, Param_Index) == 0x000000, "Member 'WBP_Paldex_C_ClickByIndex::Param_Index' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.Display Distribution
// 0x0080 (0x0080 - 0x0000)
struct WBP_Paldex_C_Display_Distribution final
{
public:
	struct FPalUIPaldex_DisplayInfo               DisplayInfo;                                       // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	E_PaldexDistributionTimeType                  TimeType;                                          // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalUIPaldexDistributionData           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0038)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDistributionLocations_isNoDistribution; // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_Display_Distribution) == 0x000008, "Wrong alignment on WBP_Paldex_C_Display_Distribution");
static_assert(sizeof(WBP_Paldex_C_Display_Distribution) == 0x000080, "Wrong size on WBP_Paldex_C_Display_Distribution");
static_assert(offsetof(WBP_Paldex_C_Display_Distribution, DisplayInfo) == 0x000000, "Member 'WBP_Paldex_C_Display_Distribution::DisplayInfo' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_Display_Distribution, TimeType) == 0x000038, "Member 'WBP_Paldex_C_Display_Distribution::TimeType' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_Display_Distribution, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'WBP_Paldex_C_Display_Distribution::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_Display_Distribution, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'WBP_Paldex_C_Display_Distribution::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_Display_Distribution, K2Node_SwitchEnum_CmpSuccess) == 0x000079, "Member 'WBP_Paldex_C_Display_Distribution::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_Display_Distribution, CallFunc_SetDistributionLocations_isNoDistribution) == 0x00007A, "Member 'WBP_Paldex_C_Display_Distribution::CallFunc_SetDistributionLocations_isNoDistribution' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.DisplayNoDataWidget
// 0x0028 (0x0028 - 0x0000)
struct WBP_Paldex_C_DisplayNoDataWidget final
{
public:
	struct FDataTableRowHandle                    MsgIdHandle;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0010(0x0018)()
};
static_assert(alignof(WBP_Paldex_C_DisplayNoDataWidget) == 0x000008, "Wrong alignment on WBP_Paldex_C_DisplayNoDataWidget");
static_assert(sizeof(WBP_Paldex_C_DisplayNoDataWidget) == 0x000028, "Wrong size on WBP_Paldex_C_DisplayNoDataWidget");
static_assert(offsetof(WBP_Paldex_C_DisplayNoDataWidget, MsgIdHandle) == 0x000000, "Member 'WBP_Paldex_C_DisplayNoDataWidget::MsgIdHandle' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_DisplayNoDataWidget, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000010, "Member 'WBP_Paldex_C_DisplayNoDataWidget::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.DisplayPalInfo
// 0x0070 (0x0070 - 0x0000)
struct WBP_Paldex_C_DisplayPalInfo final
{
public:
	struct FPalUIPaldex_DisplayInfo               DisplayInfo;                                       // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_GetPalLongDescription_outName;            // 0x0038(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449F[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PalMonsterCaptureSet_C*             CallFunc_GetCaptureCameraActor_cameraActor;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_DisplayPalInfo) == 0x000008, "Wrong alignment on WBP_Paldex_C_DisplayPalInfo");
static_assert(sizeof(WBP_Paldex_C_DisplayPalInfo) == 0x000070, "Wrong size on WBP_Paldex_C_DisplayPalInfo");
static_assert(offsetof(WBP_Paldex_C_DisplayPalInfo, DisplayInfo) == 0x000000, "Member 'WBP_Paldex_C_DisplayPalInfo::DisplayInfo' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_DisplayPalInfo, CallFunc_GetPalLongDescription_outName) == 0x000038, "Member 'WBP_Paldex_C_DisplayPalInfo::CallFunc_GetPalLongDescription_outName' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_DisplayPalInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'WBP_Paldex_C_DisplayPalInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_DisplayPalInfo, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'WBP_Paldex_C_DisplayPalInfo::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_DisplayPalInfo, CallFunc_PlayAnimation_ReturnValue_1) == 0x000060, "Member 'WBP_Paldex_C_DisplayPalInfo::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_DisplayPalInfo, CallFunc_GetCaptureCameraActor_cameraActor) == 0x000068, "Member 'WBP_Paldex_C_DisplayPalInfo::CallFunc_GetCaptureCameraActor_cameraActor' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.ExecuteUbergraph_WBP_Paldex
// 0x0090 (0x0090 - 0x0000)
struct WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A0[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_PaldexDistributionTimeType                  K2Node_CustomEvent_timeType;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A1[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A2[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_CharacterID_1;          // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A3[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Paldex_List_C*                     K2Node_ComponentBoundEvent_SelfWidget;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_PalMonsterCaptureSet_C*             CallFunc_GetCaptureCameraActor_cameraActor;        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A4[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0060(0x0018)()
	class FName                                   K2Node_ComponentBoundEvent_CharacterID;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Paldex_List_C*                     K2Node_ComponentBoundEvent_Widget;                 // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex) == 0x000008, "Wrong alignment on WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex");
static_assert(sizeof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex) == 0x000090, "Wrong size on WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, EntryPoint) == 0x000000, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, K2Node_CustomEvent_timeType) == 0x000028, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::K2Node_CustomEvent_timeType' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, CallFunc_PlayAnimation_ReturnValue_2) == 0x000030, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, K2Node_ComponentBoundEvent_CharacterID_1) == 0x00003C, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::K2Node_ComponentBoundEvent_CharacterID_1' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, K2Node_ComponentBoundEvent_SelfWidget) == 0x000048, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::K2Node_ComponentBoundEvent_SelfWidget' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, CallFunc_GetCaptureCameraActor_cameraActor) == 0x000050, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::CallFunc_GetCaptureCameraActor_cameraActor' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000060, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, K2Node_ComponentBoundEvent_CharacterID) == 0x000078, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::K2Node_ComponentBoundEvent_CharacterID' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, K2Node_ComponentBoundEvent_Widget) == 0x000080, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::K2Node_ComponentBoundEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'WBP_Paldex_C_ExecuteUbergraph_WBP_Paldex::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.FocusByCharacterID
// 0x0008 (0x0008 - 0x0000)
struct WBP_Paldex_C_FocusByCharacterID final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_FocusByCharacterID) == 0x000004, "Wrong alignment on WBP_Paldex_C_FocusByCharacterID");
static_assert(sizeof(WBP_Paldex_C_FocusByCharacterID) == 0x000008, "Wrong size on WBP_Paldex_C_FocusByCharacterID");
static_assert(offsetof(WBP_Paldex_C_FocusByCharacterID, CharacterID) == 0x000000, "Member 'WBP_Paldex_C_FocusByCharacterID::CharacterID' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.FocusByIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_Paldex_C_FocusByIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_FocusByIndex) == 0x000004, "Wrong alignment on WBP_Paldex_C_FocusByIndex");
static_assert(sizeof(WBP_Paldex_C_FocusByIndex) == 0x000004, "Wrong size on WBP_Paldex_C_FocusByIndex");
static_assert(offsetof(WBP_Paldex_C_FocusByIndex, Param_Index) == 0x000000, "Member 'WBP_Paldex_C_FocusByIndex::Param_Index' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.GetFocusTargetByCharacterID
// 0x0018 (0x0018 - 0x0000)
struct WBP_Paldex_C_GetFocusTargetByCharacterID final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Target;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetFocusTargetByCharacterID_widget;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_GetFocusTargetByCharacterID) == 0x000008, "Wrong alignment on WBP_Paldex_C_GetFocusTargetByCharacterID");
static_assert(sizeof(WBP_Paldex_C_GetFocusTargetByCharacterID) == 0x000018, "Wrong size on WBP_Paldex_C_GetFocusTargetByCharacterID");
static_assert(offsetof(WBP_Paldex_C_GetFocusTargetByCharacterID, CharacterID) == 0x000000, "Member 'WBP_Paldex_C_GetFocusTargetByCharacterID::CharacterID' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_GetFocusTargetByCharacterID, Target) == 0x000008, "Member 'WBP_Paldex_C_GetFocusTargetByCharacterID::Target' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_GetFocusTargetByCharacterID, CallFunc_GetFocusTargetByCharacterID_widget) == 0x000010, "Member 'WBP_Paldex_C_GetFocusTargetByCharacterID::CallFunc_GetFocusTargetByCharacterID_widget' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.GetFocusTargetByIndex
// 0x0018 (0x0018 - 0x0000)
struct WBP_Paldex_C_GetFocusTargetByIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Target;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetFocusTargetByIndex_target;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_GetFocusTargetByIndex) == 0x000008, "Wrong alignment on WBP_Paldex_C_GetFocusTargetByIndex");
static_assert(sizeof(WBP_Paldex_C_GetFocusTargetByIndex) == 0x000018, "Wrong size on WBP_Paldex_C_GetFocusTargetByIndex");
static_assert(offsetof(WBP_Paldex_C_GetFocusTargetByIndex, Param_Index) == 0x000000, "Member 'WBP_Paldex_C_GetFocusTargetByIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_GetFocusTargetByIndex, Target) == 0x000008, "Member 'WBP_Paldex_C_GetFocusTargetByIndex::Target' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_GetFocusTargetByIndex, CallFunc_GetFocusTargetByIndex_target) == 0x000010, "Member 'WBP_Paldex_C_GetFocusTargetByIndex::CallFunc_GetFocusTargetByIndex_target' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.IsZoomMax
// 0x0002 (0x0002 - 0x0000)
struct WBP_Paldex_C_IsZoomMax final
{
public:
	bool                                          IsMax;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsZoomMax_isMax;                          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_IsZoomMax) == 0x000001, "Wrong alignment on WBP_Paldex_C_IsZoomMax");
static_assert(sizeof(WBP_Paldex_C_IsZoomMax) == 0x000002, "Wrong size on WBP_Paldex_C_IsZoomMax");
static_assert(offsetof(WBP_Paldex_C_IsZoomMax, IsMax) == 0x000000, "Member 'WBP_Paldex_C_IsZoomMax::IsMax' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_IsZoomMax, CallFunc_IsZoomMax_isMax) == 0x000001, "Member 'WBP_Paldex_C_IsZoomMax::CallFunc_IsZoomMax_isMax' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.OnClickedAnyPalPanel__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Paldex_C_OnClickedAnyPalPanel__DelegateSignature final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_OnClickedAnyPalPanel__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Paldex_C_OnClickedAnyPalPanel__DelegateSignature");
static_assert(sizeof(WBP_Paldex_C_OnClickedAnyPalPanel__DelegateSignature) == 0x000008, "Wrong size on WBP_Paldex_C_OnClickedAnyPalPanel__DelegateSignature");
static_assert(offsetof(WBP_Paldex_C_OnClickedAnyPalPanel__DelegateSignature, CharacterID) == 0x000000, "Member 'WBP_Paldex_C_OnClickedAnyPalPanel__DelegateSignature::CharacterID' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.OnHoveredAnyPalPanel__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Paldex_C_OnHoveredAnyPalPanel__DelegateSignature final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_OnHoveredAnyPalPanel__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Paldex_C_OnHoveredAnyPalPanel__DelegateSignature");
static_assert(sizeof(WBP_Paldex_C_OnHoveredAnyPalPanel__DelegateSignature) == 0x000008, "Wrong size on WBP_Paldex_C_OnHoveredAnyPalPanel__DelegateSignature");
static_assert(offsetof(WBP_Paldex_C_OnHoveredAnyPalPanel__DelegateSignature, CharacterID) == 0x000000, "Member 'WBP_Paldex_C_OnHoveredAnyPalPanel__DelegateSignature::CharacterID' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.PageSkip_Down
// 0x0010 (0x0010 - 0x0000)
struct WBP_Paldex_C_PageSkip_Down final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIndexFromWidget_index;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A7[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_PageSkip_Down) == 0x000004, "Wrong alignment on WBP_Paldex_C_PageSkip_Down");
static_assert(sizeof(WBP_Paldex_C_PageSkip_Down) == 0x000010, "Wrong size on WBP_Paldex_C_PageSkip_Down");
static_assert(offsetof(WBP_Paldex_C_PageSkip_Down, Param_Navigation) == 0x000000, "Member 'WBP_Paldex_C_PageSkip_Down::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_PageSkip_Down, CallFunc_GetIndexFromWidget_index) == 0x000004, "Member 'WBP_Paldex_C_PageSkip_Down::CallFunc_GetIndexFromWidget_index' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_PageSkip_Down, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_Paldex_C_PageSkip_Down::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_PageSkip_Down, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Paldex_C_PageSkip_Down::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.PageSkip_Up
// 0x0010 (0x0010 - 0x0000)
struct WBP_Paldex_C_PageSkip_Up final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIndexFromWidget_index;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A9[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_PageSkip_Up) == 0x000004, "Wrong alignment on WBP_Paldex_C_PageSkip_Up");
static_assert(sizeof(WBP_Paldex_C_PageSkip_Up) == 0x000010, "Wrong size on WBP_Paldex_C_PageSkip_Up");
static_assert(offsetof(WBP_Paldex_C_PageSkip_Up, Param_Navigation) == 0x000000, "Member 'WBP_Paldex_C_PageSkip_Up::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_PageSkip_Up, CallFunc_GetIndexFromWidget_index) == 0x000004, "Member 'WBP_Paldex_C_PageSkip_Up::CallFunc_GetIndexFromWidget_index' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_PageSkip_Up, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_Paldex_C_PageSkip_Up::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_PageSkip_Up, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Paldex_C_PageSkip_Up::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.ScrollByCharacterID
// 0x0060 (0x0060 - 0x0000)
struct WBP_Paldex_C_ScrollByCharacterID final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44AA[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBox*                             CallFunc_GetScrollBox_ScrollBox;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UScrollBox*                             CallFunc_GetScrollBox_ScrollBox_1;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44AB[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44AC[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Paldex_List_C*                     K2Node_DynamicCast_AsWBP_Paldex_List;              // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_ScrollByCharacterID) == 0x000008, "Wrong alignment on WBP_Paldex_C_ScrollByCharacterID");
static_assert(sizeof(WBP_Paldex_C_ScrollByCharacterID) == 0x000060, "Wrong size on WBP_Paldex_C_ScrollByCharacterID");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, CharacterID) == 0x000000, "Member 'WBP_Paldex_C_ScrollByCharacterID::CharacterID' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Paldex_C_ScrollByCharacterID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_Paldex_C_ScrollByCharacterID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Paldex_C_ScrollByCharacterID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, CallFunc_GetScrollBox_ScrollBox) == 0x000018, "Member 'WBP_Paldex_C_ScrollByCharacterID::CallFunc_GetScrollBox_ScrollBox' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, CallFunc_GetScrollBox_ScrollBox_1) == 0x000020, "Member 'WBP_Paldex_C_ScrollByCharacterID::CallFunc_GetScrollBox_ScrollBox_1' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, CallFunc_GetAllChildren_ReturnValue) == 0x000028, "Member 'WBP_Paldex_C_ScrollByCharacterID::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_Paldex_C_ScrollByCharacterID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_Paldex_C_ScrollByCharacterID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_Paldex_C_ScrollByCharacterID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, K2Node_DynamicCast_AsWBP_Paldex_List) == 0x000050, "Member 'WBP_Paldex_C_ScrollByCharacterID::K2Node_DynamicCast_AsWBP_Paldex_List' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_Paldex_C_ScrollByCharacterID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByCharacterID, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000059, "Member 'WBP_Paldex_C_ScrollByCharacterID::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.ScrollByPanelIndex
// 0x0030 (0x0030 - 0x0000)
struct WBP_Paldex_C_ScrollByPanelIndex final
{
public:
	int32                                         Param_ScrollByPanelIndex;                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAllChildrenNum_index;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScrollBox*                             CallFunc_GetScrollBox_ScrollBox;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44AD[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Paldex_List_C*                     CallFunc_GetWidgetByIndex_Widget;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_ScrollByPanelIndex) == 0x000008, "Wrong alignment on WBP_Paldex_C_ScrollByPanelIndex");
static_assert(sizeof(WBP_Paldex_C_ScrollByPanelIndex) == 0x000030, "Wrong size on WBP_Paldex_C_ScrollByPanelIndex");
static_assert(offsetof(WBP_Paldex_C_ScrollByPanelIndex, Param_ScrollByPanelIndex) == 0x000000, "Member 'WBP_Paldex_C_ScrollByPanelIndex::Param_ScrollByPanelIndex' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByPanelIndex, CallFunc_GetAllChildrenNum_index) == 0x000004, "Member 'WBP_Paldex_C_ScrollByPanelIndex::CallFunc_GetAllChildrenNum_index' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByPanelIndex, CallFunc_GetScrollBox_ScrollBox) == 0x000008, "Member 'WBP_Paldex_C_ScrollByPanelIndex::CallFunc_GetScrollBox_ScrollBox' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByPanelIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Paldex_C_ScrollByPanelIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByPanelIndex, CallFunc_Min_ReturnValue) == 0x000014, "Member 'WBP_Paldex_C_ScrollByPanelIndex::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByPanelIndex, CallFunc_Max_ReturnValue) == 0x000018, "Member 'WBP_Paldex_C_ScrollByPanelIndex::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByPanelIndex, CallFunc_GetWidgetByIndex_Widget) == 0x000020, "Member 'WBP_Paldex_C_ScrollByPanelIndex::CallFunc_GetWidgetByIndex_Widget' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_ScrollByPanelIndex, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_Paldex_C_ScrollByPanelIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.SetEncountedPalNum
// 0x0020 (0x0020 - 0x0000)
struct WBP_Paldex_C_SetEncountedPalNum final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44AE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_Paldex_C_SetEncountedPalNum) == 0x000008, "Wrong alignment on WBP_Paldex_C_SetEncountedPalNum");
static_assert(sizeof(WBP_Paldex_C_SetEncountedPalNum) == 0x000020, "Wrong size on WBP_Paldex_C_SetEncountedPalNum");
static_assert(offsetof(WBP_Paldex_C_SetEncountedPalNum, Num) == 0x000000, "Member 'WBP_Paldex_C_SetEncountedPalNum::Num' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_SetEncountedPalNum, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_Paldex_C_SetEncountedPalNum::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.SetRegisteredPalNum
// 0x0020 (0x0020 - 0x0000)
struct WBP_Paldex_C_SetRegisteredPalNum final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44AF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_Paldex_C_SetRegisteredPalNum) == 0x000008, "Wrong alignment on WBP_Paldex_C_SetRegisteredPalNum");
static_assert(sizeof(WBP_Paldex_C_SetRegisteredPalNum) == 0x000020, "Wrong size on WBP_Paldex_C_SetRegisteredPalNum");
static_assert(offsetof(WBP_Paldex_C_SetRegisteredPalNum, Num) == 0x000000, "Member 'WBP_Paldex_C_SetRegisteredPalNum::Num' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_SetRegisteredPalNum, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_Paldex_C_SetRegisteredPalNum::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.SetupCaptureCameraActor
// 0x0018 (0x0018 - 0x0000)
struct WBP_Paldex_C_SetupCaptureCameraActor final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PalMonsterCaptureSet_C*             CallFunc_GetCaptureCameraActor_cameraActor;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_SetupCaptureCameraActor) == 0x000008, "Wrong alignment on WBP_Paldex_C_SetupCaptureCameraActor");
static_assert(sizeof(WBP_Paldex_C_SetupCaptureCameraActor) == 0x000018, "Wrong size on WBP_Paldex_C_SetupCaptureCameraActor");
static_assert(offsetof(WBP_Paldex_C_SetupCaptureCameraActor, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_Paldex_C_SetupCaptureCameraActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Paldex_C_SetupCaptureCameraActor, CallFunc_GetCaptureCameraActor_cameraActor) == 0x000010, "Member 'WBP_Paldex_C_SetupCaptureCameraActor::CallFunc_GetCaptureCameraActor_cameraActor' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.SetupPalPanelList
// 0x0010 (0x0010 - 0x0000)
struct WBP_Paldex_C_SetupPalPanelList final
{
public:
	TArray<struct FPalUIPaldex_DisplayInfo>       DisplayInfoArray;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Paldex_C_SetupPalPanelList) == 0x000008, "Wrong alignment on WBP_Paldex_C_SetupPalPanelList");
static_assert(sizeof(WBP_Paldex_C_SetupPalPanelList) == 0x000010, "Wrong size on WBP_Paldex_C_SetupPalPanelList");
static_assert(offsetof(WBP_Paldex_C_SetupPalPanelList, DisplayInfoArray) == 0x000000, "Member 'WBP_Paldex_C_SetupPalPanelList::DisplayInfoArray' has a wrong offset!");

// Function WBP_Paldex.WBP_Paldex_C.SetZoomDisrtibutionMap
// 0x0008 (0x0008 - 0x0000)
struct WBP_Paldex_C_SetZoomDisrtibutionMap final
{
public:
	double                                        Rate;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Paldex_C_SetZoomDisrtibutionMap) == 0x000008, "Wrong alignment on WBP_Paldex_C_SetZoomDisrtibutionMap");
static_assert(sizeof(WBP_Paldex_C_SetZoomDisrtibutionMap) == 0x000008, "Wrong size on WBP_Paldex_C_SetZoomDisrtibutionMap");
static_assert(offsetof(WBP_Paldex_C_SetZoomDisrtibutionMap, Rate) == 0x000000, "Member 'WBP_Paldex_C_SetZoomDisrtibutionMap::Rate' has a wrong offset!");

}

