#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Menu_PalList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "WBP_IndividualParameterBindWidget_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Menu_PalList.WBP_Menu_PalList_C
// 0x00E8 (0x0688 - 0x05A0)
class UWBP_Menu_PalList_C final : public UWBP_IndividualParameterBindWidget_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_Menu_PalList_C;                 // 0x05A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_Pal_Alive;                                     // 0x05A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Pal_Dead;                                      // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_EmptyNormalToFocus;                            // 0x05B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_NormalToFocus;                                 // 0x05C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Open_normal;                                   // 0x05C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Normal;                                        // 0x05D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Focus;                                         // 0x05D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Push;                                          // 0x05E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Open_focus;                                    // 0x05E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Empty;                                             // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Icon;                                        // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_219;                                   // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_Hunger;                                // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Pal_hp_L;                                     // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Pal_hp_R;                                     // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Pal_Level;                                    // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Pal_LvText;                                   // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Pal_name;                                     // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton;                            // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClickedPanel;                                    // 0x0640(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHoveredPanel;                                    // 0x0650(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EPalWazaID                                    CurrentWazaIdToUse;                                // 0x0660(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5892[0x7];                                     // 0x0661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnUnhoveredPanel;                                  // 0x0668(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Interactable;                                      // 0x0678(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5893[0x7];                                     // 0x0679(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          ClickEventTmp;                                     // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnmEvent_Focus();
	void AnmEvent_Open();
	void AnmEvent_Push();
	void AnmEvent_ResetPush();
	void AnmEvent_Unfocus();
	void BindFromHandle(class UPalIndividualCharacterHandle* TargetHandle);
	void BndEvt__WBP_Menu_PalList_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Menu_PalList_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Menu_PalList_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void Construct();
	void ExecuteUbergraph_WBP_Menu_PalList(int32 EntryPoint);
	void Focus();
	void OnClickedPanel__DelegateSignature(class UPalIndividualCharacterHandle* Handle);
	void OnHoveredPanel__DelegateSignature(class UPalIndividualCharacterHandle* Handle);
	void OnInitialized();
	void OnUnhoveredPanel__DelegateSignature();
	void SetCurrentWazaId(EPalWazaID WazaID);
	void SetInteractable(bool Param_IsInteractable);
	void SetMuteClickEvent(bool IsMute);
	void Unbind();
	void Update_Level(int32 NewLevel);
	void UpdateHP(const struct FFixedPoint64& NowHP, const struct FFixedPoint64& NowMaxHP);
	void UpdateHunger(double Now, double Max);
	void UpdateNickName(const class FString& NewNickName);
	void UpdateWazaLearnable(class UPalIndividualCharacterParameter* Individual_Parameter, EPalWazaID WazaID);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Menu_PalList_C">();
	}
	static class UWBP_Menu_PalList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Menu_PalList_C>();
	}
};
static_assert(alignof(UWBP_Menu_PalList_C) == 0x000008, "Wrong alignment on UWBP_Menu_PalList_C");
static_assert(sizeof(UWBP_Menu_PalList_C) == 0x000688, "Wrong size on UWBP_Menu_PalList_C");
static_assert(offsetof(UWBP_Menu_PalList_C, UberGraphFrame_WBP_Menu_PalList_C) == 0x0005A0, "Member 'UWBP_Menu_PalList_C::UberGraphFrame_WBP_Menu_PalList_C' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Anm_Pal_Alive) == 0x0005A8, "Member 'UWBP_Menu_PalList_C::Anm_Pal_Alive' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Anm_Pal_Dead) == 0x0005B0, "Member 'UWBP_Menu_PalList_C::Anm_Pal_Dead' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Anm_EmptyNormalToFocus) == 0x0005B8, "Member 'UWBP_Menu_PalList_C::Anm_EmptyNormalToFocus' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Anm_NormalToFocus) == 0x0005C0, "Member 'UWBP_Menu_PalList_C::Anm_NormalToFocus' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Anm_Open_normal) == 0x0005C8, "Member 'UWBP_Menu_PalList_C::Anm_Open_normal' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Anm_Normal) == 0x0005D0, "Member 'UWBP_Menu_PalList_C::Anm_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Anm_Focus) == 0x0005D8, "Member 'UWBP_Menu_PalList_C::Anm_Focus' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Anm_Push) == 0x0005E0, "Member 'UWBP_Menu_PalList_C::Anm_Push' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Anm_Open_focus) == 0x0005E8, "Member 'UWBP_Menu_PalList_C::Anm_Open_focus' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Empty) == 0x0005F0, "Member 'UWBP_Menu_PalList_C::Empty' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Image_Icon) == 0x0005F8, "Member 'UWBP_Menu_PalList_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, ProgressBar_219) == 0x000600, "Member 'UWBP_Menu_PalList_C::ProgressBar_219' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, ProgressBar_Hunger) == 0x000608, "Member 'UWBP_Menu_PalList_C::ProgressBar_Hunger' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Text_Pal_hp_L) == 0x000610, "Member 'UWBP_Menu_PalList_C::Text_Pal_hp_L' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Text_Pal_hp_R) == 0x000618, "Member 'UWBP_Menu_PalList_C::Text_Pal_hp_R' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Text_Pal_Level) == 0x000620, "Member 'UWBP_Menu_PalList_C::Text_Pal_Level' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Text_Pal_LvText) == 0x000628, "Member 'UWBP_Menu_PalList_C::Text_Pal_LvText' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Text_Pal_name) == 0x000630, "Member 'UWBP_Menu_PalList_C::Text_Pal_name' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, WBP_PalInvisibleButton) == 0x000638, "Member 'UWBP_Menu_PalList_C::WBP_PalInvisibleButton' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, OnClickedPanel) == 0x000640, "Member 'UWBP_Menu_PalList_C::OnClickedPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, OnHoveredPanel) == 0x000650, "Member 'UWBP_Menu_PalList_C::OnHoveredPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, CurrentWazaIdToUse) == 0x000660, "Member 'UWBP_Menu_PalList_C::CurrentWazaIdToUse' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, OnUnhoveredPanel) == 0x000668, "Member 'UWBP_Menu_PalList_C::OnUnhoveredPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, Interactable) == 0x000678, "Member 'UWBP_Menu_PalList_C::Interactable' has a wrong offset!");
static_assert(offsetof(UWBP_Menu_PalList_C, ClickEventTmp) == 0x000680, "Member 'UWBP_Menu_PalList_C::ClickEventTmp' has a wrong offset!");

}

