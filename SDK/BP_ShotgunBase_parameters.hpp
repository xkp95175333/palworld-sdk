#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShotgunBase

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ShotgunBase.BP_ShotgunBase_C.CalcAccuracy
// 0x0018 (0x0018 - 0x0000)
struct BP_ShotgunBase_C_CalcAccuracy final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B65[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_CalcAccuracy) == 0x000008, "Wrong alignment on BP_ShotgunBase_C_CalcAccuracy");
static_assert(sizeof(BP_ShotgunBase_C_CalcAccuracy) == 0x000018, "Wrong size on BP_ShotgunBase_C_CalcAccuracy");
static_assert(offsetof(BP_ShotgunBase_C_CalcAccuracy, ReturnValue) == 0x000000, "Member 'BP_ShotgunBase_C_CalcAccuracy::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcAccuracy, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_ShotgunBase_C_CalcAccuracy::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcAccuracy, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000010, "Member 'BP_ShotgunBase_C_CalcAccuracy::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.CalcDPS
// 0x0048 (0x0048 - 0x0000)
struct BP_ShotgunBase_C_CalcDPS final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B66[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GetShootTransformList_ShootTransformList; // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B67[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponBaseDamage_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B68[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B69[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_CalcDPS) == 0x000008, "Wrong alignment on BP_ShotgunBase_C_CalcDPS");
static_assert(sizeof(BP_ShotgunBase_C_CalcDPS) == 0x000048, "Wrong size on BP_ShotgunBase_C_CalcDPS");
static_assert(offsetof(BP_ShotgunBase_C_CalcDPS, ReturnValue) == 0x000000, "Member 'BP_ShotgunBase_C_CalcDPS::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcDPS, CallFunc_GetShootTransformList_ShootTransformList) == 0x000008, "Member 'BP_ShotgunBase_C_CalcDPS::CallFunc_GetShootTransformList_ShootTransformList' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcDPS, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_ShotgunBase_C_CalcDPS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcDPS, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x00001C, "Member 'BP_ShotgunBase_C_CalcDPS::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcDPS, CallFunc_GetWeaponBaseDamage_ReturnValue) == 0x000020, "Member 'BP_ShotgunBase_C_CalcDPS::CallFunc_GetWeaponBaseDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcDPS, CallFunc_Multiply_IntInt_ReturnValue) == 0x000024, "Member 'BP_ShotgunBase_C_CalcDPS::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcDPS, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000028, "Member 'BP_ShotgunBase_C_CalcDPS::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcDPS, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_ShotgunBase_C_CalcDPS::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcDPS, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000038, "Member 'BP_ShotgunBase_C_CalcDPS::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcDPS, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'BP_ShotgunBase_C_CalcDPS::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.CalcRange
// 0x0050 (0x0050 - 0x0000)
struct BP_ShotgunBase_C_CalcRange final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B6A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetBulletClass_NewParam;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           CallFunc_GetBulletProjectileComponent_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B6B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B6C[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_CalcRange) == 0x000008, "Wrong alignment on BP_ShotgunBase_C_CalcRange");
static_assert(sizeof(BP_ShotgunBase_C_CalcRange) == 0x000050, "Wrong size on BP_ShotgunBase_C_CalcRange");
static_assert(offsetof(BP_ShotgunBase_C_CalcRange, ReturnValue) == 0x000000, "Member 'BP_ShotgunBase_C_CalcRange::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcRange, CallFunc_GetBulletClass_NewParam) == 0x000008, "Member 'BP_ShotgunBase_C_CalcRange::CallFunc_GetBulletClass_NewParam' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcRange, CallFunc_GetBulletProjectileComponent_ReturnValue) == 0x000010, "Member 'BP_ShotgunBase_C_CalcRange::CallFunc_GetBulletProjectileComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcRange, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_ShotgunBase_C_CalcRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcRange, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_ShotgunBase_C_CalcRange::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcRange, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_ShotgunBase_C_CalcRange::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcRange, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000030, "Member 'BP_ShotgunBase_C_CalcRange::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcRange, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000038, "Member 'BP_ShotgunBase_C_CalcRange::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcRange, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'BP_ShotgunBase_C_CalcRange::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CalcRange, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'BP_ShotgunBase_C_CalcRange::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.CanShoot
// 0x0002 (0x0002 - 0x0000)
struct BP_ShotgunBase_C_CanShoot final
{
public:
	bool                                          Can;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_CanShoot) == 0x000001, "Wrong alignment on BP_ShotgunBase_C_CanShoot");
static_assert(sizeof(BP_ShotgunBase_C_CanShoot) == 0x000002, "Wrong size on BP_ShotgunBase_C_CanShoot");
static_assert(offsetof(BP_ShotgunBase_C_CanShoot, Can) == 0x000000, "Member 'BP_ShotgunBase_C_CanShoot::Can' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_CanShoot, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_ShotgunBase_C_CanShoot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.ExecuteUbergraph_BP_ShotgunBase
// 0x0078 (0x0078 - 0x0000)
struct BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalActionBase* Action)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShoot_can;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B6D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_attachActor;                          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UPalActionBase*                   K2Node_CustomEvent_action;                         // 0x0048(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ActionStepBase_C*                   K2Node_DynamicCast_AsBP_Action_Step_Base;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B6E[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_detachActor;                          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase) == 0x000008, "Wrong alignment on BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase");
static_assert(sizeof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase) == 0x000078, "Wrong size on BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, EntryPoint) == 0x000000, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, CallFunc_CanShoot_can) == 0x000028, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::CallFunc_CanShoot_can' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, K2Node_Event_attachActor) == 0x000038, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::K2Node_Event_attachActor' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, K2Node_CustomEvent_action) == 0x000048, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::K2Node_CustomEvent_action' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, K2Node_DynamicCast_AsBP_Action_Step_Base) == 0x000050, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::K2Node_DynamicCast_AsBP_Action_Step_Base' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, K2Node_Event_detachActor) == 0x000060, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::K2Node_Event_detachActor' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000068, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000070, "Member 'BP_ShotgunBase_C_ExecuteUbergraph_BP_ShotgunBase::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.GetBulletClass
// 0x0008 (0x0008 - 0x0000)
struct BP_ShotgunBase_C_GetBulletClass final
{
public:
	class UClass*                                 NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_GetBulletClass) == 0x000008, "Wrong alignment on BP_ShotgunBase_C_GetBulletClass");
static_assert(sizeof(BP_ShotgunBase_C_GetBulletClass) == 0x000008, "Wrong size on BP_ShotgunBase_C_GetBulletClass");
static_assert(offsetof(BP_ShotgunBase_C_GetBulletClass, NewParam) == 0x000000, "Member 'BP_ShotgunBase_C_GetBulletClass::NewParam' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.GetEjectionPort
// 0x00C0 (0x00C0 - 0x0000)
struct BP_ShotgunBase_C_GetEjectionPort final
{
public:
	struct FTransform                             EjectionTransform;                                 // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_GetEjectionPort) == 0x000010, "Wrong alignment on BP_ShotgunBase_C_GetEjectionPort");
static_assert(sizeof(BP_ShotgunBase_C_GetEjectionPort) == 0x0000C0, "Wrong size on BP_ShotgunBase_C_GetEjectionPort");
static_assert(offsetof(BP_ShotgunBase_C_GetEjectionPort, EjectionTransform) == 0x000000, "Member 'BP_ShotgunBase_C_GetEjectionPort::EjectionTransform' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetEjectionPort, CallFunc_GetSocketTransform_ReturnValue) == 0x000060, "Member 'BP_ShotgunBase_C_GetEjectionPort::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.GetEquipSocketName
// 0x0008 (0x0008 - 0x0000)
struct BP_ShotgunBase_C_GetEquipSocketName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_GetEquipSocketName) == 0x000004, "Wrong alignment on BP_ShotgunBase_C_GetEquipSocketName");
static_assert(sizeof(BP_ShotgunBase_C_GetEquipSocketName) == 0x000008, "Wrong size on BP_ShotgunBase_C_GetEquipSocketName");
static_assert(offsetof(BP_ShotgunBase_C_GetEquipSocketName, ReturnValue) == 0x000000, "Member 'BP_ShotgunBase_C_GetEquipSocketName::ReturnValue' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.GetMuzzleTransform
// 0x00C0 (0x00C0 - 0x0000)
struct BP_ShotgunBase_C_GetMuzzleTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_GetMuzzleTransform) == 0x000010, "Wrong alignment on BP_ShotgunBase_C_GetMuzzleTransform");
static_assert(sizeof(BP_ShotgunBase_C_GetMuzzleTransform) == 0x0000C0, "Wrong size on BP_ShotgunBase_C_GetMuzzleTransform");
static_assert(offsetof(BP_ShotgunBase_C_GetMuzzleTransform, Transform) == 0x000000, "Member 'BP_ShotgunBase_C_GetMuzzleTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetMuzzleTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000060, "Member 'BP_ShotgunBase_C_GetMuzzleTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.GetShootTransformList
// 0x03B0 (0x03B0 - 0x0000)
struct BP_ShotgunBase_C_GetShootTransformList final
{
public:
	double                                        BaseAngle;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlurAngle;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     ShootTransformList;                                // 0x0010(0x0010)(Parm, OutParm)
	struct FTransform                             BaseTransform;                                     // 0x0020(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     TransformList;                                     // 0x0080(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B6F[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B70[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetMuzzleTransform_Transform;             // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetPosition_TargetLocation;         // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetMuzzleTransform_Transform_1;           // 0x0160(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRandomFloat_ReturnValue;               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B71[0xC];                                     // 0x0244(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0250(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRandomFloat_ReturnValue_1;             // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B72[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B73[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B74[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0320(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRandomFloat_Min_ImplicitCast;          // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRandomFloat_Max_ImplicitCast;          // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRandomFloat_Min_ImplicitCast_1;        // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRandomFloat_Max_ImplicitCast_1;        // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_GetShootTransformList) == 0x000010, "Wrong alignment on BP_ShotgunBase_C_GetShootTransformList");
static_assert(sizeof(BP_ShotgunBase_C_GetShootTransformList) == 0x0003B0, "Wrong size on BP_ShotgunBase_C_GetShootTransformList");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, BaseAngle) == 0x000000, "Member 'BP_ShotgunBase_C_GetShootTransformList::BaseAngle' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, BlurAngle) == 0x000008, "Member 'BP_ShotgunBase_C_GetShootTransformList::BlurAngle' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, ShootTransformList) == 0x000010, "Member 'BP_ShotgunBase_C_GetShootTransformList::ShootTransformList' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, BaseTransform) == 0x000020, "Member 'BP_ShotgunBase_C_GetShootTransformList::BaseTransform' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, TransformList) == 0x000080, "Member 'BP_ShotgunBase_C_GetShootTransformList::TransformList' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, Temp_int_Variable) == 0x000090, "Member 'BP_ShotgunBase_C_GetShootTransformList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000094, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_GetMuzzleTransform_Transform) == 0x0000A0, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_GetMuzzleTransform_Transform' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_BreakTransform_Location) == 0x000100, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_BreakTransform_Rotation) == 0x000118, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_BreakTransform_Scale) == 0x000130, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_GetTargetPosition_TargetLocation) == 0x000148, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_GetTargetPosition_TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_GetMuzzleTransform_Transform_1) == 0x000160, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_GetMuzzleTransform_Transform_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_BreakTransform_Location_1) == 0x0001C0, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_BreakTransform_Rotation_1) == 0x0001D8, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_BreakTransform_Scale_1) == 0x0001F0, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000208, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000210, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_MakeRotFromX_ReturnValue) == 0x000228, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_GetRandomFloat_ReturnValue) == 0x000240, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_GetRandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_MakeTransform_ReturnValue) == 0x000250, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0002B0, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_GetRandomFloat_ReturnValue_1) == 0x0002B8, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_GetRandomFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0002C0, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0002C8, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, Temp_int_Variable_1) == 0x0002D0, "Member 'BP_ShotgunBase_C_GetShootTransformList::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0002D8, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0002E0, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_MakeRotator_ReturnValue) == 0x0002E8, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000300, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_ComposeRotators_ReturnValue) == 0x000308, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_MakeTransform_ReturnValue_1) == 0x000320, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000380, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_Array_Add_ReturnValue) == 0x000384, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_GetRandomFloat_Min_ImplicitCast) == 0x000388, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_GetRandomFloat_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_GetRandomFloat_Max_ImplicitCast) == 0x00038C, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_GetRandomFloat_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000390, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_GetRandomFloat_Min_ImplicitCast_1) == 0x000398, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_GetRandomFloat_Min_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_GetRandomFloat_Max_ImplicitCast_1) == 0x00039C, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_GetRandomFloat_Max_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x0003A0, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0003A8, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetShootTransformList, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0003AC, "Member 'BP_ShotgunBase_C_GetShootTransformList::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.GetTargetPosition
// 0x0048 (0x0048 - 0x0000)
struct BP_ShotgunBase_C_GetTargetPosition final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B75[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetOverrideTargetLocation_ConsiderRide_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_GetTargetPosition) == 0x000008, "Wrong alignment on BP_ShotgunBase_C_GetTargetPosition");
static_assert(sizeof(BP_ShotgunBase_C_GetTargetPosition) == 0x000048, "Wrong size on BP_ShotgunBase_C_GetTargetPosition");
static_assert(offsetof(BP_ShotgunBase_C_GetTargetPosition, TargetLocation) == 0x000000, "Member 'BP_ShotgunBase_C_GetTargetPosition::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetTargetPosition, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000018, "Member 'BP_ShotgunBase_C_GetTargetPosition::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetTargetPosition, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_ShotgunBase_C_GetTargetPosition::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetTargetPosition, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_ShotgunBase_C_GetTargetPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetTargetPosition, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_ShotgunBase_C_GetTargetPosition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetTargetPosition, CallFunc_GetOverrideTargetLocation_ConsiderRide_ReturnValue) == 0x000030, "Member 'BP_ShotgunBase_C_GetTargetPosition::CallFunc_GetOverrideTargetLocation_ConsiderRide_ReturnValue' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.OnAttachWeapon
// 0x0008 (0x0008 - 0x0000)
struct BP_ShotgunBase_C_OnAttachWeapon final
{
public:
	class AActor*                                 AttachActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_OnAttachWeapon) == 0x000008, "Wrong alignment on BP_ShotgunBase_C_OnAttachWeapon");
static_assert(sizeof(BP_ShotgunBase_C_OnAttachWeapon) == 0x000008, "Wrong size on BP_ShotgunBase_C_OnAttachWeapon");
static_assert(offsetof(BP_ShotgunBase_C_OnAttachWeapon, AttachActor) == 0x000000, "Member 'BP_ShotgunBase_C_OnAttachWeapon::AttachActor' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.OnDetachWeapon
// 0x0008 (0x0008 - 0x0000)
struct BP_ShotgunBase_C_OnDetachWeapon final
{
public:
	class AActor*                                 DetachActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_OnDetachWeapon) == 0x000008, "Wrong alignment on BP_ShotgunBase_C_OnDetachWeapon");
static_assert(sizeof(BP_ShotgunBase_C_OnDetachWeapon) == 0x000008, "Wrong size on BP_ShotgunBase_C_OnDetachWeapon");
static_assert(offsetof(BP_ShotgunBase_C_OnDetachWeapon, DetachActor) == 0x000000, "Member 'BP_ShotgunBase_C_OnDetachWeapon::DetachActor' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.OnShot
// 0x0001 (0x0001 - 0x0000)
struct BP_ShotgunBase_C_OnShot final
{
public:
	bool                                          CallFunc_OnshotInternal_IsShoted;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_OnShot) == 0x000001, "Wrong alignment on BP_ShotgunBase_C_OnShot");
static_assert(sizeof(BP_ShotgunBase_C_OnShot) == 0x000001, "Wrong size on BP_ShotgunBase_C_OnShot");
static_assert(offsetof(BP_ShotgunBase_C_OnShot, CallFunc_OnshotInternal_IsShoted) == 0x000000, "Member 'BP_ShotgunBase_C_OnShot::CallFunc_OnshotInternal_IsShoted' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.OnshotInternal
// 0x0170 (0x0170 - 0x0000)
struct BP_ShotgunBase_C_OnshotInternal final
{
public:
	bool                                          IsShoted;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B76[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetShooterComponentBlurRate_ReturnValue;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B77[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlurModifierValue_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B78[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultBlurAngle_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B79[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_HitTargetHolder_C*                  CallFunc_SpawnObject_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetBulletClass_NewParam;                  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlurModifierValue_ReturnValue_1;       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B7A[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalBulletCreator*                      CallFunc_GetBulletCreator_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DecrementBullet_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShoot_can;                             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B7B[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponDamage_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B7C[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B7D[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmptyMagazine_ReturnValue;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B7E[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GetShootTransformList_ShootTransformList; // 0x00B0(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x00C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B7F[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalBullet*                             CallFunc_CreateBullet_ReturnValue;                 // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B80[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ShotgunBullet_C*                    K2Node_DynamicCast_AsBP_Shotgun_Bullet;            // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B81[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_OnshotInternal) == 0x000010, "Wrong alignment on BP_ShotgunBase_C_OnshotInternal");
static_assert(sizeof(BP_ShotgunBase_C_OnshotInternal) == 0x000170, "Wrong size on BP_ShotgunBase_C_OnshotInternal");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, IsShoted) == 0x000000, "Member 'BP_ShotgunBase_C_OnshotInternal::IsShoted' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_ShotgunBase_C_OnshotInternal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_GetShooterComponentBlurRate_ReturnValue) == 0x000008, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_GetShooterComponentBlurRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_GetBlurModifierValue_ReturnValue) == 0x000018, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_GetBlurModifierValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_GetDefaultBlurAngle_ReturnValue) == 0x000028, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_GetDefaultBlurAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_SpawnObject_ReturnValue) == 0x000058, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_GetBulletClass_NewParam) == 0x000068, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_GetBulletClass_NewParam' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_GetBlurModifierValue_ReturnValue_1) == 0x000070, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_GetBlurModifierValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_GetBulletCreator_ReturnValue) == 0x000078, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_GetBulletCreator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_DecrementBullet_ReturnValue) == 0x000080, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_DecrementBullet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_CanShoot_can) == 0x000081, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_CanShoot_can' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_GetWeaponDamage_ReturnValue) == 0x000084, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_GetWeaponDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_ShotgunBase_C_OnshotInternal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000090, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000A0, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_IsEmptyMagazine_ReturnValue) == 0x0000A8, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_IsEmptyMagazine_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_GetShootTransformList_ShootTransformList) == 0x0000B0, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_GetShootTransformList_ShootTransformList' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_CreateBullet_ReturnValue) == 0x000128, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_CreateBullet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, K2Node_DynamicCast_AsBP_Shotgun_Bullet) == 0x000138, "Member 'BP_ShotgunBase_C_OnshotInternal::K2Node_DynamicCast_AsBP_Shotgun_Bullet' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_ShotgunBase_C_OnshotInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000148, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000150, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000158, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_OnshotInternal, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x000160, "Member 'BP_ShotgunBase_C_OnshotInternal::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.PlayFireSound
// 0x000C (0x000C - 0x0000)
struct BP_ShotgunBase_C_PlayFireSound final
{
public:
	struct FPalSoundOptions                       K2Node_MakeStruct_PalSoundOptions;                 // 0x0000(0x0004)(NoDestructor)
	struct FPalDataTableRowName_SoundID           K2Node_MakeStruct_PalDataTableRowName_SoundID;     // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_PlayFireSound) == 0x000004, "Wrong alignment on BP_ShotgunBase_C_PlayFireSound");
static_assert(sizeof(BP_ShotgunBase_C_PlayFireSound) == 0x00000C, "Wrong size on BP_ShotgunBase_C_PlayFireSound");
static_assert(offsetof(BP_ShotgunBase_C_PlayFireSound, K2Node_MakeStruct_PalSoundOptions) == 0x000000, "Member 'BP_ShotgunBase_C_PlayFireSound::K2Node_MakeStruct_PalSoundOptions' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_PlayFireSound, K2Node_MakeStruct_PalDataTableRowName_SoundID) == 0x000004, "Member 'BP_ShotgunBase_C_PlayFireSound::K2Node_MakeStruct_PalDataTableRowName_SoundID' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ShotgunBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ShotgunBase_C_ReceiveTick");
static_assert(sizeof(BP_ShotgunBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_ShotgunBase_C_ReceiveTick");
static_assert(offsetof(BP_ShotgunBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ShotgunBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.StopReloadWhenRoll
// 0x0008 (0x0008 - 0x0000)
struct BP_ShotgunBase_C_StopReloadWhenRoll final
{
public:
	const class UPalActionBase*                   Action;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_StopReloadWhenRoll) == 0x000008, "Wrong alignment on BP_ShotgunBase_C_StopReloadWhenRoll");
static_assert(sizeof(BP_ShotgunBase_C_StopReloadWhenRoll) == 0x000008, "Wrong size on BP_ShotgunBase_C_StopReloadWhenRoll");
static_assert(offsetof(BP_ShotgunBase_C_StopReloadWhenRoll, Action) == 0x000000, "Member 'BP_ShotgunBase_C_StopReloadWhenRoll::Action' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.GetDefaultBlurAngle
// 0x0004 (0x0004 - 0x0000)
struct BP_ShotgunBase_C_GetDefaultBlurAngle final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_GetDefaultBlurAngle) == 0x000004, "Wrong alignment on BP_ShotgunBase_C_GetDefaultBlurAngle");
static_assert(sizeof(BP_ShotgunBase_C_GetDefaultBlurAngle) == 0x000004, "Wrong size on BP_ShotgunBase_C_GetDefaultBlurAngle");
static_assert(offsetof(BP_ShotgunBase_C_GetDefaultBlurAngle, ReturnValue) == 0x000000, "Member 'BP_ShotgunBase_C_GetDefaultBlurAngle::ReturnValue' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.GetLeftHandTransform
// 0x00C0 (0x00C0 - 0x0000)
struct BP_ShotgunBase_C_GetLeftHandTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_GetLeftHandTransform) == 0x000010, "Wrong alignment on BP_ShotgunBase_C_GetLeftHandTransform");
static_assert(sizeof(BP_ShotgunBase_C_GetLeftHandTransform) == 0x0000C0, "Wrong size on BP_ShotgunBase_C_GetLeftHandTransform");
static_assert(offsetof(BP_ShotgunBase_C_GetLeftHandTransform, ReturnValue) == 0x000000, "Member 'BP_ShotgunBase_C_GetLeftHandTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ShotgunBase_C_GetLeftHandTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000060, "Member 'BP_ShotgunBase_C_GetLeftHandTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");

// Function BP_ShotgunBase.BP_ShotgunBase_C.IsUseLeftHandAttach
// 0x0001 (0x0001 - 0x0000)
struct BP_ShotgunBase_C_IsUseLeftHandAttach final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ShotgunBase_C_IsUseLeftHandAttach) == 0x000001, "Wrong alignment on BP_ShotgunBase_C_IsUseLeftHandAttach");
static_assert(sizeof(BP_ShotgunBase_C_IsUseLeftHandAttach) == 0x000001, "Wrong size on BP_ShotgunBase_C_IsUseLeftHandAttach");
static_assert(offsetof(BP_ShotgunBase_C_IsUseLeftHandAttach, ReturnValue) == 0x000000, "Member 'BP_ShotgunBase_C_IsUseLeftHandAttach::ReturnValue' has a wrong offset!");

}

