#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Guild_ForDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_PalUIGuildMenuLogCategory_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Guild_ForDisplay.WBP_Guild_ForDisplay_C
// 0x0188 (0x05B8 - 0x0430)
class UWBP_Guild_ForDisplay_C final : public UPalUIGuildMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCircularThrobber*                      CircularThrobber_11;                               // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_20;                                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Waiting;                                   // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Guild_C*                           WBP_Guild;                                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GuildMemberMenu_C*                 WBP_GuildMemberMenu;                               // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<E_PalUIGuildMenuLogCategory, struct FDataTableRowHandle> GuildLogCategoryTextMap;                           // 0x0460(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, E_PalUIGuildMenuLogCategory> GuildLogStringCategoryMap;                         // 0x04B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDataTableRowHandle                    GuildExitDialogMsgID_Admin;                        // 0x0500(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    GuildExitDialogMsgID_Warning;                      // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FTimerHandle                           WaitingExitGuildTimeoutTimerHandle;                // 0x0520(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CheckNewGroupTimerHandle;                          // 0x0528(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelectingMemberMenu;                             // 0x0530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E2[0x7];                                     // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    BanPlayerDialogMsgID;                              // 0x0538(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    ChangeAdminDialogMsgID;                            // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TSoftObjectPtr<class UWBP_Guild_MemberList_C> SelectionPlayerWidget;                             // 0x0558(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, InstancedReference, HasGetValueTypeHash)
	struct FTimerHandle                           CheckBanPlayerTimerHandle;                         // 0x0588(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CheckbanPlayerTimeoutTimerHandle;                  // 0x0590(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  BanPlayerUId;                                      // 0x0598(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ChangeAdminTimeoutTimerHandle;                     // 0x05A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CheckChangeAdminTimerHandle;                       // 0x05B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_Guild_ForDisplay_WBP_Guild_K2Node_ComponentBoundEvent_0_OnClickedEditGuildNameButton__DelegateSignature();
	void BndEvt__WBP_Guild_ForDisplay_WBP_Guild_K2Node_ComponentBoundEvent_2_OnCommiedGuildName__DelegateSignature(const class FString& NewName);
	void BndEvt__WBP_Guild_ForDisplay_WBP_Guild_K2Node_ComponentBoundEvent_3_OnClickedGuildMemberButton__DelegateSignature(class UWBP_Guild_MemberList_C* Widget);
	void BndEvt__WBP_Guild_ForDisplay_WBP_Guild_K2Node_ComponentBoundEvent_4_OnClickedLeaveButton__DelegateSignature();
	void BndEvt__WBP_Guild_ForDisplay_WBP_GuildMemberMenu_K2Node_ComponentBoundEvent_6_OnClickedChangeAdmin__DelegateSignature();
	void BndEvt__WBP_Guild_ForDisplay_WBP_GuildMemberMenu_K2Node_ComponentBoundEvent_7_OnClickedBanPlayer__DelegateSignature();
	void CanClose(bool* CanCloseFlag);
	void CloseMemberSettingWindow();
	void CloseWaitingWindow();
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_Guild_ForDisplay(int32 EntryPoint);
	void OnCloseBanPlayerDialog(bool bResult);
	void OnCloseChangeAdminDialog(bool bResult);
	void OnClosed_GuildExitDialog(bool bResult);
	void OnClosed_GuildExitFailedDialog_Admin(bool bResult);
	void OnRemovedMemberInfo(const struct FGuid& PlayerUId);
	void OnTimer_CheckBanPlayer();
	void OnTimer_CheckChangeAdmin();
	void OnTimer_CheckNewGroup_WaitingExitGuild();
	void OnTimer_TimeoutBanPlayer();
	void OnTimer_TimeoutChangeAdmin();
	void OnTimer_TimeoutExitGuild();
	void OnUpdatedGuildName(const class FString& NewGuildName);
	void OnUpdatedMemberInfo(const struct FGuid& PlayerUId, const struct FPalUIGuildMemberDisplayInfo& PlayerInfo);
	void OnUpdateGroupId_WaitingExitGuild(const struct FGuid& NewGroupId);
	void OpenBanPlayerDialog();
	void OpenChangeAdminDialog();
	void OpenExitGuildDialog();
	void OpenWaitingWindow();
	void Setup();
	void SetupGuildLogCategoryButton();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Guild_ForDisplay_C">();
	}
	static class UWBP_Guild_ForDisplay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Guild_ForDisplay_C>();
	}
};
static_assert(alignof(UWBP_Guild_ForDisplay_C) == 0x000008, "Wrong alignment on UWBP_Guild_ForDisplay_C");
static_assert(sizeof(UWBP_Guild_ForDisplay_C) == 0x0005B8, "Wrong size on UWBP_Guild_ForDisplay_C");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, UberGraphFrame) == 0x000430, "Member 'UWBP_Guild_ForDisplay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, CircularThrobber_11) == 0x000438, "Member 'UWBP_Guild_ForDisplay_C::CircularThrobber_11' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, Image_20) == 0x000440, "Member 'UWBP_Guild_ForDisplay_C::Image_20' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, Overlay_Waiting) == 0x000448, "Member 'UWBP_Guild_ForDisplay_C::Overlay_Waiting' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, WBP_Guild) == 0x000450, "Member 'UWBP_Guild_ForDisplay_C::WBP_Guild' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, WBP_GuildMemberMenu) == 0x000458, "Member 'UWBP_Guild_ForDisplay_C::WBP_GuildMemberMenu' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, GuildLogCategoryTextMap) == 0x000460, "Member 'UWBP_Guild_ForDisplay_C::GuildLogCategoryTextMap' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, GuildLogStringCategoryMap) == 0x0004B0, "Member 'UWBP_Guild_ForDisplay_C::GuildLogStringCategoryMap' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, GuildExitDialogMsgID_Admin) == 0x000500, "Member 'UWBP_Guild_ForDisplay_C::GuildExitDialogMsgID_Admin' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, GuildExitDialogMsgID_Warning) == 0x000510, "Member 'UWBP_Guild_ForDisplay_C::GuildExitDialogMsgID_Warning' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, WaitingExitGuildTimeoutTimerHandle) == 0x000520, "Member 'UWBP_Guild_ForDisplay_C::WaitingExitGuildTimeoutTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, CheckNewGroupTimerHandle) == 0x000528, "Member 'UWBP_Guild_ForDisplay_C::CheckNewGroupTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, IsSelectingMemberMenu) == 0x000530, "Member 'UWBP_Guild_ForDisplay_C::IsSelectingMemberMenu' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, BanPlayerDialogMsgID) == 0x000538, "Member 'UWBP_Guild_ForDisplay_C::BanPlayerDialogMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, ChangeAdminDialogMsgID) == 0x000548, "Member 'UWBP_Guild_ForDisplay_C::ChangeAdminDialogMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, SelectionPlayerWidget) == 0x000558, "Member 'UWBP_Guild_ForDisplay_C::SelectionPlayerWidget' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, CheckBanPlayerTimerHandle) == 0x000588, "Member 'UWBP_Guild_ForDisplay_C::CheckBanPlayerTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, CheckbanPlayerTimeoutTimerHandle) == 0x000590, "Member 'UWBP_Guild_ForDisplay_C::CheckbanPlayerTimeoutTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, BanPlayerUId) == 0x000598, "Member 'UWBP_Guild_ForDisplay_C::BanPlayerUId' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, ChangeAdminTimeoutTimerHandle) == 0x0005A8, "Member 'UWBP_Guild_ForDisplay_C::ChangeAdminTimeoutTimerHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Guild_ForDisplay_C, CheckChangeAdminTimerHandle) == 0x0005B0, "Member 'UWBP_Guild_ForDisplay_C::CheckChangeAdminTimerHandle' has a wrong offset!");

}

